<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>个人博客</title>
        <subtitle></subtitle>
        <icon>https://seele-exzzz.github.io/assets/favicon.ico</icon>
        <link>https://seele-exzzz.github.io</link>
        <author>
          <name>SEELE-EXZzz(纯希)</name>
        </author>
        <description></description>
        <language>zh-CN</language>
        <pubDate>Tue, 02 Jan 2024 20:45:36 +0800</pubDate>
        <lastBuildDate>Tue, 02 Jan 2024 20:45:36 +0800</lastBuildDate>
        <item>
            <guid isPermalink="true">https://seele-exzzz.github.io/2024/01/02/r%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/</guid>
            <title></title>
            <link>https://seele-exzzz.github.io/2024/01/02/r%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/</link>
            <pubDate>Tue, 02 Jan 2024 20:45:36 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;r语言学习&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#r语言学习&#34;&gt;#&lt;/a&gt; r 语言学习&lt;/h2&gt;
&lt;h3 id=&#34;一-包管理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一-包管理&#34;&gt;#&lt;/a&gt; 一、包管理&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1.包安装&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//相当于nodejs的npm，用于下载第三方库。第一个参数为包名，第二个参数为安装源。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;install.packages(&amp;#x27;name&amp;#x27;，repos=&amp;quot;url&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;install.loadedpackages() //可以查看和管理已经加载的包&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2.包加载&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;library(packages) //包加载，引用包&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;packages::fun() //单独调用包中的某个函数。r语言貌似没有类和对象的概念&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3.包卸载&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;remove.packages(&amp;quot;name&amp;quot;) //移除某个包&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4.包更新&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;update.packages() //更新所有已安装的包&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;二-数据类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二-数据类型&#34;&gt;#&lt;/a&gt; 二、数据类型&lt;/h3&gt;
&lt;h4 id=&#34;1基本数据类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1基本数据类型&#34;&gt;#&lt;/a&gt; 1. 基本数据类型&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;数字型（numeric）：3，3.14&lt;/li&gt;
&lt;li&gt;字符串（character）: ‘a’,’abc’&lt;/li&gt;
&lt;li&gt;布尔类型（logical）：TRUE FALSE 简写：T F&lt;/li&gt;
&lt;li&gt;内置向量：pi letters（26 个字母小写） LETTERS（26 个字母大写）&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;2复杂数据类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2复杂数据类型&#34;&gt;#&lt;/a&gt; 2. 复杂数据类型&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;向量：有点类似于一维数组，用于储存多个数据。值可以是向量，如果是向量则会被展平。向量的值必须是同一种类型，如果类型不一致则会进行类型转化。&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1.生成&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = 1:3 //生成1到3的数字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = c(1,2,3) //c函数用来连接值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = c(1;3,a,3,4) //值可以是向量，向量会被自动展平。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;seq用于生成一段区间的数字向量。from为起始点，to为终点。by(可选参数)为步长，length.out生成的向量个数。生成的第一个数一定是from，但是最后一个数小于等于to。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c = seq(from,to,by,length.out)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rep函数，生成重复的向量值，each是每个值重复次数，times为向量重复次数，向each后times。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d = rep(1:3,each=2,times=3)//结果为1 1 2 2 3 3 1 1 2 2 3 3 1 1 2 2 3 3。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2.命名以及获取长度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;names(a) = name //给向量a命名&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;length(a) //获取向量a的长度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3.访问向量的值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a[index] //使用索引访问，注意这里的索引从1开始。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a[-index] //加个负号指不包括某个索引而不是从右往左数。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a[c(1:3)] //可以使用向量实现访问向量多个值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a[name] //如果给向量命名可以使用名字访问向量的值，如果要访问多个值可以用c函数连接多个名字。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a[a%%2==1] //可以使用表达式访问。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;矩阵：有点类型于二维数组，可以储存多个向量。&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1.生成&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dimnames使用列表为矩阵命名,如list(c(&amp;#x27;a&amp;#x27;,&amp;#x27;b&amp;#x27;),c(&amp;#x27;c&amp;#x27;,&amp;#x27;d&amp;#x27;)),byrow默认是false，如果是false就意味着矩阵是按列构建的。nrow为行数，ncol为列数，nrow和ncol写一个即可，data为向量。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = matrix(data,nrow,ncol,byrow=false,dimnames) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = cbind(b,c,d) //将向量按列构建&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = rbind(b,c,d) //将向量按行构建&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = diag(data) //生成对角线矩阵，斜对角线为data值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2.获取维度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nrow(a) //获取矩阵行数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ncol(a) //获取矩阵列数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dim(a) // 获取行列数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3.访问矩阵的值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a[row,col] //访问row行col列的值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a[row,] //访问row行的值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a[,col] //访问col列的值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a[-row,-col] //负号代表不访问某行或者某列&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a[name,name] //如果给矩阵命名了可以使用名字访问。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a[1:2,c(1:3)] //可以使用向量访问。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;as.vector(a) //可以将矩阵按列转化为向量&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;列表：有点类似于对象，以键值对储存数据，数据的类型可以不一致。&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1.生成&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = list(a=&amp;quot;1&amp;quot;,b=1:3,c=c(1,2)) //可以储存不同的数据，数据储存以键值对的方式储存。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2.获取长度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;length(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3.获取键&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;names(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4.获取值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a$a //与其他语言的对象不同的是，这里列表使用$访问属性&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a[[&amp;#x27;a&amp;#x27;]] //可以使用[[]]访问值,键要写成字符串的形式。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a[&amp;#x27;a&amp;#x27;] //如果是[]，则返回键与值。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a[[&amp;#x27;index&amp;#x27;]] //可以使用下标访问列表的值。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a$b = 1:3 //新增一个键值对&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;数据框：类似于二维列表或者说是可以储存不同类型值的矩阵，同样以键值对储存数据，数据的类型也可以不一样。&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1.生成&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = data.frame(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	a = 1:3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	b = c(2,3,4)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;) //与列表相同同样以键值对按列储存数据，每一个值的长度需相同但类型可以不一样。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;以下操作与矩阵或者列表一致&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2.获取维度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dim(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ncol(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nrow(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3.获取键&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dimnames(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;names(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;colnames(a) //列名为键&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rownames(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4.获取值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a[row,col] //访问row行col列的值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a[row,] //访问row行的值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a[,col] //访问col列的值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a[-row,-col] //负号代表不访问某行或者某列&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a[name,name] //通过键访问。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a[1:2,c(1:3)] //可以使用向量访问。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a[[index]] //用下标访问某一列&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a[[&amp;#x27;key&amp;#x27;]] //用键访问某一列&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a$key //用键访问某一列&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;head(a,n) //获取前n行的数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tail(a,n) //获取最后n行的数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a$b = 1:3 //新增一列&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;3数据类型转化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3数据类型转化&#34;&gt;#&lt;/a&gt; 3. 数据类型转化&lt;/h4&gt;
&lt;p&gt;type 取值范围：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;类型判断：is（a,type）返回结果为布尔值。&lt;/li&gt;
&lt;li&gt;类型转化：as.type () 转化的过程中，如果失败就会返回 NA，数字转化为字符串时，有可能会丢失部分小数四舍五入。我猜是用双精度浮点数储存小数然后再转化为字符串，因为双精度所存储的数据大小有限，导致部分小数无法储存。除了零以外的数字转化为布尔值的时候都是 T.T 转为数字类型为 1，F 转为数字类型为 0&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;三-运算相关函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#三-运算相关函数&#34;&gt;#&lt;/a&gt; 三、运算相关函数&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;c(1:3)+c(2:4) //不只是数字之间，向量之间也可以直接运算，如果长度不一致会循环运算&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c(1:3)/c(1:5) //1.00 1.00 1.00 0.25 0.40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a^b //指数运算为a的b次方&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;%% //取余&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;%/% //除法取整&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;%in% //判断某个元素是否在向量中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;exp(a) //底数为e的指数，为e的a次方&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;log(25,base=a) //base为底&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sqrt(x) //开平方&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;abs(x) //绝对值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sign(x) //判断x是正还是负，如果是正返回1，如果是负返回-1，值为零返回零&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;round(a,num) //保留num位小数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;signif(a,num) //保留num位有效数字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ceiling(x) //向上取整&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;floor(x) //向下取整&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;max(a) //获取最大值，a可以是向量，矩阵，列表，数据框。如果是列表或者数据框，则会获取每一列的最大值。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cummax(a) //返回1到当前下标中最大值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;min和cummin的用法与上面一致&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sum(a) //求和，返回一个值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cumsum //累计求和，返回一个向量记录返回1到当前下标中的求和&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;prod和cumprod求乘积与上面一致&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mean(a) //均值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;median(a) //中位数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sd(a) //标准差&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;var(a) //方差&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rev(a) //向量反转，类似于reverse方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;排序方法，decreasing默认是false，升序排列。index.return=true,返回元素原先在a中索引。partial=n只对前n个元素做排序。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sort(a，decreasing,index.return,partial=n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;table() //向量元素频数统计&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unique() //去重&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;which() //返回向量中符合条件的下标，类似于filter，不过这个是返回下标而不是值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;which.max() //如果有多个只返回下标最先出现的一个&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;which.min() //如果有多个只返回下标最先出现的一个&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;intersect() //取交集&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;setdiff() //取差集，即第一个参数有，但第二个参数没有的值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;union() //取并集&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;矩阵或者数据框的合并&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rbind() //按行合并，要求列长度相等。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cbind() //按列合并，要求行相等。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a%*%b //矩阵a和矩阵b乘法运算&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;solve(a,b) //ax=b,第二个参数没写默认为E，求x&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;连接函数，collapse和sep为可选参数用于指定以什么符号连接，如果没有的话使用空格连接。使用collapse会返回字符串，sep则会返回向量&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;paste(a,b,collapse,sep) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;与分布相关的函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;runif(n,min,max) //在[min,max]中生成n个服从均匀分布的样本&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rnorm(n,mean,sd) //生成n个服从均值为mean，标准差没sd的正态分布样本&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rbinom(n,size,prob) //生成n个做了size次，成功概率为prob的二项分布样本&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rpois(n,lambda) //生成n个具有均值为lambda的泊松分布样本&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rgeom(n,prob) //生成n个成功概率为prob的几何分布样本&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rnbinom(n,size,prob) //生成n个实验次数为size，成功概率为prob的负二项分布样本&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rexp(n,rate) //生成n个参数为rate的指数分布函数&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;四-数据的处理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#四-数据的处理&#34;&gt;#&lt;/a&gt; 四、数据的处理&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;data = read.csv(url) //读取csv文件的数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;write.csv(data,url) //将数据写入csv文件。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://seele-exzzz.github.io/2023/11/27/Video-Audio/%E7%AB%AF%E5%AF%B9%E7%AB%AF%E8%BF%9E%E6%8E%A5%E5%88%9D%E4%BD%93%E9%AA%8C/</guid>
            <title>端对端连接初体验</title>
            <link>https://seele-exzzz.github.io/2023/11/27/Video-Audio/%E7%AB%AF%E5%AF%B9%E7%AB%AF%E8%BF%9E%E6%8E%A5%E5%88%9D%E4%BD%93%E9%AA%8C/</link>
            <category term="音视频开发" scheme="https://seele-exzzz.github.io/categories/Video-Audio/" />
            <category term="webrtc" scheme="https://seele-exzzz.github.io/tags/webrtc/" />
            <pubDate>Mon, 27 Nov 2023 10:48:55 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;端对端连接初体验&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#端对端连接初体验&#34;&gt;#&lt;/a&gt; 端对端连接初体验&lt;/h3&gt;
&lt;h4 id=&#34;一-nat-stun-turn&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一-nat-stun-turn&#34;&gt;#&lt;/a&gt; 一、NAT STUN TURN&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;NAT&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;NAT 全称 Network Addresss Translation 即网络地址转换。出现的目的是为了解决 ipv4 不够用的情况同时还能保证内网安全，缺点在于 nat 会降低网速，nat 层数越多网速越慢，同时 nat 如果两边都是对称型或者一边是对称型另一边是端口限制性，就无法进行 p2p 连接了。由于 ipv4 数量不够，不足以让每台设备都拥有一个 ipv4，同时 ipv6 还未普及。所以需要 nat 将内网 ip 转化为公网 ip 中的某个端口。一般一个路由器有一个公网 ip，同时路由器会给连接上路由器的设备一个内网 ip。其中内网 ip 有三类：A 类：10.0.0.0–10.255.255.255，B 类：172.16.0.0–172.31.255.255，c 类：192.168.0.0–192.168.255.255。路由器内的设备在访问外网时，内网 ip 地址经过路由器会映射为路由器外网 ip 地址中的某个端口号，发给某个网站的服务器，此时服务器收到的 ip 地址是路由器的 ip 地址的某个端口而不是内网 ip 地址。路由器收到网站返回的响应，会根据映射表发给相应的内网 ip 的设备。&lt;/p&gt;
&lt;p&gt;NAT 有两大类型一个是锥型，另一个是对称型。当路由器内的设备访问某个网站时，路由器会生成一个外网 ip 地址，如果此时在访问另一个网站，路由器生成的外网 ip 地址也是同一个，这就是锥型，如果不同则是对称型。换句话说如果设备在访问不同的网站时，经由 NAT 生成的 ip 地址如果是同一个就是锥型，不同则是对称型。&lt;/p&gt;
&lt;p&gt;锥型还分为三种，分别是完全锥型，地址受限锥型，端口受限锥型。如果能通过 NAT 生成的 ip 地址，向该地址发生消息，内网的设备能够直接接收到该消息则是完全锥型，如果要求该内网设备发消息给某个服务器，这个服务器才能通过 NAT 生成的 ip 地址发给该内网设备则是地址受限锥型。如果要求该内网设备发消息给某个服务器，且消息必须由该服务器上收到消息的端口号发送，通过 NAT 生成的 ip 地址发送消息给内网设备则是端口受限锥型。简单的讲如果任何设备都可以通过由 NAT 映射的 ip 地址访问内网设备则是完全锥型，如果需要该内网设备访问过的设备，才能访问内网设备则是地址受限锥型。如果不仅要该内网设备访问过的设备，发送消息时还必须通过接收消息的端口号发送消息，才能访问内网设备则是端口受限锥型。&lt;/p&gt;
&lt;p&gt;从宽松程度来看，完全锥型 &amp;lt; 地址受限锥型 &amp;lt; 端口受限锥型 &amp;lt; 对称型 完全锥型最宽松，对称型最严格。&lt;/p&gt;
&lt;p&gt;从安全角度来看，完全锥型 &amp;lt; 地址受限锥型 &amp;lt; 端口受限锥型 &amp;lt; 对称型。完全锥型最不安全，对称型最安全。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;STUN&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;STUN 全称 Simple Traversal of UDP Through NATs，即简单的用 udp 实现 NAT 穿越。如果两个设备拥有公网 ip，那么这两个设备就能互相访问对方也就很轻易的完成 p2p 连接。但现实是，由于 ipv4 紧缺导致设备一般没有公网 ip，用的是由 NAT 分配的内网 ip，而内网 ip 则不能直接访问。这个时候就需要用到 STUN 进行 NAT 穿越，获取设备内网 ip 经由路由器映射下的公网 ip 地址，然后交换双方的公网 ip 地址以实现 p2p 连接。当然并不是所有设备都能 p2p 连接的，如果双方的 NAT 是对称型的或者有一方是对称型另一方是端口受限锥型则无法进行 p2p 连接，这时候就需要使用 TURN&lt;/p&gt;
&lt;p&gt;使用 STUN 时，需要在双方设置 STUN 客户端，以及一个双方能访问到的 STUN 服务器 (一般部署到公网上)  。STUN 客户端和 STUN 服务器需要进行至多三次测试，用于判断双方的 NAT 类型，是否能用 UDP 传输以及双方在 NAT 映射下的公网 ip 地址以及端口号。测试如下，图片来自 wiki。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/3/35/STUN_Algorithm3_zh_Hans.svg/1280px-STUN_Algorithm3_zh_Hans.svg.png&#34; alt=&#34;undefined&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;TURN&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;TURN 全称 Traversal Using Relays around NAT，即使用中继实现 NAT 穿越。当通信双方的 NAT 是对称型的或者有一方是对称型另一方是端口受限锥型则无法进行 p2p 连接。这时候就需要使用 TURN 服务器，获取通信双方的音视频相关的数据，再交换。使用 TURN 作中继相比 p2p 连接，延迟要高且耗费流量，如果 TURN 服务器的带宽不够还会降低双方的通信质量，这是无法进行 p2p 连接的无奈之举。&lt;/p&gt;
&lt;p&gt;相关资料：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;[详解P2P技术中的NAT穿透原理(转载) - 简书 (jianshu.com)](https://www.jianshu.com/p/f71707892eb2)&#34;&gt;详解 P2P 技术中的 NAT 穿透原理 (转载)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;[P2P技术详解(二)：P2P中的NAT穿越(打洞)方案详解 - 简书 (jianshu.com)](https://www.jianshu.com/p/9bfbcbee0abb)&#34;&gt;P2P 技术详解 (二)：P2P 中的 NAT 穿越 (打洞) 方案详解&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;[P2P技术详解(三)：P2P技术之STUN、TURN、ICE详解(转载) - 简书 (jianshu.com)](https://www.jianshu.com/p/258e7d8be2ba)&#34;&gt;P2P 技术详解 (三)：P2P 技术之 STUN、TURN、ICE 详解 (转载)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;[STUN - 维基百科，自由的百科全书 (wikipedia.org)](https://zh.wikipedia.org/wiki/STUN)&#34;&gt;STUN Wiki&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;二-candidate-ice-sdp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二-candidate-ice-sdp&#34;&gt;#&lt;/a&gt; 二、Candidate ICE SDP&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;candidate 意为候选者，有三种类型分别为 host，srflx，relay。优先度由高到低。&lt;/p&gt;
&lt;p&gt;host：如果通信双方处于一个局域网下或者说连接同一个 wife。就可以使用这个类型，优势度最高。具体收集的是，ip 地址和端口。&lt;/p&gt;
&lt;p&gt;srflx：如果通信双方不在同一个局域网但可以进行 p2p 连接，则可以走这个类型。优先度仅此于 host&lt;/p&gt;
&lt;p&gt;relay：如果双方无法进行 p2p 连接即双方可能是对称型或者一方对称另一方端口限制型的话，则选择这个类型。优先度最低，只有上面两种不行无法进行 p2p 连接才会选择。relay 和 srflx 收集的是经过 NAT 映射后的 ip 地址和端口。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ice：全称 Interactive Connectivity Establishment（交互式连通建立方式）。ice 收集所有通信方式并找到一个最佳的通信方式。比如通过 STUN 找到 srflx 类型的 candidate，通过 TURN 找到 relay 类型的 candidate。优先使用 host，如果不通则尝试 srflx，如果还不通最后使用 relay。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SDP：全称 Session Description Protocol（会话描述协议）。通信双方的设备支持的视频和音频的编解码很大概率是不同，所以需要了解通信双方所支持的音视频编解码，然后从中选择一个双方都有且最好的音视频编解码。sdp 记录了某一方支持的音视频编解码。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;三-rtcpeerconnection&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#三-rtcpeerconnection&#34;&gt;#&lt;/a&gt; 三、RTCPeerConnection&lt;/h4&gt;
&lt;p&gt;RTCPeerConnection 是一个构造函数，用于创建 offer 和 answer，设置本地的 sdp 信息以及远端的 sdp 信息。在媒体协商前需将媒体流使用 addstream 或者 addtrack 设置到 RTCPeerConnection 的实例对象中。在设置完媒体流后需要进行媒体协商，发起方需要创建 offer，将 offer 设置为本地的 sdp 信息同时发送给信令服务器。接收方收到信令服务器发送的 offer，将 offer 设置为本地描述，然后创建 answer，将 answer 设置为本地描述同时发送 answer 到信令服务器。接收方收到信令服务器的 answer 将设置远端描述。至此媒体协商完成，在 webrtc 底层会收集 candidate，此时还需要交换双方的 candidate，当交换完成就会使用 ice 找到合适的连接方式。这时候通信双方建立了一条链路。音视频数据可以通过这个链路传输了。当收到远端传来的数据还需要在本地展示出来。需注意的是，需要给 RTCPeerConnection 设置媒体流，在设置本地描述后就会触发 onicecandidate，如果在设置本地描述前没有设置媒体流的话是不会触发 oniecandidate 的。另外接收方将发送方发送的 offer 设置为远端描述后才能创建 answer。整个流程如下。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let local = document.querySelector(&amp;#x27;#local&amp;#x27;) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let remote = document.querySelector(&amp;#x27;#remote&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let stream &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//连接信令服务器&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const socket = io(&amp;#x27;http://localhost:3000&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;socket.on(&amp;#x27;connect&amp;#x27;,()=&amp;gt;&amp;#123;console.log(&amp;#x27;连接成功&amp;#x27;)&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;async function getvideo (pc)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    stream = await navigator.mediaDevices.getUserMedia(&amp;#123;video:true,audio:false&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    getOffer()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;getvideo()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//pc1为发送方&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let pc1 = new RTCPeerConnection()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;async function getOffer()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    await pc1.addStream(stream) //先设置媒体流然后再创建offer将offer设置到本地描述这时候就会触发onicecandidate。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let offer = await pc1.createOffer() //获取发送方的offer&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    await pc1.setLocalDescription(offer) //将发送方的offer设置到本地描述&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    socket.emit(&amp;#x27;sendOffer&amp;#x27;,offer) //将offer传输到信令服务器&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;socket.on(&amp;#x27;getAnswer&amp;#x27;,async(answer)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    await pc1.setRemoteDescription(answer) //将接收方的answer设置到远端描述。      &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pc1.onicecandidate=(e)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(e.candidate)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        socket.emit(&amp;#x27;candidate&amp;#x27;,e.candidate,&amp;#x27;pc1&amp;#x27;) //当发送方将offer设置到本地描述就会不断触发这个事件，此时的e.candidate有可能是null所以需加一层判断&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pc1.ontrack=(e)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    local.srcObject = e.streams[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    local.play()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; //当远程描述设置完成就会触发ontrack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;socket.on(&amp;#x27;sendCandidate&amp;#x27;,async(candidate,type)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(type===&amp;#x27;pc1&amp;#x27;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        await pc2.addIceCandidate(candidate) //接收方用addicecandidate接收发送方的candidate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        await pc1.addIceCandidate(candidate) //发送方用addicecandidate接收接收方的candidate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//pc2为接收方&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let pc2 = new RTCPeerConnection()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;socket.on(&amp;#x27;getOffer&amp;#x27;,async(offer)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    await pc2.addStream(stream) //先设置媒体流，然后将发送方的offer设置到远端描述，这时候才能创建answer，再将创建的answer设置到本地描述。这时候就会触发onicecandidate。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    await pc2.setRemoteDescription(offer) //将发送方的offer设置到远端描述&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let answer = await pc2.createAnswer() //获取接收方的answer&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    await pc2.setLocalDescription(answer) //将接收方的answer设置到本地描述&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    socket.emit(&amp;#x27;sendAnswer&amp;#x27;,answer) //将answer传输到信令服务器    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pc2.onicecandidate=(e)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(e.candidate)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	//当接受方将answer设置到本地描述就会不断触发这个事件，因为e.candidate有可能是null所以这里加个判断&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        socket.emit(&amp;#x27;candidate&amp;#x27;,e.candidate,&amp;#x27;pc2&amp;#x27;) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pc2.ontrack=(e)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    remote.srcObject = e.streams[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    remote.play()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; //当远程描述设置完成就会触发ontrack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//信令服务器&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const express = require(&amp;quot;express&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const &amp;#123; createServer &amp;#125; = require(&amp;quot;http&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const &amp;#123; Server &amp;#125; = require(&amp;quot;socket.io&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const app = express();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const httpServer = createServer(app);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const io = new Server(httpServer,&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cors : &amp;#x27;127.0.0.1:5500&amp;#x27; //允许请求的地址 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.on(&amp;quot;connection&amp;quot;, (socket) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	socket.on(&amp;#x27;sendOffer&amp;#x27;,(offer)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		socket.emit(&amp;#x27;getOffer&amp;#x27;,offer)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	socket.on(&amp;#x27;sendAnswer&amp;#x27;,(answer)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		socket.emit(&amp;#x27;getAnswer&amp;#x27;,answer)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	socket.on(&amp;#x27;candidate&amp;#x27;,(candidate)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		socket.emit(&amp;#x27;sendCandidate&amp;#x27;,candidate)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;httpServer.listen(3000);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;相关资料：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;[WebRTC这么火🔥，前端靓仔，请收下这篇入门教程 - 掘金 (juejin.cn)](https://juejin.cn/post/7266417942182608955)&#34;&gt;WebRTC 这么火🔥，前端靓仔，请收下这篇入门教程&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;四-rtcdatachannel&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#四-rtcdatachannel&#34;&gt;#&lt;/a&gt; 四、RTCDataChannel&lt;/h4&gt;
&lt;p&gt;可以使用 RTCDataChannel 可以传输文本，文件以及图片。RTCDataChannel 是由 RTCPeerConnection 实例对象的 createDataChannel () 创建的。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let channel = pc1.createDataChannel(&amp;#x27;chat&amp;#x27;) //使用createDataChannel创建通道，第一个参数是通道的名字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let channel1 = pc1.createDataChannel(&amp;#x27;123&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;channel.onopen=(e)=&amp;gt;&amp;#123; //通道建立后触发这个onopen事件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    channel.send(&amp;#x27;hello,world&amp;#x27;) //可以使用send方法发送消息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;channel.onmessage=(e)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    console.log(e.data,&amp;#x27;pc1&amp;#x27;) //接收消息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//每当建立一个通道就会触发ondatachannel&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pc2.ondatachannel=(e)=&amp;gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let channel = e.channel&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    channel.onopen=(e)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		channel.send(&amp;#x27;你好世界&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    channel.onmessage=(e)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        console.log(e.data,&amp;#x27;pc2&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://seele-exzzz.github.io/2023/11/22/Video-Audio/%E5%B9%BB%E5%BD%B1%E5%9D%A6%E5%85%8B%E5%88%B6%E5%A4%87/</guid>
            <title>幻影坦克制备</title>
            <link>https://seele-exzzz.github.io/2023/11/22/Video-Audio/%E5%B9%BB%E5%BD%B1%E5%9D%A6%E5%85%8B%E5%88%B6%E5%A4%87/</link>
            <category term="音视频开发" scheme="https://seele-exzzz.github.io/categories/Video-Audio/" />
            <category term="webrtc" scheme="https://seele-exzzz.github.io/tags/webrtc/" />
            <pubDate>Wed, 22 Nov 2023 19:06:34 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;幻影坦克&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#幻影坦克&#34;&gt;#&lt;/a&gt; 幻影坦克&lt;/h3&gt;
&lt;h4 id=&#34;1介绍&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1介绍&#34;&gt;#&lt;/a&gt; 1. 介绍&lt;/h4&gt;
&lt;p&gt;​	有些图片在 qq 或者贴吧等平台上，正常情况是一张图片，但是打开放大变成了另一种图片，因为其表现形式像红色警戒的幻影坦克，因此将这类图片称作幻影坦克。其实这类图片是 png 图片，众所周知 png 图片有透明度，正是因为这个特性就可以让图片在不同背景下显示出不同图片成为可能。接下来介绍如何制作这类图片。&lt;/p&gt;
&lt;h4 id=&#34;2图像混合&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2图像混合&#34;&gt;#&lt;/a&gt; 2. 图像混合&lt;/h4&gt;
&lt;p&gt;​	在调用 canvas 的 context 的 getImageData 方法后，会返回一个对象，其中 data 属性包含这个图片的像素颜色信息。每个像素有四个数据分别是 rgba，其中第四个数据是不透明度。这四个数据的取值范围均为 0-255。a 的数值越大越不透明，255 为完全不透明，0 为完全透明。那如果取值在这个中间图片会是什么样子的呢。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;katex-display&#34;&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34; display=&#34;block&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msub&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mi&gt;α&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;α&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;r_{mix} = r_1*α+ r_2*(1-α)
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.5806em;vertical-align:-0.15em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3117em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;mi&lt;/span&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6153em;vertical-align:-0.15em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3011em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;∗&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6667em;vertical-align:-0.0833em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.0037em;&#34;&gt;α&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6153em;vertical-align:-0.15em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3011em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;∗&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.0037em;&#34;&gt;α&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;katex-display&#34;&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34; display=&#34;block&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msub&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mi&gt;α&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;α&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;g_{mix} = g_1*α+ g_2*(1-α)
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.625em;vertical-align:-0.1944em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3117em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;mi&lt;/span&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6597em;vertical-align:-0.1944em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3011em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;∗&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6667em;vertical-align:-0.0833em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.0037em;&#34;&gt;α&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6597em;vertical-align:-0.1944em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3011em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;∗&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.0037em;&#34;&gt;α&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;katex-display&#34;&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34; display=&#34;block&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msub&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mi&gt;α&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;α&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;b_{mix} = b_1*α+ b_2*(1-α)
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8444em;vertical-align:-0.15em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3117em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;mi&lt;/span&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8444em;vertical-align:-0.15em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3011em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;∗&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6667em;vertical-align:-0.0833em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.0037em;&#34;&gt;α&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8444em;vertical-align:-0.15em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3011em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;∗&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.0037em;&#34;&gt;α&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;​	其中 mix 下标图像混合后的色值，1 下标为上面的图片色值，2 下标为下面的图片或者说背景色值。&lt;/p&gt;
&lt;p&gt;​	可以做个实验，左边是色值改为混合后的色值，其中背景是白色，右边是改变不透明度，其背景是白色，每隔 100ms 改变一次，最后的效果一致。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8a1493933bb8447cbae82b0fb39b2696~tplv-k3u1fbpfcp-jj-mark:3024:0:0:0:q75.awebp#?w=834&amp;amp;h=606&amp;amp;s=756632&amp;amp;e=gif&amp;amp;f=50&amp;amp;b=f6f1ea&#34; alt=&#34;4d66a07e-3f0c-4a8d-b6c1-d6e6250a0a26.gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;有了上面的公式一切都好办了。根据这个公式，我们可以得出一张 png 图片在不同的背景下的色值。如果把在白色背景下呈现的图片叫做表图，在黑色背景下呈现的图片叫做里图。在知道了表图以及里图的色值，就可以根据这个公式计算出这张 png 图片的色值以及透明度。这样就可以让这张图片在黑白不同的背景下呈现出不同的图片。&lt;/p&gt;
&lt;h4 id=&#34;3-从隐藏一个阿卡林开始&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-从隐藏一个阿卡林开始&#34;&gt;#&lt;/a&gt; 3. 从隐藏一个阿卡林开始&lt;/h4&gt;
&lt;p&gt;如果我想让表图是白色的图片，让里图是阿卡林的话，代入公式可得，下标为表代表表图的色值，下标为里代表里图的色值。白色的 rgb 为 255，黑色的 rgb 为 0。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;katex-display&#34;&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34; display=&#34;block&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mtext&gt;表&lt;/mtext&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mi&gt;α&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;255&lt;/mn&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;α&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;r_表 = r*α+ 255*(1-α)
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.5806em;vertical-align:-0.15em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3283em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord cjk_fallback mtight&#34;&gt;表&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.4653em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;∗&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6667em;vertical-align:-0.0833em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.0037em;&#34;&gt;α&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;255&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;∗&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.0037em;&#34;&gt;α&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;katex-display&#34;&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34; display=&#34;block&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mtext&gt;表&lt;/mtext&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mi&gt;α&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;255&lt;/mn&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;α&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;g_表 = g*α+ 255*(1-α)
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.625em;vertical-align:-0.1944em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3283em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord cjk_fallback mtight&#34;&gt;表&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6597em;vertical-align:-0.1944em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;∗&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6667em;vertical-align:-0.0833em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.0037em;&#34;&gt;α&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;255&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;∗&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.0037em;&#34;&gt;α&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;katex-display&#34;&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34; display=&#34;block&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mtext&gt;表&lt;/mtext&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mi&gt;α&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;255&lt;/mn&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;α&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;b_{表} = b*α+ 255*(1-α)
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8444em;vertical-align:-0.15em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3283em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord cjk_fallback mtight&#34;&gt;表&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6944em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;∗&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6667em;vertical-align:-0.0833em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.0037em;&#34;&gt;α&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;255&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;∗&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.0037em;&#34;&gt;α&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;katex-display&#34;&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34; display=&#34;block&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mtext&gt;里&lt;/mtext&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mi&gt;α&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;r_里 = r*α
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.5806em;vertical-align:-0.15em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3283em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord cjk_fallback mtight&#34;&gt;里&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.4653em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;∗&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.4306em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.0037em;&#34;&gt;α&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;katex-display&#34;&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34; display=&#34;block&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mtext&gt;里&lt;/mtext&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mi&gt;α&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;g_里 = g*α
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.625em;vertical-align:-0.1944em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3283em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord cjk_fallback mtight&#34;&gt;里&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6597em;vertical-align:-0.1944em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;∗&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.4306em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.0037em;&#34;&gt;α&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;katex-display&#34;&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34; display=&#34;block&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mtext&gt;里&lt;/mtext&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mi&gt;α&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;b_{里} = b*α
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8444em;vertical-align:-0.15em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3283em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord cjk_fallback mtight&#34;&gt;里&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6944em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;∗&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.4306em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.0037em;&#34;&gt;α&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;katex-display&#34;&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34; display=&#34;block&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;α&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mtext&gt;里&lt;/mtext&gt;&lt;/msub&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mtext&gt;表&lt;/mtext&gt;&lt;/msub&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mn&gt;255&lt;/mn&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mtext&gt;里&lt;/mtext&gt;&lt;/msub&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mtext&gt;表&lt;/mtext&gt;&lt;/msub&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mn&gt;255&lt;/mn&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mtext&gt;里&lt;/mtext&gt;&lt;/msub&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mtext&gt;表&lt;/mtext&gt;&lt;/msub&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mn&gt;255&lt;/mn&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;α = (r_里-r_表)/255+1=(g_里-g_表)/255+1=(b_里-b_表)/255+1
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.4306em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.0037em;&#34;&gt;α&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3283em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord cjk_fallback mtight&#34;&gt;里&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3283em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord cjk_fallback mtight&#34;&gt;表&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/255&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3283em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord cjk_fallback mtight&#34;&gt;里&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3283em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord cjk_fallback mtight&#34;&gt;表&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/255&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3283em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord cjk_fallback mtight&#34;&gt;里&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3283em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord cjk_fallback mtight&#34;&gt;表&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/255&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;katex-display&#34;&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34; display=&#34;block&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mtext&gt;里&lt;/mtext&gt;&lt;/msub&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;α&lt;/mi&gt;&lt;mtext&gt;，&lt;/mtext&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mtext&gt;里&lt;/mtext&gt;&lt;/msub&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;α&lt;/mi&gt;&lt;mtext&gt;，&lt;/mtext&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mtext&gt;里&lt;/mtext&gt;&lt;/msub&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;α&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;r=r_里/α，g=g_里/α，b=b_里/α
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.4306em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3283em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord cjk_fallback mtight&#34;&gt;里&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.0037em;&#34;&gt;α&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3283em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord cjk_fallback mtight&#34;&gt;里&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.0037em;&#34;&gt;α&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3283em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord cjk_fallback mtight&#34;&gt;里&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.0037em;&#34;&gt;α&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;可以发现要想完美实现需求的话，需要里图与表图的 rgb 差值相同才行，这也是为啥大部分的幻影坦克用的基本是灰度图的原因，当 rgb 相同的时候颜色就是灰色的，数值越大越白，越小越黑。另外表图是白色也是不可能完成的需求，如果要求表图为白色就要求混合后的图片要么 rgb 都为 255，要么不透明度为零。但是可以降低要求让表图的 rgb 尽可能大，尽可能偏白。如果将表图 rgb 设置为 250 灰白，一般人看不出会认为是白色。同时将阿卡林的图片变成灰度图。灰度的公式如下&lt;/p&gt;
&lt;p&gt;avg =0.299 * r +0.587 * g +0.114 * b 将 rgb 都设置成 avg 就行，至于这三个系数是怎么来的，老实说我也不清楚，但是效果挺好的。于是就得到了如下的公式。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;katex-display&#34;&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34; display=&#34;block&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;250&lt;/mn&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mi&gt;α&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;255&lt;/mn&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;α&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mtext&gt;里&lt;/mtext&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mi&gt;α&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;250 = rgb*α+255(1-α),rgb_里 = rbg*α
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;250&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8889em;vertical-align:-0.1944em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;∗&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6667em;vertical-align:-0.0833em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.0037em;&#34;&gt;α&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;255&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.0037em;&#34;&gt;α&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3283em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord cjk_fallback mtight&#34;&gt;里&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8889em;vertical-align:-0.1944em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;∗&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.4306em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.0037em;&#34;&gt;α&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;katex-display&#34;&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34; display=&#34;block&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;α&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mtext&gt;里&lt;/mtext&gt;&lt;/msub&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;250&lt;/mn&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mn&gt;255&lt;/mn&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mtext&gt;里&lt;/mtext&gt;&lt;/msub&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;α&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;α = (rgb_里-250)/255+1,rgb = rgb_里/α
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.4306em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.0037em;&#34;&gt;α&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3283em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord cjk_fallback mtight&#34;&gt;里&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;250&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/255&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8889em;vertical-align:-0.1944em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3283em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord cjk_fallback mtight&#34;&gt;里&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.0037em;&#34;&gt;α&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7355fbacf3cb4450a33ece9b60a1b5b0~tplv-k3u1fbpfcp-jj-mark:3024:0:0:0:q75.awebp#?w=956&amp;amp;h=350&amp;amp;s=1130756&amp;amp;e=gif&amp;amp;f=175&amp;amp;b=faf9f7&#34; alt=&#34;57d0c0f6-80f6-4cd4-9650-19e5edcab2db.gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;​	可以发现效果非常的 amazing 啊，另外在背景颜色为白色的情况下，表图其实不是白色，看的出来有点灰准确的讲是 rgb 为 250 的灰白色，不细看还看不出来。&lt;/p&gt;
&lt;p&gt;​	那如果就是要里图是有颜色的，而不是灰色图的话要怎么办。可以尝试一下让表图的 rgb 不相同，试着让其尽量大偏白，这就相当于让一个不透明度变小，或者说选择里图中 rgb 最小的值进行计算不透明度，从而计算表图的 rgb。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/90579b9e590a47c29af7a43f71b69788~tplv-k3u1fbpfcp-jj-mark:3024:0:0:0:q75.awebp#?w=948&amp;amp;h=338&amp;amp;s=2813280&amp;amp;e=gif&amp;amp;f=150&amp;amp;b=f9efe0&#34; alt=&#34;66aa414c-870d-4af5-857f-fe7cd59d5805.gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8d71970490ff47ff9cc6b8d8d9d93dcd~tplv-k3u1fbpfcp-jj-mark:3024:0:0:0:q75.awebp#?w=790&amp;amp;h=324&amp;amp;s=1820951&amp;amp;e=gif&amp;amp;f=175&amp;amp;b=f2e2d0&#34; alt=&#34;72266d9f-8b1d-421d-a7e6-a320457f17e9.gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;​	最终的效果，只能说在黑色背景下图片是完美显示，只是在白色背景下隐藏不了，加一层灰色的遮罩都隐藏不了，因为表图的 rgb 值不同所以会表现出彩色，图片隐藏不住。换句话说，如果想在黑色背景下完美展示，并在白色背景下完美隐藏的彩色图片理论上是不存在的。&lt;/p&gt;
&lt;h4 id=&#34;4-制作一个真正的幻影坦克&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-制作一个真正的幻影坦克&#34;&gt;#&lt;/a&gt; 4. 制作一个真正的幻影坦克&lt;/h4&gt;
&lt;p&gt;​	如果有一张图片想要在白色背景下展示叫做表图，另一张图片想要在黑色背景下展示加做里图。代入公式可得。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;katex-display&#34;&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34; display=&#34;block&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;α&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mtext&gt;里&lt;/mtext&gt;&lt;/msub&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mtext&gt;表&lt;/mtext&gt;&lt;/msub&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mn&gt;255&lt;/mn&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mtext&gt;里&lt;/mtext&gt;&lt;/msub&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;α&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;α_{rgb} = (rgb_里-rgb_表)/255+1,rgb = rgb_里/α
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.7167em;vertical-align:-0.2861em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.0037em;&#34;&gt;α&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3361em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;b&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.2861em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3283em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord cjk_fallback mtight&#34;&gt;里&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3283em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord cjk_fallback mtight&#34;&gt;表&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/255&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8889em;vertical-align:-0.1944em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3283em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord cjk_fallback mtight&#34;&gt;里&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.0037em;&#34;&gt;α&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;可以发现，要想完美实现一个幻影坦克就要表图的色值大于里图的色值，不然的话 α 会大于一，出现异样，具体表现就是在白色背景下会显示出里图。为了更好的隐藏里图可以让里图更暗一些，具体的做法就是将里图的色值等比例的缩小，不过缩的太小，里图会变的很暗，在黑色背景就不太好显示。在选择里图的时候可以考虑色值比较小的图片。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/05fcb0852c6f4cad8705e227683dac4e~tplv-k3u1fbpfcp-jj-mark:3024:0:0:0:q75.awebp#?w=1328&amp;amp;h=386&amp;amp;s=1926797&amp;amp;e=gif&amp;amp;f=225&amp;amp;b=f0efec&#34; alt=&#34;c024f1ab-1aec-4c3d-bf99-ac9f1a02300d.gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;相关资料&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;[『整活』幻影坦克 基础版_哔哩哔哩_bilibili](https://www.bilibili.com/video/BV1kV411v7fR/?spm_id_from=333.880.my_history.page.click)&#34;&gt;『整活』幻影坦克 基础版&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;[幻影坦克架构指南(一) - 知乎 (zhihu.com)](https://zhuanlan.zhihu.com/p/31164700)&#34;&gt;幻影坦克架构指南 (一)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE4Mi45Mi4xODUuMTQ5LzIwMjEvMDIvMDcv5bm75b2x5Z2m5YWL5Zu+54mH55qE5Y6f55CG5ZKM5Lu75oSP5Lik5byg5Zu+54mH5ZCI5oiQ5bm75b2x5Z2m5YWL5Zu+55qE5a6M5aSH5oCn6K6o6K66&#34;&gt;“幻影坦克” 图片的原理和任意两张图片合成幻影坦克图的完备性讨论&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://seele-exzzz.github.io/2023/11/14/Video-Audio/websocket%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</guid>
            <title>websocket的基本使用</title>
            <link>https://seele-exzzz.github.io/2023/11/14/Video-Audio/websocket%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</link>
            <category term="音视频开发" scheme="https://seele-exzzz.github.io/categories/Video-Audio/" />
            <category term="webrtc" scheme="https://seele-exzzz.github.io/tags/webrtc/" />
            <pubDate>Tue, 14 Nov 2023 15:48:00 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;websocket的基本使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#websocket的基本使用&#34;&gt;#&lt;/a&gt; websocket 的基本使用&lt;/h3&gt;
&lt;p&gt;websocket 是全双工，可以做到客户端与服务端的实时连接，在直播，即时通讯，等要求实时传输的场景下有广泛的运用。&lt;/p&gt;
&lt;h3 id=&#34;一-基本使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一-基本使用&#34;&gt;#&lt;/a&gt; 一、基本使用&lt;/h3&gt;
&lt;h4 id=&#34;1-引用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-引用&#34;&gt;#&lt;/a&gt; 1. 引用&lt;/h4&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1.前端&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let socket = new WebSocket(url) //注意url以ws或者wss开头，而不是http或者https,当调用这个构造函数的时候会连接一下。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;socket实例对象上的方法与事件:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onclose:连接关闭事件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onerror:连接失败事件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onopen:连接成功事件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onmessage:从服务器上获取数据时的事件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;close:断开连接&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;send:发送数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2.后端&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm install ws // 下载ws，一个支持websocket的第三方库&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const WebSocket = require(&amp;#x27;ws&amp;#x27;) //引入构造函数websocket&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const ws = new WebSocket.Server(&amp;#123;port:3000&amp;#125;) //调用websocket的server方法并传入port参数确定监听的端口号&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;2-连接断连发送接收&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-连接断连发送接收&#34;&gt;#&lt;/a&gt; 2. 连接，断连，发送，接收&lt;/h4&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1.前端&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;socket.onopen=()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	socket.send(&amp;#x27;hello，world&amp;#x27;) //向服务器发送消息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	socket.close() //断开连接&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; //连接成功后的事件。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;socket.onmessage=(data)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	console.log(data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;//当服务器向客户端发送消息后的事件。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2.后端&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ws.on(&amp;#x27;connection&amp;#x27;,(server)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//后端两种方法接收数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	server.on(&amp;#x27;message&amp;#x27;,(data)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		console.log(data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		console.log(data.toString(&amp;#x27;utf8&amp;#x27;)) //可以使用toString将buffer转化为字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;) //这时传来的数据是buffer二进制格式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	server.onmessage=(data)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		console.log(data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125; //这时传来的数据是json格式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	server.on(&amp;#x27;close&amp;#x27;,()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;)连接断开后的事件。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)// ws为实例对象，其中有connection的事件，每有一次连接就会调用一次，客户端可以有多次连接。同时，回调函数上有一个参数，之后的连接关闭，以及发送，接受事件都在这个参数上而不在实例对象上&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;3心跳机制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3心跳机制&#34;&gt;#&lt;/a&gt; 3. 心跳机制&lt;/h4&gt;
&lt;p&gt;​	当客户端与服务端断开连接时，是没有事件回调的，这时如果客户端往服务端发送消息时，会触发 onclose 事件，如果在 onclose 重连，那么之前发送的消息就没了。为了保障客户端与服务端一直维持连接，客户端应该时不时发送消息给服务端，如果某次消息没有回应或者说回应的时间超过了设置超时的时间便发起重新连接直至连接成功。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;前端&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let url = &amp;#x27;ws://localhost:3000&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let socket,heart,localConnection = false&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const createWebSocket=(url)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    try&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        socket = new WebSocket(url)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;catch&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        connection(url)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const connection=(url)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(heart&amp;amp;&amp;amp;heart.live) return //如果有心脏且在跳动就没有必要连接了&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(localConnection) return //类似节流的写法，一段时间内连接一次，避免重复连接&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    localConnection = true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    createWebSocket(url)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    setTimeout(()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        localConnection = false&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,2000)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;createWebSocket(url)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class Heart&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    constructor(time,timeOut)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.time = time&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.timeOut = timeOut&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.live = false&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.startTime = null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.connectionTime = null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    start()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let self = this&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.startTime = setTimeout(()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            socket.send(&amp;#x27;ping&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            self.connectionTime = setTimeout(()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                connection(url)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;,self.timeOut) //如果在设置超时时间内有回应便会在onmessage处重置心跳将这个定时器清除，如果这个定时器触发了说明了超时，连接可能失败。这时重新连接&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;,this.time) //每次接收到消息都会重置心跳重新启动，这里使用setTimeout，而不是setInterval。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    reset(time1,time2)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let time3 = time1?time1:this.time&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let time4 = time2?time2:this.timeOut&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        clearTimeout(this.connectionTime)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        clearTimeout(this.timer)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return new Heart(time3,time4)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; //重置，将定时器清除同时可以更改心跳间隔以及超时时间。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;socket.onopen=()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    heart = new Heart(30000,1000) //每隔30秒跳动一次，超时时间为1秒&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    heart.start() //开始跳动&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;//连接上后开始跳动心脏&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;socket.onclose=()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    console.log(&amp;#x27;连接断开&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    heart.live = false&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    connection(url)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;//连接断开时重新连接&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;socket.onmessage=(message)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    heart = heart.reset() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    heart.start()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    heart.live = true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(message==&amp;#x27;pong&amp;#x27;) return &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;//收到消息，说明连接还在，将心脏的live改为true同时重置心脏的跳动，类似防抖的写法。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;相关资料&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;[WebSocket加入心跳包防止自动断开连接 - 简书 (jianshu.com)](https://www.jianshu.com/p/1141dcf6de3e)&#34;&gt;WebSocket 加入心跳包防止自动断开连接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;[ws中文文档|ws js中文教程|解析 | npm中文文档 (npmdoc.org)](http://www.npmdoc.org/wszhongwenwendangws-jszhongwenjiaochengjiexi.html#how-to-detect-and-close-broken-connections)&#34;&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5ucG1kb2Mub3JnL3dzemhvbmd3ZW53ZW5kYW5nd3MtanN6aG9uZ3dlbmppYW9jaGVuZ2ppZXhpLmh0bWw=&#34;&gt;ws 中文文档 | ws js 中文教程 | 解析&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;二-socketio的基本使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二-socketio的基本使用&#34;&gt;#&lt;/a&gt; 二、socket.io 的基本使用&lt;/h3&gt;
&lt;p&gt;​	socket.io 是一个第三方库，集成了 websocket, 如果客户端不支持 websocket 的话，会转为 http。同时 websocket 客户端无法访问使用 socket.io 的服务端，socket.io 的客户端也无法访问 websocket 的服务端，即如果使用 socket.io 的话，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1zb2NrZXQtdnQ5aXo3c2p3ZWs5dnU3cW12bm52OGJxNXFkYTQ5NzBkdnUwYS5pbw==&#34;&gt;服务端和客户端都要使用 socket.io&lt;/span&gt;。其中还有 room 和断开重连，在制作直播间以及即时通讯软件的群聊的功能的时候会很方便。重新连接，内置心跳机制。注意，websocket 支持跨域，所以 websocket 并不是一个安全的连接方式，但是 socket.io 不支持跨域，所以在后端使用 socket.io 的时候要使用 cors 解决跨域问题。&lt;/p&gt;
&lt;h4 id=&#34;1引用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1引用&#34;&gt;#&lt;/a&gt; 1. 引用&lt;/h4&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;前端&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script src=&amp;quot;https://cdn.socket.io/4.7.2/socket.io.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; //使用cdn引用，也可以下载到本地直接引用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	主要这里的url是http或者https，如果是ws或者wss则无法连接。如果不传参数，默认请求地址与客户端同域，另外如果没有设置autoConnect为false，调用则会连接。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    const socket = io(url,options)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;后端&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm install socket.io //安装最新版本&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm install socket.io@version //安装指定版本&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//纯socket写法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const &amp;#123;Server&amp;#125; = require(&amp;#x27;socket.io&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const io = new Server(&amp;#123;port,&amp;#123;option&amp;#125;&amp;#125;) //port端口号，options配置对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.on(&amp;#x27;connection&amp;#x27;,(socket)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//使用express框架写法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const express = require(&amp;quot;express&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const &amp;#123; createServer &amp;#125; = require(&amp;quot;http&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const &amp;#123; Server &amp;#125; = require(&amp;quot;socket.io&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const app = express();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const httpServer = createServer(app);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const io = new Server(httpServer, &amp;#123; /* options */ &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.on(&amp;quot;connection&amp;quot;, (socket) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  // ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;httpServer.listen(3000);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//处理跨域&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const io = new Server(httpServer,&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cors : url //允许请求的地址 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;2-基本使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-基本使用&#34;&gt;#&lt;/a&gt; 2. 基本使用&lt;/h4&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;前端&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const socket = io(url)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(socket.id) //undefined&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;socket.on(&amp;#x27;connect&amp;#x27;,()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	console.log(socket.id) //在建立连接之后socket上有一个由20个字符串组成的id值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	socket.on(&amp;#x27;connect&amp;#x27;,()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;)//连接事件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	socket.on(&amp;#x27;disconnect&amp;#x27;,()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		socket.connect()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;)//断连事件，如果触发了可以重新连接&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	socket.emit(eventName,args)//发送，第一个参数是事件名称，后面可以传入多个参数，参数也可以是回调函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	socket.emit(&amp;#x27;1&amp;#x27;,(res)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		console.log(res) //res为后端调用时传入的参数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	socket.on(&amp;#x27;1&amp;#x27;,(cb)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		cb(&amp;#x27;hello,world&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;)//这边前端传了一个函数，后端获取后可以调用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	注意这时会在前端打印这个消息，而不是后端，本质上是前端给后端传一个函数，后端把参数传过去，前端接收到后端的参数后调用。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	socket.on(eventName,()=&amp;gt;&amp;#123;&amp;#125;)//监听，第一个参数是事件名称，后面是回调函数。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	socket.io的接收和发送的写法与electron和vue的eventBus一致。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	socket.once(eventName,()=&amp;gt;&amp;#123;&amp;#125;)//与on不同的是这个调用一次就寄了，&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	socket.off(eventName，function) //删除某个监听事件,第二个参数可选，如果不传参就删除所有监听事件。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	socket.listeners(eventName) //获取某一个事件的回调函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	socket,timeout(time).emit(eventName,()=&amp;gt;&amp;#123;&amp;#125;) //给事件设置一个时间，如果超时则触发后面的回调函数，与心跳机制的超时类似。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	socket.close() //断连&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	socket.connet() //连接&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;3广播房间&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3广播房间&#34;&gt;#&lt;/a&gt; 3. 广播，房间&lt;/h4&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;后端&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.on(&amp;#x27;connection&amp;#x27;,(socket)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	socket.emit(eventName，args) //向本次与服务端相连的客户端发送消息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	socket.broadcast.emit() //除了本次连接外的其他连接发送消息。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	socket.join(room) //加入房间&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	socket.leave(room) //离开房间&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	socket.to(room).emit() //给某个房间广播&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	socket.to(room1).to(room2) //同时给多个房间发消息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	socket.to(socket.id) //每个连接都会生成一个id值，给某个客户端发送消息。实现私人消息。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;相关资料&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;[Socket.IO](https://socket.io/zh-CN/)&#34;&gt;Socket.IO 官方文档&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;多人聊天室&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#多人聊天室&#34;&gt;#&lt;/a&gt; 多人聊天室&lt;/h3&gt;
&lt;p&gt;实现功能，用户可以选择一个创建或者加入一个聊天室，聊天室会展示该房间的所有用户。用户可以发送消息以及文件。因为时间紧做的比较粗糙，页面简陋且还有一些功能比如给用户加头像，用户名唯一。同时还有一些 bug 比如图片在接收的时候，拿到的 url 有点问题。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;178&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;179&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;180&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;181&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;182&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;183&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;184&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;185&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;186&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;187&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;188&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;189&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;190&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;191&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;193&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;194&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;195&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;196&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;197&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;198&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;199&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;200&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;201&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;202&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;203&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;204&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;205&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;206&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;207&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;208&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;209&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;210&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;211&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;212&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;213&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;214&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;215&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;216&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;217&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;218&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;219&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;220&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;221&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;222&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;223&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;224&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;225&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;226&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;227&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;228&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;229&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;230&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;231&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;232&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;233&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;234&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;235&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;236&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;237&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;238&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;239&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;240&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;241&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;242&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;243&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;244&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;245&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;246&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;247&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;248&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;249&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;250&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;251&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;252&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;253&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;254&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;255&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;256&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;257&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;258&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;259&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;260&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;261&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;262&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;263&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;264&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;265&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;266&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;267&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;268&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;269&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;270&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;271&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;272&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;273&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;274&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;275&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;276&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;277&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;278&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;279&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;280&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;281&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;282&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;283&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;284&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;285&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;286&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;287&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;288&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;289&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;290&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;291&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;292&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;293&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;294&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;295&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;296&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;297&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;298&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;299&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;300&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;301&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;302&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;303&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;304&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;305&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;306&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;307&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;308&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;309&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;310&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;311&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;312&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;313&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;314&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;315&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;316&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;317&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;318&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;319&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;320&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;321&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;322&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;323&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;324&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;325&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;前端&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;script src=&amp;quot;https://cdn.socket.io/4.7.2/socket.io.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        #user&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            position: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            background-image: linear-gradient(to top, #fad0c4 0%, #fad0c4 1%, #ffd1ff 100%);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            width: 600px;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            height: 300px;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            left: 50%;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            top: 50%;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            margin-left: -300px;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            margin-top: -150px;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        #roomList&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            width: 300px;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            margin: 40px;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        #userData&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            width: 300px;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            margin: 0 auto;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        #join&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            display: block;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            width: 200px;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            background-image: linear-gradient(120deg, #a1c4fd 0%, #c2e9fb 100%);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            height: 50px;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            margin: 40px auto;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        input&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            margin: 4px;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            padding: 4px;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        #ul&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            display: flex;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ul&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            list-style: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        li&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            list-style: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            margin: 0 4px;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        #chat&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            position: relative;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            background-color: #a1c4fd;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            top: 100px;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            left: 200px;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            width: 1600px;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            height: 800px;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        #left&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            position: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            background-color: #c2e9fb;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            width: 60%;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            height: 90%;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            left: 5%;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            top: 5%;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        #right&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            position: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            background-color: #ffd1ff;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            width: 25%;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            height: 80%;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            left: 70%;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            top: 10%;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        #textarea&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            position: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            top: 95%;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            width: 80%;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            left: 12%;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            resize: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            overflow: hidden;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        #sendFile&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            position: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            top: 95%;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            width: 10%;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            text-align: center;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            margin: 10px;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            background-color: #ffd1ff;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        #sendmsg&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            position: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            top: 95%;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            left: 90%;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            width: 10%;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            text-align: center;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            margin: 10px;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        #webchat&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            position: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            background-color: antiquewhite;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            top: 4%;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            width: 100%;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            height: 90%;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;div id=&amp;quot;user&amp;quot; &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;div id=&amp;quot;roomList&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;lt;ul id=&amp;quot;list&amp;quot;&amp;gt;房间列表:&amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;div id=&amp;quot;userData&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;lt;div &amp;gt;用户名:&amp;lt;input id=&amp;quot;userName&amp;quot;/&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;lt;div &amp;gt;房间号:&amp;lt;input id=&amp;quot;roomName&amp;quot;/&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;div&amp;gt;&amp;lt;button id=&amp;quot;join&amp;quot;&amp;gt;加入&amp;lt;/button&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;div id=&amp;quot;chat&amp;quot; style=&amp;quot;display: none;&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;div id=&amp;quot;left&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            房间号:&amp;lt;span id=&amp;quot;roomNumber&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;lt;div id=&amp;quot;webchat&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;lt;div id=&amp;quot;sendFile&amp;quot;&amp;gt;发送文件&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;lt;textarea name=&amp;quot;&amp;quot; id=&amp;quot;textarea&amp;quot;&amp;gt;&amp;lt;/textarea&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;lt;div id=&amp;quot;sendmsg&amp;quot;&amp;gt;发送&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;div id=&amp;quot;right&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;lt;ul id=&amp;quot;userList&amp;quot;&amp;gt;用户列表&amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let userName = document.querySelector(&amp;#x27;#userName&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let roomName = document.querySelector(&amp;#x27;#roomName&amp;#x27;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let join = document.querySelector(&amp;#x27;#join&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let sendmsg = document.querySelector(&amp;#x27;#sendmsg&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let webchat = document.querySelector(&amp;#x27;#webchat&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let name,room&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    /*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        加入后，登录页面消失，聊天页面显示，同时展示房间号，该房间的用户。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    function addmsg(value,name)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let div = document.createElement(&amp;#x27;div&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let user = document.createElement(&amp;#x27;span&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        user.innerHTML = name+&amp;#x27;:&amp;#x27;+value&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        div.appendChild(user)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        webchat.appendChild(div)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    join.addEventListener(&amp;#x27;click&amp;#x27;,()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let user =&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            userName:userName.value,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            roomName:roomName.value&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; //获取用户的名字以及房间号&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        name = user.userName&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        room = user.roomName&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        socket.emit(&amp;#x27;joinRoom&amp;#x27;,user) //告知服务器是哪个用户加入了那个房间&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        document.querySelector(&amp;#x27;#user&amp;#x27;).style.display = &amp;#x27;none&amp;#x27; //登录页面消失&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        document.querySelector(&amp;#x27;#chat&amp;#x27;).style.display = &amp;#x27;block&amp;#x27; //聊天页面显示&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let li = document.createElement(&amp;#x27;li&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let ul = document.querySelector(&amp;#x27;#userList&amp;#x27;) //该房间的用户列表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        document.querySelector(&amp;#x27;#roomNumber&amp;#x27;).innerHTML = roomName.value&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        li.textContent = userName.value&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ul.appendChild(li)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sendmsg.addEventListener(&amp;#x27;click&amp;#x27;,()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let textarea = document.querySelector(&amp;#x27;#textarea&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let value = textarea.value&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        textarea.value = &amp;#x27;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        addmsg(value,name)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        socket.emit(&amp;#x27;chatmsg&amp;#x27;,value,room,name)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    const socket = io(&amp;#x27;http://localhost:3000&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    socket.on(&amp;#x27;connect&amp;#x27;,()=&amp;gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    socket.on(&amp;#x27;disconnect&amp;#x27;,()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        socket.connect() //断连后重新连接&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    socket.on(&amp;#x27;roomUser&amp;#x27;,(list)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let ul = document.querySelector(&amp;#x27;#userList&amp;#x27;)//该房间的用户列表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(list&amp;amp;&amp;amp;list.length&amp;gt;=2)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                console.log(list)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                if(document.querySelector(&amp;#x27;#userList li&amp;#x27;))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    document.querySelector(&amp;#x27;#userList li&amp;#x27;).remove()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            //说明加入了一个有用户的房间&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            list.forEach((user)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                let li = document.createElement(&amp;#x27;li&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                li.textContent = user&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                ul.appendChild(li)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;)    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    socket.on(&amp;#x27;chat&amp;#x27;,(msg,name)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        addmsg(msg,name)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;) //该房间的用户发送的消息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    socket.on(&amp;#x27;roomList&amp;#x27;,(roomList)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let roomUl = document.querySelector(&amp;#x27;#list&amp;#x27;) //登录页面的房间列表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        roomList.forEach((room)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            let roomLi = document.createElement(&amp;#x27;li&amp;#x27;) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            roomLi.textContent = room&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            roomUl.appendChild(roomLi)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    socket.on(&amp;#x27;addNewRoom&amp;#x27;,(room)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let roomUl = document.querySelector(&amp;#x27;#list&amp;#x27;) //登录页面的房间列表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let roomLi = document.createElement(&amp;#x27;li&amp;#x27;) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        roomLi.textContent = room&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        roomUl.appendChild(roomLi)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;)//有用户创建了新的房间&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    socket.on(&amp;#x27;roomIn&amp;#x27;,(msg,user)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        //当有其他用户加入房间，便会向该房间广播这个消息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let userLi = document.createElement(&amp;#x27;li&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let userUl = document.querySelector(&amp;#x27;#userList&amp;#x27;) //聊天页面的该房间下的用户列表。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        userLi.textContent = user&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        userUl.appendChild(userLi)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    /*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        文件上传功能实现&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let drag = document.querySelector(&amp;#x27;#sendFile&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    drag.ondragover=(e)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        e.preventDefault() //阻止事件默认行为&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    drag.ondrop=(e)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        e.preventDefault() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let file = e.dataTransfer.files[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let read = new FileReader()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let blob = new Blob([file],&amp;#123;type:file.type&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        read.readAsArrayBuffer(blob)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        read.onload=(e)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            let arrayBuffer = e.target.result&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            socket.emit(&amp;quot;upload&amp;quot;,arrayBuffer,file.type,room)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    socket.on(&amp;#x27;sendFile&amp;#x27;,(file,type)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let div = document.createElement(&amp;#x27;div&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let blob = new Blob([file],&amp;#123;type&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let read = new FileReader()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        div.style.height = 100+&amp;#x27;px&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        div.style.width = 100+&amp;#x27;px&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        read.readAsDataURL(blob)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        read.onload=(e)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            let url = e.target.result&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            console.log(url)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if(type.indexOf(&amp;#x27;image&amp;#x27;)!=-1)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                let image = document.createElement(&amp;#x27;image&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                let span = document.createElement(&amp;#x27;span&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                image.src = url&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                span.innerHTML=name+&amp;#x27;:&amp;#x27;+&amp;#x27;文件&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                div.appendChild(span)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                div.appendChild(image)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                let a = document.createElement(&amp;#x27;a&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                let span = document.createElement(&amp;#x27;span&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                span.innerHTML=name+&amp;#x27;:&amp;#x27;+&amp;#x27;文件&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                a.appendChild(span)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                a.href = url&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                a.download = true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                div.appendChild(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            webchat.appendChild(div)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;后端&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const express = require(&amp;#x27;express&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const &amp;#123; createServer &amp;#125; = require(&amp;#x27;http&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const &amp;#123;Server&amp;#125; = require(&amp;#x27;socket.io&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const app = express()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const httpServer = createServer(app)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const io = new Server(httpServer,&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   cors:&amp;#x27;127.0.0.1:5500&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let roomSet = new Set() //储存用户创建的房间&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let roomMap = new Map() //键为房间，值为这个房间下所有用户&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.on(&amp;#x27;connection&amp;#x27;,(socket)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    console.log(&amp;#x27;连接成功&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //当有用户连接时，将目前已有的房间传过去&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    socket.emit(&amp;#x27;roomList&amp;#x27;,[...roomSet]) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    /*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    当有用户加入房间成功后，会向服务器发送用户以及房间名。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    如果是新房间则向所有用户广播新房间同时给这个房间的所有用户发送消息。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    socket.on(&amp;#x27;joinRoom&amp;#x27;,(data)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        const &amp;#123;userName,roomName&amp;#125; = data&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(!roomSet.has(roomName))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          io.emit(&amp;#x27;addNewRoom&amp;#x27;,roomName)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;//如果是新的房间,则向所有用户广播。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let userList&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(roomMap.has(roomName))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          userList = roomMap.get(roomName)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          let list = roomMap.get(roomName)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          list.push(userName)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          roomMap.set(roomName,list)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          let list = [userName]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          roomMap.set(roomName,list)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        socket.join(roomName) //让该用户加入此房间&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        roomSet.add(roomName) //记录用户创建的房间&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        socket.to(roomName).emit(&amp;#x27;roomIn&amp;#x27;,`$&amp;#123;userName&amp;#125;进入$&amp;#123;roomName&amp;#125;房间`,userName)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        socket.emit(&amp;#x27;roomUser&amp;#x27;,userList) //用户进入房间后,向用户发送该房间的所有用户&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    socket.on(&amp;#x27;upload&amp;#x27;,(file,type,room)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      socket.to(room).emit(&amp;#x27;sendFile&amp;#x27;,file,type)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;) //收到文件后向该房间的用户广播&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    socket.on(&amp;#x27;chatmsg&amp;#x27;,(msg,room,name)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        socket.to(room).emit(&amp;#x27;chat&amp;#x27;,msg,name)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;) //有用户发言就给该房间的所有用户发送消息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    socket.on(&amp;#x27;disconnect&amp;#x27;,()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		console.log(&amp;#x27;断开连接&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;) //本次连接断开连接&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.on(&amp;#x27;disconnect&amp;#x27;,()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  console.log(&amp;#x27;断开连接&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;httpServer.listen(3000)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://seele-exzzz.github.io/2023/11/13/Video-Audio/canvas%E5%AF%B9%E8%A7%86%E9%A2%91%E5%A4%84%E7%90%86/</guid>
            <title>canvas对视频处理</title>
            <link>https://seele-exzzz.github.io/2023/11/13/Video-Audio/canvas%E5%AF%B9%E8%A7%86%E9%A2%91%E5%A4%84%E7%90%86/</link>
            <category term="音视频开发" scheme="https://seele-exzzz.github.io/categories/Video-Audio/" />
            <category term="webrtc" scheme="https://seele-exzzz.github.io/tags/webrtc/" />
            <pubDate>Mon, 13 Nov 2023 18:08:48 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;canvas对视频处理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#canvas对视频处理&#34;&gt;#&lt;/a&gt; canvas 对视频处理&lt;/h2&gt;
&lt;h3 id=&#34;1使用canvas动态截取视频&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1使用canvas动态截取视频&#34;&gt;#&lt;/a&gt; 1. 使用 canvas 动态截取视频&lt;/h3&gt;
&lt;h4 id=&#34;1-截取画面&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-截取画面&#34;&gt;#&lt;/a&gt; 1. 截取画面&lt;/h4&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//可以使用drawImage截取视频当前播放的这一帧画面。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;this.ctx.drawImage(video,0,0,width,height)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//与处理图片一样可以使用getImageData获取某一帧的画面的rgba数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let data = this.ctx.getImageData(0,0,width,height)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//处理后使用putImageData将某画面绘制到canvas上。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;this.ctx.putImageData(data,0,0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;最后绘制时注意，视频的大小以及画布的大小，如果视频大于画布的大小可以考虑使用scale缩小坐标系，不过这样会导致画面变糊，不建议这样解决。众所周知，canvas有两个宽高，一个是画布的宽高，这个获取dom后设置即可，另一个是展示的宽高，这个用style设置即可。先获取视频的大小，将画布的大小设置成视频的大小，由于展示的画布大小小于视频这时会自动对画布的内容缩小。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;video.onloadeddata=()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		canvas.width = video.videoWidth&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		canvas.height = video.videoHeight&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;//视频加载完成后触发的一个事件&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;2-canvas处理视频&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-canvas处理视频&#34;&gt;#&lt;/a&gt; 2. canvas 处理视频&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//绘制视频&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;function record()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ctx.drawImage(video,0,0) //绘制视频&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	setTimeout(()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		record()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;,16) //每隔16ms调用自己&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;既然都拿到视频画面了，可以对视频每一帧处理，比如将图片变为灰度图片。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;function record()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ctx.drawImage(video,0,0) //绘制视频&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	let imageData = ctx.getImageData(0,0,canvas.width,canvas.height)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            for(let i=0;i&amp;lt;imageData.data.length;i+=4)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                let r = imageData.data[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                let g = imageData.data[i+1]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                let b = imageData.data[i+2]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                let avg = .299 * r + .587 * g + .114 * b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                imageData.data[i] = avg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                imageData.data[i+1] = avg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                imageData.data[i+2] = avg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ctx.putImageData(imageData,0,0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	setTimeout(()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		record()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;,16) //每隔16ms调用自己&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;//不过这样处理之后，绘制的视频掉帧严重。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;3合成视频&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3合成视频&#34;&gt;#&lt;/a&gt; 3. 合成视频&lt;/h3&gt;
&lt;p&gt;如果有一段绿幕视频，只要将这个画面用 drawImage 绘制，然后用 getImageData 获取画面的 rgba 数据，将所有纯绿色的像素点即 rb 为 0，g 为 255 的像素点的透明度改为 0 即完全透明，再将这个画面绘制到另一个视频即可。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;video src=&amp;quot;./video/1.mp4&amp;quot; id=&amp;quot;video&amp;quot; style=&amp;quot;width: 600px; height: 400px;&amp;quot; controls&amp;gt;&amp;lt;/video&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;video src=&amp;quot;./video/蓝幕.mp4&amp;quot; id=&amp;quot;blue&amp;quot; style=&amp;quot;width: 600px; height: 400px;&amp;quot; controls&amp;gt;&amp;lt;/video&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;button id=&amp;quot;play&amp;quot;&amp;gt;播放&amp;lt;/button&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;canvas id=&amp;quot;canvas&amp;quot; style=&amp;quot;width: 600px; height: 400px;&amp;quot;&amp;gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let video = document.querySelector(&amp;#x27;#video&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let blue = document.querySelector(&amp;#x27;#blue&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let play = document.querySelector(&amp;#x27;#play&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let canvasblue = document.createElement(&amp;#x27;canvas&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let canvas = document.querySelector(&amp;#x27;#canvas&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let ctx = canvas.getContext(&amp;#x27;2d&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let ctxblue = canvasblue.getContext(&amp;#x27;2d&amp;#x27;)      &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//视频加载完成后，将画布的宽高设置成视频的宽高&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;blue.onloadeddata = ()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  canvasblue.width = blue.videoWidth&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  canvasblue.height = blue.videoHeight&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;      &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;video.onloadeddata = ()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  canvas.width = video.videoWidth&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  canvas.height = video.videoHeight&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;play.addEventListener(&amp;#x27;click&amp;#x27;,()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    blue.play()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    video.play()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;video.addEventListener(&amp;#x27;play&amp;#x27;,()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    setInterval(()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ctxblue.drawImage(blue,0,0) //用画布绘制蓝幕视频&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let data = ctxblue.getImageData(0,0,blue.videoWidth,blue.videoHeight)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for(let i=0;i&amp;lt;data.data.length;i+=4)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if(data.data[i+2]==255) data.data[i+3] = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            //如果像素点蓝色为255则将其变为完全透明&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ctxblue.putImageData(data,0,0) //将更改的数据绘制会原画布&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ctx.drawImage(video,0,0) //绘制原视频&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ctx.drawImage(canvasblue,0,0) //将绘制蓝幕的画布绘制到原视频。最后发现原视频掉帧严重。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,16) 每隔16ms绘制一次。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&#34;[使用 canvas 处理视频 - Web API 接口参考 | MDN (mozilla.org)](https://developer.mozilla.org/zh-CN/docs/Web/API/Canvas_API/Manipulating_video_using_canvas)&#34;&gt;使用 canvas 处理视频&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://seele-exzzz.github.io/2023/11/11/Video-Audio/canvas%E5%AF%B9%E5%9B%BE%E7%89%87%E5%A4%84%E7%90%86/</guid>
            <title>canvas对图片处理</title>
            <link>https://seele-exzzz.github.io/2023/11/11/Video-Audio/canvas%E5%AF%B9%E5%9B%BE%E7%89%87%E5%A4%84%E7%90%86/</link>
            <category term="音视频开发" scheme="https://seele-exzzz.github.io/categories/Video-Audio/" />
            <category term="webrtc" scheme="https://seele-exzzz.github.io/tags/webrtc/" />
            <pubDate>Sat, 11 Nov 2023 09:41:27 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;canvas对图片处理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#canvas对图片处理&#34;&gt;#&lt;/a&gt; canvas 对图片处理&lt;/h2&gt;
&lt;h3 id=&#34;1绘制裁剪&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1绘制裁剪&#34;&gt;#&lt;/a&gt; 1. 绘制，裁剪&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let img = document.querySelector(&amp;#x27;#img&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let canvas = document.querySelector(&amp;#x27;#canvas&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let ctx = canvas.getContext(&amp;#x27;2d&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;img.onload=()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    canvas.width = img.width&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    canvas.height = img.height&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //第一种绘制方法，第一个为图像的Dom，第二个参数为，图像绘制到画布的水平位置，第三个参数为，图像绘制到画布的竖直方向&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ctx.drawImage(img,0,0) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //第二种绘制方法可以进行，前三个参数一样，width为图像在画布的宽度，如果这个值比canvas本身的宽度要大便是放大，要小就是缩小。height也一样。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ctx.drawImage(img,0,0,width,height)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //第三种绘制方法为裁剪。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sx: 裁剪点位于最左边的位置的差值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sy: 裁剪点位于最上边的位置的差值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    swidth: 裁剪宽度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sheight 裁剪高度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    这四个与裁剪相关用于确定裁剪位置以及裁剪宽高。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    后面四个参数与第二种绘制方法的后面四个参数一致，前两个用来确定绘制点的位置，后面两个用来确定绘制的宽高。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ctx.drawImage(img,sx,sy,swidth,sheight,dx,dy,dwidth,dheight)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;2变换&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2变换&#34;&gt;#&lt;/a&gt; 2. 变换&lt;/h3&gt;
&lt;p&gt;变换为坐标系的改变，如果想让 canvas 的图片发生改变需先改变坐标系，在绘制图片。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ctx.scale(x,y) //x为水平伸缩倍数，y为竖直伸缩倍数。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ctx.translate(x,y) //x为水平移动的距离，y为竖直移动的距离。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ctx.rotate(r) //r为旋转的角度，旋转的点为坐标系原点，默认在左上角，可以通过translate更改原点位置。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ctx.transform(a,b,c,d,e,f) //a:水平缩放,b:垂直倾斜,c:水平倾斜,d:垂直缩放,e:水平移动,f:垂直移动。其实这是一个三阶矩阵。二维图形要选择，缩放需要二阶矩阵，而平移是仿射变化所以需要增加一个维度记录方向。所以图形的缩放，选择，平移需要一个三阶矩阵实现，&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;3像素控制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3像素控制&#34;&gt;#&lt;/a&gt; 3. 像素控制&lt;/h3&gt;
&lt;p&gt;如果直接在本地文件打开并使用 getImageData () 这个函数获取图片的数据的话，会出现跨域问题，可以使用 live serve 这个 vscode 插件，运行文件。关于跨域问题可以参考&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSFRNTC9DT1JTX2VuYWJsZWRfaW1hZ2U=&#34;&gt;这个&lt;/span&gt;。&lt;/p&gt;
&lt;h4 id=&#34;1-灰度图片&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-灰度图片&#34;&gt;#&lt;/a&gt; 1. 灰度图片&lt;/h4&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ctx.drawImage(img,0,0,img.width,img,height) //先绘制图片，img为dom&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let imageData = ctx.getImageData(0,0,img.width,img.height) //获取图片数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//获取灰度图片，运用0.299*r+0.587*g+0.114*b这个公式获取某一个rgb下的灰度值，当rgb相同时就会呈现灰色。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for(let i=0;i&amp;lt;imageData.data.length;i+=4)&amp;#123; //每一个像素点有四个值分别是rgba，其中a是透明度。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	let r = imageData.data[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	let g = imageData.data[i+1]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	let b = imageData.data[i+2]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	let avg = .299 * r + .587 * g + .114 * b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    imageData.data[i] = avg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    imageData.data[i+1] = avg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    imageData.data[i+2] = avg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//这个函数有两种写法，第一种&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ctx.putImageData(imageData,x,y) //x为离坐标原点的水平距离，y为离坐标原点的垂直距离，坐标原点默认是左上角。可以使用translate更改。这个可以改变绘制后图像的改变的位置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;第二种写法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ctx.putImageData(imageData,x,y,dx,dy,width,height)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;前三个参数与第一种写法一致。后面的参数主要是选择要覆盖原图像的位置。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dx:新图像绘制在原图像的水平位置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dy:新图像绘制在原图像的竖直位置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;width:新图像的宽度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;height:新图像的高度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;2-各种滤镜的实现&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-各种滤镜的实现&#34;&gt;#&lt;/a&gt; 2. 各种滤镜的实现&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;反色：新 rgb 为（255-r,255-g,255-b）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;灰色调：新 rgb 为&lt;/p&gt;
&lt;p&gt;r:(r * 0.272) + (g * 0.534) + (b * 0.131)&lt;/p&gt;
&lt;p&gt;g:(r * 0.349) + (g * 0.686) + (b * 0.168)&lt;/p&gt;
&lt;p&gt;b:(r * 0.393) + (g * 0.769) + (b * 0.189)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;模糊：做卷积，具体原理可以看这个&lt;a href=&#34;[【官方双语】那么……什么是卷积？_哔哩哔哩_bilibili](https://www.bilibili.com/video/BV1Vd4y1e7pj/?spm_id_from=333.999.0.0&amp;vd_source=f327cfd668e6eff40b7b8fec27ccf6df)&#34;&gt;【官方双语】那么…… 什么是卷积？&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let img = document.querySelector(&amp;#x27;#img&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let canvas = document.querySelector(&amp;#x27;#canvas&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let invertColor = document.querySelector(&amp;#x27;#invertColor&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let adjustColor = document.querySelector(&amp;#x27;#adjustColor&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let blurImage = document.querySelector(&amp;#x27;#blurImage&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let fudiaoImage = document.querySelector(&amp;#x27;#fudiaoImage&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let kediaoImage = document.querySelector(&amp;#x27;#kediaoImage&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let mirrorImage = document.querySelector(&amp;#x27;#mirrorImage&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let ctx = canvas.getContext(&amp;#x27;2d&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let invertColorctx = invertColor.getContext(&amp;#x27;2d&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let adjustColorctx = adjustColor.getContext(&amp;#x27;2d&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let blurImagectx = blurImage.getContext(&amp;#x27;2d&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let fudiaoImagectx = fudiaoImage.getContext(&amp;#x27;2d&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let kediaoImagectx = kediaoImage.getContext(&amp;#x27;2d&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let mirrorImagectx = mirrorImage.getContext(&amp;#x27;2d&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;img.src=&amp;quot;./img/cover.jpg&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;img.onload=()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //图片灰度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    canvas.width = img.width&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    canvas.height = img.height&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ctx.drawImage(img,0,0,img.width,img.height) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let imageData = ctx.getImageData(0,0,img.width,img.height)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for(let i=0;i&amp;lt;imageData.data.length;i+=4)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let r = imageData.data[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let g = imageData.data[i+1]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let b = imageData.data[i+2]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let avg = .299 * r + .587 * g + .114 * b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        imageData.data[i] = avg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        imageData.data[i+1] = avg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        imageData.data[i+2] = avg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ctx.putImageData(imageData,0,0,0,0,img.width,img.height)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //图片反色调&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    invertColor.width = img.width&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    invertColor.height = img.height&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    invertColorctx.drawImage(img,0,0,img.width,img.height)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let invertColorData = invertColorctx.getImageData(0,0,img.width,img.height)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for(let i=0;i&amp;lt;invertColorData.data.length;i+=4)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        invertColorData.data[i] = 255-invertColorData.data[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        invertColorData.data[i+1] = 255-invertColorData.data[i+1]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        invertColorData.data[i+2] = 255-invertColorData.data[i+2]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    invertColorctx.putImageData(invertColorData,0,0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //图片灰色调&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    adjustColor.width = img.width&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    adjustColor.height = img.height&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    adjustColorctx.drawImage(img,0,0,img.width,img.height)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let adjustColorData = adjustColorctx.getImageData(0,0,img.width,img.height)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for(let i=0;i&amp;lt;adjustColorData.data.length;i+=4)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let r = adjustColorData.data[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let g = adjustColorData.data[i+1]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let b = adjustColorData.data[i+2]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        adjustColorData.data[i] = (r * 0.272) + (g * 0.534) + (b * 0.131)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        adjustColorData.data[i+1] = (r * 0.349) + (g * 0.686) + (b * 0.168)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        adjustColorData.data[i+2] = (r * 0.393) + (g * 0.769) + (b * 0.189)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    adjustColorctx.putImageData(adjustColorData,0,0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //图片模糊,这里是用3X3的卷积核&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    blurImage.width = img.width&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    blurImage.height = img.height&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    blurImagectx.drawImage(img,0,0,img.width,img.height)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let blurImageData = blurImagectx.getImageData(0,0,img.width,img.height)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for(let i=0;i&amp;lt;blurImageData.height-2;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for(let j=0;j&amp;lt;blurImageData.width*4-8;j+=4)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            let list1 = [0,1,2],list2 = [0,4,8]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            let tr=0,tg=0,tb=0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            list1.forEach((a)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                list2.forEach((b)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    let num = j+b+(i+a)*blurImageData.width*4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    tr += blurImageData.data[num]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    tg += blurImageData.data[num+1]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    tb += blurImageData.data[num+2]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            tr = tr/9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            tg = tg/9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            tb = tb/9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            list1.forEach((a)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                list2.forEach((b)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    let num = j+b+(i+a)*blurImageData.width*4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    blurImageData.data[num] = tr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    blurImageData.data[num+1] = tg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    blurImageData.data[num+2] = tb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    blurImagectx.putImageData(blurImageData,0,0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最终效果，如下&lt;/p&gt;
&lt;img data-src=&#34;https://typora-seele-exzzz.oss-cn-guangzhou.aliyuncs.com/img/video%26audio/canvasimage-20231113175220294.png&#34;&gt;
&lt;p&gt;相关资料&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;[25-像素操作_哔哩哔哩_bilibili](https://www.bilibili.com/video/BV1kv4y1D7uS/?p=25&amp;vd_source=f327cfd668e6eff40b7b8fec27ccf6df)&#34;&gt;全新 Canvas 全网最详细课程（2023 年 2 月新更）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;[纯JavaScript实现HTML5 Canvas六种特效滤镜 · HTML5 Canvas编程 · 看云 (kancloud.cn)](https://www.kancloud.cn/digest/canvas-programming/154008)&#34;&gt;&lt;strong&gt;纯 JavaScript 实现 HTML5 Canvas 六种特效滤镜&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://seele-exzzz.github.io/2023/11/09/Video-Audio/webrtc%E5%9F%BA%E7%A1%80/</guid>
            <title>webrtc基础</title>
            <link>https://seele-exzzz.github.io/2023/11/09/Video-Audio/webrtc%E5%9F%BA%E7%A1%80/</link>
            <category term="音视频开发" scheme="https://seele-exzzz.github.io/categories/Video-Audio/" />
            <category term="webrtc" scheme="https://seele-exzzz.github.io/tags/webrtc/" />
            <pubDate>Thu, 09 Nov 2023 23:30:33 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;webrtc基础&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#webrtc基础&#34;&gt;#&lt;/a&gt; webrtc 基础&lt;/h2&gt;
&lt;h3 id=&#34;一-获取媒体流&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一-获取媒体流&#34;&gt;#&lt;/a&gt; 一、获取媒体流&lt;/h3&gt;
&lt;p&gt;navigator.mediaDevices 上有四个方法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;getUserMedia: 获取用户摄像头的媒体流，媒体流包括视频流和音频流。&lt;/li&gt;
&lt;li&gt;getDiaplayMedia: 获取用户的屏幕。&lt;/li&gt;
&lt;li&gt;enumerateDevices: 返回用户设备。&lt;/li&gt;
&lt;li&gt;getSupportedConstraints: 返回一个对象，表示可以约束的属性&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;async function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//是一个promise，返回一个媒体流对象。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	let stream = await navigator.mediaDevices.getUserMedia(&amp;#123;video:true,audio:true&amp;#125;) //获取用户摄像头以及麦克风的流，另外画面是镜像&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let stream = await navigator.mediaDevices.getDisplayMedia(&amp;#123;video:true,audio:false&amp;#125;) //获取用户桌面的流&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    video.srcObject = stream //将获取到了媒体流放在video的SrcObject上。不过如果是获取用户桌面的媒体流放在video上播放会出现画面重叠，目前还不知道如何解决，我看别人做的也是这样。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let list = await navigator.mediaDevices.enumerateDevices() //返回一个数组储存着用户输入输出设备&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    list.forEach((arr)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	let &amp;#123;deviceId,label,kind,groupId&amp;#125; = arr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	deviceId : 设备的id&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	label : 设备的名称&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	kind : 设备种类 audioinput audiooutput videoinput&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	groupId : 如果设备是同一个，他们的groupId就是同一个&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //另外，如果网页不在本地运行且不是https，deviceId，label和groupId则为空。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;二-媒体流和轨道&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二-媒体流和轨道&#34;&gt;#&lt;/a&gt; 二、媒体流和轨道&lt;/h3&gt;
&lt;h4 id=&#34;一-媒体流&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一-媒体流&#34;&gt;#&lt;/a&gt; 一、媒体流&lt;/h4&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;stream&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    属性：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    active //如果获取到用户的媒体流是活跃的则为true，否则为false&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    id //每条媒体流有一个专属的id值，用于区别不同的媒体流&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    方法：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    addTrack(track) //给这个媒体流增加一个轨&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    removeTrack(track) //移除该媒体流下的某一条轨道&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    clone(id) //克隆某一个id值下的轨道并返回这个轨道同时新的轨道有新的id值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    getTrackById(id) //返回指定id的轨道&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    getTracks() //返回这个视频流中的所有轨道，用数组储存。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    getVideoTracks() //返回所有视频轨，返回顺序不固定，每次调用的时候顺序有变。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    getAudioTracks() //返回所有音频轨，返回顺序不固定，每次调用的时候顺序有变。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    事件处理：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    onaddtrack() //当添加完轨道后触发此事件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    onremovetrack() //当删除某一条轨道后触发此事件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;二-轨&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二-轨&#34;&gt;#&lt;/a&gt; 二、轨&lt;/h4&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;track&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	属性：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	id //每一个轨都有一个专属的id&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	kind //轨的种类，分为audio和video&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	enabled //表示该轨是否可用，可以手动设置。值为布尔值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	label //设备名称&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	muted //是否静音，值为布尔值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	readyState //live设备正常连接，ended没有更多数据，而且不会提供更多的数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	方法：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	getConstraints() //返回该轨道的约束，这个与获取媒体流时传的参数有关&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	applyConstraints() //给该轨道新的约束&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	getSettings() //返回该轨道所有约束包括自己添加的和浏览器默认的&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	getCapabilities() //返回一个对象，表示该轨道可调节的属性值以及范围，可以通过这个获取到约束的范围从而给该轨道设置范围。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	clone() //返回一个track的克隆，同时产生一个新的id&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	stop() //stop后，readyState的状态变为ended&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;三-约束属性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#三-约束属性&#34;&gt;#&lt;/a&gt; 三、约束属性&lt;/h4&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;约束属性是指音频与视频的属性，一共有以下这些，太长了之后有时间再一个一个写吧&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;aspectRatio&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;autoGainControl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;brightness&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;channelCount&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;colorTemperature&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;contrast&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;deviceId&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;displaySurface&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echoCancellation&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;exposureCompensation&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;exposureMode&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;exposureTime&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;facingMode&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;focusDistance&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;focusMode&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frameRate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;groupId&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;height&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;iso&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;latency&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;noiseSuppression&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pan&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pointsOfInterest&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;resizeMode&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sampleRate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sampleSize&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;saturation&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sharpness&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;suppressLocalAudioPlayback&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tilt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;torch&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;whiteBalanceMode&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;width&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;zoom&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;相关资料&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;[mediaDevices开启你本地视频之旅行 - 掘金 (juejin.cn)](https://juejin.cn/post/6924563220657586184#heading-3)&#34;&gt;mediaDevices 开启你本地视频之旅行&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;[MediaDevices - Web API 接口参考 | MDN (mozilla.org)](https://developer.mozilla.org/zh-CN/docs/Web/API/MediaDevices)&#34;&gt;MediaDevices MDN&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;[功能、约束和设置 - Web API 接口 |MDN网络 (mozilla.org)](https://developer.mozilla.org/en-US/docs/Web/API/Media_Capture_and_Streams_API/Constraints)&#34;&gt;功能、约束和设置 MDN&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;三-video标签相关属性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#三-video标签相关属性&#34;&gt;#&lt;/a&gt; 三、video 标签相关属性&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;属性：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;autoplay : 在声明该属性后，视频会尽快播放。另外给该值设置false没有用，如果不想自动播放要移除该属性&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;controls : 给视频增加一个控制面板&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;controlslist : 当有controls才生效，可以选择将控件移除，可选值nodownload，nofullscreen，noremoteplayback&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;crossorigin : 是否使用cors来获取视频&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;loop : 重复播放&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;poster : 下载时展示的封面，，如果没指定默认按第一帧显示&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;相关资料&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;&lt;video&gt;: 视频嵌入元素 - HTML（超文本标记语言） | MDN (mozilla.org)&#34;&gt;video: 视频嵌入元素 MDN&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;四-视频的录制以及下载&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#四-视频的录制以及下载&#34;&gt;#&lt;/a&gt; 四、视频的录制以及下载&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let recoder = new MediaRecorder(options) //options是一个配置对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;options&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mimeType : 选择录制时的mime格式,分为视频格式和编码格式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	state : inactive(闲置中),recording(录制中),paused(暂停)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	stream : 需要录制的媒体流&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	videoBitsPerSecond : 视频的编码比率&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	audioBitsPerSecond : 音频的编码比率&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;方法:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;isTypeSupported() : 用来判断用户的浏览器是否支持某个视频格式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pause() : 录制暂停&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;requestData() : 从最开始或者上一个requestData开始到当前接受到的，储存为blob。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;resume() : 继续录制之前被暂停的录制&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;start(timeslice) : 开始录制,timeslice每隔timeslice毫秒记录视频，储存格式为blob&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stop() : 录制停止，无法继续录制，同时触发dataavailable事件，返回一个blob&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;事件:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ondataavailable : 当调用stop或者requestData或者设置了start的参数，时间到了后触发，该事件的data属性会有录制视频的blob数据。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onpause : pause后触发&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onresume : resume后触发&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onstart : start后触发&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onstop : stop后触发&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;五-实战&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#五-实战&#34;&gt;#&lt;/a&gt; 五、实战&lt;/h3&gt;
&lt;p&gt;完成获取用户摄像头，麦克风或者桌面的媒体流并展示，同时录制，支持暂停，继续，停止录制。同时将录制的视频展示并下载。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;174&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;HTML部分&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;video autoplay controls playsinline id=&amp;quot;video&amp;quot; style=&amp;quot;width: 800px;height: 600px;&amp;quot;&amp;gt;&amp;lt;/video&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;video autoplay controls playsinline id=&amp;quot;recordVideo&amp;quot; style=&amp;quot;width: 600px;height: 400px;&amp;quot;&amp;gt;&amp;lt;/video&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;button id=&amp;quot;user&amp;quot;&amp;gt;摄像头录制&amp;lt;/button&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    摄像头选择:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;select id=&amp;quot;selectVideo&amp;quot; style=&amp;quot;width: 100px;&amp;quot;&amp;gt;&amp;lt;/select&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    麦克风选择:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;select id=&amp;quot;selectAudio&amp;quot; style=&amp;quot;width: 100px;&amp;quot;&amp;gt;&amp;lt;/select&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;button id=&amp;quot;desktop&amp;quot;&amp;gt;桌面共享&amp;lt;/button&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;button id=&amp;quot;start&amp;quot;&amp;gt;视频录制&amp;lt;/button&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;button id=&amp;quot;pause&amp;quot;&amp;gt;视频录制暂停&amp;lt;/button&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;button id=&amp;quot;stop&amp;quot;&amp;gt;视频录制停止&amp;lt;/button&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;button id=&amp;quot;resume&amp;quot;&amp;gt;继续录制&amp;lt;/button&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;button id=&amp;quot;show&amp;quot;&amp;gt;展示录制视频&amp;lt;/button&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;button id=&amp;quot;download&amp;quot;&amp;gt;下载录制的视频&amp;lt;/button&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    选择录制视频的格式:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;select id=&amp;quot;select&amp;quot; style=&amp;quot;width: 120px;&amp;quot;&amp;gt; &amp;lt;/select&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;JS部分&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let video = document.querySelector(&amp;#x27;#video&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let recordVideo = document.querySelector(&amp;#x27;#recordVideo&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let user = document.querySelector(&amp;#x27;#user&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let desktop = document.querySelector(&amp;#x27;#desktop&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let select = document.querySelector(&amp;#x27;#select&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let selectVideo = document.querySelector(&amp;#x27;#selectVideo&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let selectAudio = document.querySelector(&amp;#x27;#selectAudio&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let start = document.querySelector(&amp;#x27;#start&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let pause = document.querySelector(&amp;#x27;#pause&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let stop = document.querySelector(&amp;#x27;#stop&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let show = document.querySelector(&amp;#x27;#show&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let resume = document.querySelector(&amp;#x27;#resume&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let download = document.querySelector(&amp;#x27;#download&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let types = [&amp;#x27;webm&amp;#x27;,&amp;#x27;mp4&amp;#x27;,&amp;#x27;ogg&amp;#x27;,&amp;#x27;mov&amp;#x27;,&amp;#x27;avi&amp;#x27;,&amp;#x27;wmv&amp;#x27;,&amp;#x27;flv&amp;#x27;,&amp;#x27;mkv&amp;#x27;,&amp;#x27;ts&amp;#x27;,&amp;#x27;x=matroska&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let codecs = [&amp;#x27;vp9&amp;#x27;,&amp;#x27;vp9.0&amp;#x27;,&amp;#x27;vp8&amp;#x27;,&amp;#x27;vp8.0&amp;#x27;,&amp;#x27;avc1&amp;#x27;,&amp;#x27;av1&amp;#x27;,&amp;#x27;h265&amp;#x27;,&amp;#x27;h264&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let mimeType = &amp;#x27;video/webm;codecs=vp8&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let stream,blobList=[],recordStream&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //获取用户摄像头权限&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    user.addEventListener(&amp;#x27;click&amp;#x27;,async()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        stream = await navigator.mediaDevices.getUserMedia(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            video :&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                width:800,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                height:600&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            audio:true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        video.srcObject = stream&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //获取用户桌面共享权限&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    desktop.addEventListener(&amp;#x27;click&amp;#x27;,async()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        stream = await navigator.mediaDevices.getDisplayMedia(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            video:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                width:800,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                height:600&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            audio:false&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        video.srcObject = stream&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //开始录制&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    start.addEventListener(&amp;#x27;click&amp;#x27;,()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(recordStream) return //如果已经在开始录制就返回，防止重复录制&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        recordStream = new MediaRecorder(stream,&amp;#123;mimeType&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        recordStream.start(1000) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        recordStream.ondataavailable = (e)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            blobList.push(e.data) //e.data为blob,将blob用数组储存方便后面展示以及下载&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    select.addEventListener(&amp;#x27;click&amp;#x27;,support())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    selectVideo.addEventListener(&amp;#x27;click&amp;#x27;,selectDevice(&amp;#x27;video&amp;#x27;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    selectAudio.addEventListener(&amp;#x27;click&amp;#x27;,selectDevice(&amp;#x27;audio&amp;#x27;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    pause.addEventListener(&amp;#x27;click&amp;#x27;,()=&amp;gt;&amp;#123;if(recordStream) recordStream.pause()&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    stop.addEventListener(&amp;#x27;click&amp;#x27;,()=&amp;gt;&amp;#123;if(recordStream) recordStream.stop()&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    show.addEventListener(&amp;#x27;click&amp;#x27;,()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(blobList.length&amp;gt;0)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            let blob = new Blob(blobList)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            let url = URL.createObjectURL(blob)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            recordVideo.src = url&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    resume.addEventListener(&amp;#x27;click&amp;#x27;,()=&amp;gt;&amp;#123;if(recordStream) recordStream.resume()&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    download.addEventListener(&amp;#x27;click&amp;#x27;,downloadVideo)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    function support()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let click //闭包，事件委托。第一次点击时获取用户浏览器支持的录制格式，之后获取用户选择的录制格式。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return async function(e)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if(click)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                mimeType = e.target.value&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                click = true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                let list = await getSupportList()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                list.forEach((type)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    let option = document.createElement(&amp;#x27;option&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    option.text = type&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    option.value = type&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    select.add(option)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    function getSupportList()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let list = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        types.forEach((type)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            codecs.forEach(async(code)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                let videoType = `video/$&amp;#123;type&amp;#125;;codecs=$&amp;#123;code&amp;#125;`&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                let res = await MediaRecorder.isTypeSupported(videoType)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                if(res) list.push(videoType)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return list&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    function selectDevice(type)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let video,audio &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return async function(e)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if(type==&amp;#x27;video&amp;#x27;&amp;amp;&amp;amp;!video||type==&amp;#x27;audio&amp;#x27;&amp;amp;&amp;amp;!audio)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                if(type==&amp;#x27;video&amp;#x27;) video = true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                if(type==&amp;#x27;audio&amp;#x27;) audio = true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                let deviceList = await navigator.mediaDevices.enumerateDevices()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                deviceList.forEach((device)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    let &amp;#123;deviceId,label,kind,groupId&amp;#125; = device&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    if(type==&amp;#x27;video&amp;#x27;&amp;amp;&amp;amp;kind==&amp;#x27;videoinput&amp;#x27;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        let option = document.createElement(&amp;#x27;option&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        option.text = label&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        option.value = deviceId&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        selectVideo.add(option)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &amp;#125;else if(type==&amp;#x27;audio&amp;#x27;&amp;amp;&amp;amp;kind==&amp;#x27;audioinput&amp;#x27;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        let option = document.createElement(&amp;#x27;option&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        option.text = label&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        option.value = deviceId&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        selectAudio.add(option)                        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                if(e.target.value)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    switchCamera(e.target.value)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //切换摄像头前先停止录制，将录制的媒体流的所有轨暂停同时将媒体流设置为空&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    function stopCamera()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(stream)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            let trackList = stream.getTracks()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            trackList.forEach((track)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                track.stop()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            video.srcObject = null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            stream = null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    async function switchCamera(deviceId)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        stopCamera()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        stream = navigator.mediaDevices.getUserMedia(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            video:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                width:800,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                height:600&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            audio:false,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            deviceId&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        video.srcObject = stream&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    function downloadVideo()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let blob = new Blob(blobList,&amp;#123; type: &amp;#x27;video/mp4&amp;#x27; &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let url = URL.createObjectURL(blob)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let a = document.createElement(&amp;#x27;a&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        a.href = url&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        a.download = &amp;#x27;1&amp;#x27; //给a链接一个download即可下载&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        a.click() //点击a下载&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        URL.revokeObjectURL(url) //URL.createObjectURL生成的url是储存在内存中，即时清空防止内存泄露&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;相关资料&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;[WebRTC 从实战到未来！迎接风口，前端必学的技术🔥 - 掘金 (juejin.cn)](https://juejin.cn/post/7151932832041058340?searchId=202311092329013EC7636625689FB1BF03)&#34;&gt;WebRTC 从实战到未来！迎接风口，前端必学的技术🔥&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://seele-exzzz.github.io/2023/11/07/Video-Audio/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%9F%BA%E7%A1%80/</guid>
            <title>二进制基础</title>
            <link>https://seele-exzzz.github.io/2023/11/07/Video-Audio/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%9F%BA%E7%A1%80/</link>
            <category term="音视频开发" scheme="https://seele-exzzz.github.io/categories/Video-Audio/" />
            <category term="二进制" scheme="https://seele-exzzz.github.io/tags/%E4%BA%8C%E8%BF%9B%E5%88%B6/" />
            <pubDate>Tue, 07 Nov 2023 20:07:51 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;二进制基础&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二进制基础&#34;&gt;#&lt;/a&gt; 二进制基础&lt;/h2&gt;
&lt;h3 id=&#34;一-原码-反码-补码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一-原码-反码-补码&#34;&gt;#&lt;/a&gt; 一 、 原码 反码 补码&lt;/h3&gt;
&lt;p&gt;对于有符号的变量而言，首位代表符号，0 为正数，1 为负数。&lt;/p&gt;
&lt;p&gt;原码：十进制转化为二进制&lt;/p&gt;
&lt;p&gt;反码：负数的符号不变，其他位取反。&lt;/p&gt;
&lt;p&gt;补码：负数的反码加一。&lt;/p&gt;
&lt;p&gt;另外对于 8 位二进制而言，储存范围为 [-127,127],-128 无原码以及反码，但是有补码为 10000000。而 10000000 在反码以及原码中表示 0.&lt;/p&gt;
&lt;p&gt;计算机内存储存的数据为补码，在进行减法运算的时候则是转化为加法计算，比如 1-1 转化为 1+（-1），将 1 与 - 1 的补码相加然后转为原码就是最终结果。如果加出了九位则将第一位舍弃。&lt;/p&gt;
&lt;p&gt;相关资料：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;[【计算机基础】轻松学会原码、反码、补码的转换规则以及计算机内有符号数的计算方式！_哔哩哔哩_bilibili](https://www.bilibili.com/video/BV1aB4y177Ef/?spm_id_from=333.337.search-card.all.click&amp;vd_source=f327cfd668e6eff40b7b8fec27ccf6df)&#34;&gt;原码，反码，补码，b 站视频&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;[深入理解计算机中的原码、补码、反码 - 知乎 (zhihu.com)](https://zhuanlan.zhihu.com/p/371184302)&#34;&gt;原码，反码，补码，知乎文章&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xMTg0MzI1NTQ=&#34;&gt;原码，反码，补码，知乎文章&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;二-二进制逻辑运算&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二-二进制逻辑运算&#34;&gt;#&lt;/a&gt; 二、二进制逻辑运算&lt;/h3&gt;
&lt;h4 id=&#34;1-或与非异或&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-或与非异或&#34;&gt;#&lt;/a&gt; 1. 或与非，异或&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;或（&amp;amp;）：两个都为 1 时才为 1&lt;/li&gt;
&lt;li&gt;与（|）： 有一个为 1 就为 1&lt;/li&gt;
&lt;li&gt;非（!）：取反&lt;/li&gt;
&lt;li&gt;异或（^）： 不同为 1，相同为 0，自己与自己取异或为 0&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;2二进制移位&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2二进制移位&#34;&gt;#&lt;/a&gt; 2. 二进制移位&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;左移运算：二进制向左移动，最后一位补零。相当于乘 2 的 n 次方，n 为移动的位数 a&amp;lt;&amp;lt;n (a 为数，n 为移动位数)&lt;/li&gt;
&lt;li&gt;有符号右移运算：对于正数，右移第一位补零，对于负数，右移第一位补一，相当于除于 2 的 n 次方，n 为移动的位数并向下取整。a&amp;gt;&amp;gt;n&lt;/li&gt;
&lt;li&gt;无符号右移运算：右移第一位补零  a&amp;gt;&amp;gt;&amp;gt;n&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;相关资料：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;[【计算机基础】二进制的逻辑运算 - 与、或、非、异或、同或！_哔哩哔哩_bilibili](https://www.bilibili.com/video/BV1hY4y1T7au/?spm_id_from=333.999.0.0)&#34;&gt;二进制逻辑运算，b 站视频&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;[【计算机知识】移位运算——左移运算、右移运算、无符号右移！_哔哩哔哩_bilibili](https://www.bilibili.com/video/BV1i14y1W7aF/?spm_id_from=333.999.0.0&amp;vd_source=f327cfd668e6eff40b7b8fec27ccf6df)&#34;&gt;二进制移位，b 站视频&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;三-小数的储存以及储存及读取模式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#三-小数的储存以及储存及读取模式&#34;&gt;#&lt;/a&gt; 三。小数的储存以及储存及读取模式&lt;/h3&gt;
&lt;p&gt;小数的储存分为定点数以及浮点数储存。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;定点数，小数点固定，一般不采用这种方法储存因为储存数据的范围小。将整数部分转为二进制，将小数部分转为二进制，然后组合。小数点在整数后面，小数前面。小数转为二进制的方法为乘 2 然后取整，第一位为 2 的 - 1 次方，第二位为 2 的 - 2 次方，依次类推。有些小数比如 0.2 无法完全转为二进制，会出现精度损失。这也是为什么 JavaScript 中 0.1+0.2!=0.3。如果用 8 位储存一个数据，第一位储存数据的正负，后四位储存整数，最后三位储存小数。那么整数部分就只能储存 1111 即负 - 16 到 15，小数部分只能储存 111，即 2 的 - 3 次方加 2 的 - 2 次方加 2 的 - 1 次方为 0.875 也即 0 到 0.875。使用定点数储存数据储存的范围不大，故一般不采用此方法储存小数。&lt;/li&gt;
&lt;li&gt;浮点数，采用科学计数法储存小数，小数点不固定，一般使用 ieee754 标准。浮点数分为 float（单精度），double（双精度）。将小数转化为二进制然后用科学计数法表示，只不过与十进制的科学计数法不同，二进制下为基数为 2 而不是 10。对于 float，用四字节，32 位储存，第一位为储存数字的正负，后面 8 位储存阶码也即指数部分，指数加上偏移量 127 再转二进制即为阶码。剩下 23 位储存小数部分，因为整数一定为 1 故不额外花一位储存整数部分。double 用八字节，64 位储存。第一位储存数字正负，后面 11 位储存阶码，double 的偏移量为 1023. 剩下的储存小数部分。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;储存模式分为大端法以及小端法。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;小端法：数据低位储存低位地址&lt;/li&gt;
&lt;li&gt;大端法：与小端法反过来&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;储存和读取一般使用小端发&lt;/p&gt;
&lt;p&gt;相关资料：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUxlNHkxMzdnVQ==&#34;&gt;定点数，浮点数。b 站视频&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;[什么是定点数？ - 知乎 (zhihu.com)](https://zhuanlan.zhihu.com/p/338588296)&#34;&gt;定点数，知乎文章&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;[什么是定点数？ - 知乎 (zhihu.com)](https://zhuanlan.zhihu.com/p/338588296)&#34;&gt;浮点数，知乎文章，阶码部分有点问题&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;四-fileblobarraybufferbuffer&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#四-fileblobarraybufferbuffer&#34;&gt;#&lt;/a&gt; 四、File，Blob，ArrayBuffer，Buffer&lt;/h3&gt;
&lt;p&gt;Blob: 全称 binary large object。首先 blob 是一个对象，其次 blob 储存了不可以更改的二进制数据。&lt;/p&gt;
&lt;p&gt;File: file 对象是一个特殊的 blob，或者说 blob 是 file 原型链上的原型对象。file 相对于 blob 多了两个属性一个是文件名字，一个是文件最近一次被修改的时间戳。另外 file 对象只在浏览器中有，在 nodejs 中是没有的。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;File.prototype.__proto__==Blob.prototype //true&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;ArrayBuffer：是原始的二进制数据缓冲区，与 blob 一样储存了二进制数据，与 blob 不同的是 ArrayBuffer 不能设置 MIME 类型。虽然 ArrayBuffer 与 blob 都无法更改数据，但是 ArrayB 可以使用 TypedArray 对象和 DataView 对象对二进制数据进行更改。&lt;/p&gt;
&lt;p&gt;Buffer：nodejs 中处理二进制数据的对象，与 ArrayBuffer 可以互相转化。&lt;/p&gt;
&lt;h4 id=&#34;1数据的获取&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1数据的获取&#34;&gt;#&lt;/a&gt; 1. 数据的获取&lt;/h4&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	file对象的获取&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let file = new File([&amp;#x27;123&amp;#x27;],&amp;#x27;123.txt&amp;#x27;) //第一个参数可以是blob，第二个参数为文件名。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//使用input标签获取file&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;input type=&amp;quot;file&amp;quot; id=&amp;quot;input&amp;quot;&amp;gt; //将type设置成file即可&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let input = document.querySelector(&amp;#x27;#input&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;input.onchange=(e)=&amp;gt;&amp;#123; //input上onchange方法，当用户上传了文件就会调用这个事件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    console.log(e.target.files) //这是一个数组储存用户上传的所有文件。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    console.log(e.target.files[0].__proto__==File.prototype) //true，数据类型为file&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//拖拽获取file&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;div id=&amp;quot;drag&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let drag = document.querySelector(&amp;#x27;#drag&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drag.ondragover=(e)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    e.preventDefault() //阻止事件默认行为&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drag.ondrop=(e)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    e.preventDefault() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    console.log(e.dataTransfer.files)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//使用File System Access获取file&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drag.addEventListener(&amp;#x27;click&amp;#x27;,async()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	let filelist = await showOpenFilePicker() //会返回一个数组，储存着用户上传的文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	let file = await filelist[0].getFile() //会返回一个file对象。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	file.__proto__ == File.prototype // true,说明这个是file对象。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Blob对象的获取&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let blob = new Blob(array,options) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;array:由ArrayBuffer，ArrayBufferView，Blob，Dom等对象构成&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;options：type：MIME类型&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Buffer的获取&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;在nodejs中使用fs模块读取文件。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fs.readFile(filename,(err,data)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	console.log(data) //此时的data是一个Buffer对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;buffer.tostring(&amp;#x27;utf-8&amp;#x27;) //buffer转成字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;由ArrayBuffer转化而来。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let buffer = Buffer.from(ArrayBuffer)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ArrayBuffer的获取&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ArrayBuffer一般是由file，blob或者Buffer转化的。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let read = new FileReader()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;read.readAsArrayBuffer(blob) //这里的参数可以传blob以及file，同时这是异步，可以调用read的onload事件，读取完成后就可以获取。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;read.onload = ((res)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	console.log(res) //res为ArrayBuffer&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;由Buffer转化&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let ArrayBuffer = Buffer.from(Buffer).buffer&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;2转化为url或者base64&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2转化为url或者base64&#34;&gt;#&lt;/a&gt; 2. 转化为 url 或者 base64&lt;/h4&gt;
&lt;p&gt;对于图片或者视频如果要展示出来需要在 img 标签或者 video 标签上的 src 放上 url 链接或者 base64. 如果想要下载可以在 a 链接上添加 download 属性即可下载。&lt;/p&gt;
&lt;p&gt;FileReader.readAsDataURL: 异步方法，通过 FileReader.onload 的事件获取值，值为一段 data:base64 字符串&lt;/p&gt;
&lt;p&gt;URL.createObjectURL: 同步方法，获取到的是储存在内存中的 url。不用的话需手动释放防止内存泄露，获取速度要比 FileReader.readAsDataURL 要快.&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let read = new FileReader() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;read.readAsDataURL(blob) //可以传入blob或者file对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;read.onload=((e)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	console.log(e.target.result) // 一段data:64字符串,可以在img以及video的src上挂载。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let url = URL.createObjectURL(blob) &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;3-blob和arraybuffer的切片处理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-blob和arraybuffer的切片处理&#34;&gt;#&lt;/a&gt; 3. Blob 和 ArrayBuffer 的切片处理&lt;/h4&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;用法与字符串和数组的slice一致，第三个参数为MIME类型设置，如果没有则使用原blob的MIME类型&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let newblob = oldblob.slice(start,end,type) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let newArrayBuffer = oldArrayBuffer，slice(start,end) &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;相关资料&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;[谈谈JS二进制：File、Blob、FileReader、ArrayBuffer、Base64 - 掘金 (juejin.cn)](https://juejin.cn/post/7148254347401363463?searchId=20231109095758F3BF67CFE83D9F338CBE#heading-28)&#34;&gt;谈谈 JS 二进制：File、Blob、FileReader、ArrayBuffer、Base64 (稀土掘金)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;[JS 的二进制家族：base64、File、Blob、ArrayBuffer 的关系 - 掘金 (juejin.cn)](https://juejin.cn/post/6844904069165744135?from=search-suggest#heading-6)&#34;&gt;JS 的二进制家族：base64、File、Blob、ArrayBuffer 的关系 (稀土掘金)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC83MjAzNzAxODc1NTMwMDM5MzU3&#34;&gt;File System Access API 让浏览器拥有操作本地文件的能力 (稀土掘金)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;[【Web基础】Blob Url &amp; Data Url_哔哩哔哩_bilibili](https://www.bilibili.com/video/BV1Kv4y1471j/?spm_id_from=333.788&amp;vd_source=f327cfd668e6eff40b7b8fec27ccf6df)&#34;&gt;【Web 基础】Blob Url &amp;amp; Data Url&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;五-arraybuffertypedarraydataview&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#五-arraybuffertypedarraydataview&#34;&gt;#&lt;/a&gt; 五、ArrayBuffer，TypedArray，DataView&lt;/h3&gt;
&lt;p&gt;ArrayBuffer 是二进制数据，如果想要读取或者修改还需要 TypedArray 和 DataView 的视图。视图可以理解为以何种方式读取。比如如果 ArrayBuffer 有四字节的数据，可以一字节一字节（8 位）的读取，也可以二字节二字节（16）的读取，这取决于数据是以何种方式储存。如果这个 ArrayBuffer 储存的是图片数据，众所周知图片每个像素由 rgba 构成，每一个数据的大小在 0-255 之间，所以这时候要用 uint8Array，无符号 8 位一字节读取。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let arraybuffer = new ArrayBuffer(8) //创建一个8字节的数据，数据默认是0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let uint8 = new Uint8Array(arraybuffer) //以uint8的方式读取&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//ArrayBuffer有8字节，因为是以8int方式读取所以这里有8个数据，因为是无符号，所以取值范围为0-255&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;uint8[0] = 1 //修改第一个为1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(uint8)//[1, 0, 0, 0, 0, 0, 0, 0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//设值大于范围，转成二进制只取后8位。256的二进制是1 0000 0000，这里只取后八位。0000 0000即0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;uint8[0] = 256&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(uint8)//[0, 0, 0, 0, 0, 0, 0, 0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//如果是负数的话，取该负数的补码。因为是无符号所以负数的补码直接把所有位取反就行，补码是反码加一。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;uint8[0] = -1 // -1反码1111 1110，补码1111 1111即255&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set方法 可以复制一段数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let arraybuffer = new ArrayBuffer(8)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let uint8 = new Uint8Array(arraybuffer)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let uint = new Uint8Array(4)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;uint[0] = 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;uint8.set(uint) //不带第二个参数，默认从第一个开始复制&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(uint8) //[1, 0, 0, 0, 0, 0, 0, 0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;uint8.set(uint,4) //从第五个数据开始复制&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(uint8) //[0, 0, 0, 0, 1, 0, 0, 0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;如果后端发来一段一段ArrayBuffer将其合并&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;function (buffers)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	let totalLength = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	for(let buffer of buffers)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		totalLength += buffer.length&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125; //获取总共ArrayBuffer的长度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//创建一个ArrayBuffer长度的ArrayBuffer，注意如果没有这么多连续的内存空间，创建会失败。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	let uint = new uint8Array(totalLength) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	let offset = 0 //记录每段内容的下标&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	for(let buffer of buffers)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		uint,set(buffer,offset)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		offset+= buffer.length&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;1-typedarray&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-typedarray&#34;&gt;#&lt;/a&gt; 1. TypedArray&lt;/h4&gt;
&lt;p&gt;​	TypedArray 由以下九种类型组成。TypedArray 的特点在于每个数据的类型相同，适合处理一些简单的二进制数据，比如图片的 rgba 数据是由 8 位无符号整数组成。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;Int8Array&lt;/code&gt; &lt;/strong&gt;：8 位有符号整数，长度 1 个字节。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;Uint8Array&lt;/code&gt; &lt;/strong&gt;：8 位无符号整数，长度 1 个字节。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;Uint8ClampedArray&lt;/code&gt; &lt;/strong&gt;：8 位无符号整数，长度 1 个字节，溢出处理不同。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;Int16Array&lt;/code&gt; &lt;/strong&gt;：16 位有符号整数，长度 2 个字节。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;Uint16Array&lt;/code&gt; &lt;/strong&gt;：16 位无符号整数，长度 2 个字节。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;Int32Array&lt;/code&gt; &lt;/strong&gt;：32 位有符号整数，长度 4 个字节。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;Uint32Array&lt;/code&gt; &lt;/strong&gt;：32 位无符号整数，长度 4 个字节。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;Float32Array&lt;/code&gt; &lt;/strong&gt;：32 位浮点数，长度 4 个字节。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;Float64Array&lt;/code&gt; &lt;/strong&gt;：64 位浮点数，长度 8 个字节。&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://seele-exzzz.github.io/2023/10/04/algorithm/%E5%A0%86%20%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/</guid>
            <title>堆 优先队列</title>
            <link>https://seele-exzzz.github.io/2023/10/04/algorithm/%E5%A0%86%20%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/</link>
            <category term="算法" scheme="https://seele-exzzz.github.io/categories/algorithm/" />
            <category term="算法" scheme="https://seele-exzzz.github.io/tags/%E7%AE%97%E6%B3%95/" />
            <category term="堆" scheme="https://seele-exzzz.github.io/tags/%E5%A0%86/" />
            <category term="优先队列" scheme="https://seele-exzzz.github.io/tags/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/" />
            <pubDate>Wed, 04 Oct 2023 21:14:39 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;堆&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#堆&#34;&gt;#&lt;/a&gt; 堆&lt;/h3&gt;
&lt;p&gt;堆分为大顶堆（大根堆）和小顶堆（小根堆）两种。对于一个堆首先是一颗完全二叉树即只有最后一层不为空且最后一层从左往右是连续的不为空。其次如果是大顶堆，根元素是最大值，子节点比父节点都要小，小顶堆则相反&lt;/p&gt;
&lt;h4 id=&#34;1-上浮&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-上浮&#34;&gt;#&lt;/a&gt; 1. 上浮&lt;/h4&gt;
&lt;p&gt;​	每次插入元素时，都往堆最后一个的地方插入元素，为了维护堆的性质则需对插入的元素进行上浮操作。如果是大顶堆的话，插入的元素如果比父节点大就要与父节点交换值。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//大顶堆&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;function up (index)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let father = Math.floor((index-1)/2) //获取父节点的下标&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // 如果是大顶堆的话，当父节点的值小于当前节点的值时就要交换节点。二叉树用数组arr储存。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while(father&amp;gt;=0&amp;amp;&amp;amp;arr[father]&amp;lt;arr[index])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	[arr[index],arr[father]] = [arr[father],arr[index]] //交换子节点的值和父节点的值。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        index = father &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        father = Math.floor((index-1)/2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;2下沉&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2下沉&#34;&gt;#&lt;/a&gt; 2. 下沉&lt;/h4&gt;
&lt;p&gt;​	当根节点弹出的时候，则需要将最后一个元素放在根节点中，为了维护堆的性质则需要对根节点进行下沉操作。如果是大顶堆的话，插入的元素如果比父节点大就要与父节点交换值。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//大顶堆&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;function down(index)&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	if(!arr[index*2+1]) return //如果不存在左子树的话就不下沉了&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//如果右子树不存在的话就选左子树否则比较左子树以及右子树的大小谁大选谁&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	let son = arr[index*2+2]?arr[index*2+1]&amp;gt;arr[index*2+2]?index*2+1:index*2+1:index*2+1 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	while(son&amp;lt;arr.length&amp;amp;&amp;amp;arr[index]&amp;lt;arr[son])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		[arr[index],arr[son]] = [arr[son],arr[index]]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		index = son&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		son = arr[index*2+2]?arr[index*2+1]&amp;gt;arr[index*2+2]?index*2+1:index*2+1:index*2+1 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;3-插入元素&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-插入元素&#34;&gt;#&lt;/a&gt; 3. 插入元素&lt;/h4&gt;
&lt;p&gt;每次往堆插入元素时在最后的地方插入并进行上浮的操作。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;function push (val)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	arr.push(val)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	up(arr.length-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;4-弹出元素&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-弹出元素&#34;&gt;#&lt;/a&gt; 4. 弹出元素&lt;/h4&gt;
&lt;p&gt;每次从堆中弹出根元素然后将最后一个元素放在根元素上进行下浮操作。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;function pop ()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	let val = arr[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	arr[0] = arr.pop()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	down(0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	return val&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;5-创建一个堆类&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5-创建一个堆类&#34;&gt;#&lt;/a&gt; 5. 创建一个堆类&lt;/h4&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;class Quque&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    constructor(quque=[],compare=(a,b)=&amp;gt;a-b)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.compare = (a,b)=&amp;gt;compare(this.arr[a],this.arr[b]) //比较函数如果没传的话默认构建大顶堆&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.quque = quque //用于一开始接受一个数组然后用build将这个数组构建成堆&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.arr = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // 如果一开始传入了一个数组就将其构建成一个堆&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    build()&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.quque.forEach((a)=&amp;gt;this.push(a))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.quque = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    up(index)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let father = Math.floor((index-1)/2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        while(father&amp;gt;=0&amp;amp;&amp;amp;this.compare(index,father)&amp;gt;0)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            [this.arr[father],this.arr[index]] = [this.arr[index],this.arr[father]]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            index = father&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            father = Math.floor((index-1)/2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    down(index)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let son = this.arr[index*2+2]?this.arr[index*2+1]&amp;lt;this.arr[index*2+2]?index*2+2:index*2+1:index*2+1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        while(this.compare(index,son)&amp;lt;0)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            [this.arr[index],this.arr[son]] = [this.arr[son],this.arr[index]]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            index = son&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            son = this.arr[index*2+2]?this.arr[index*2+1]&amp;lt;this.arr[index*2+2]?index*2+2:index*2+1:index*2+1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    push(val)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.arr.push(val)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.up(this.arr.length-1) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    pop()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let val = this.arr[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.arr[0] = this.arr.pop()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.down(0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return val&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;优先队列&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#优先队列&#34;&gt;#&lt;/a&gt; 优先队列&lt;/h3&gt;
&lt;p&gt;​	优先队列顾名思义就是一个队列，队列里面的元素有优先级比如每次弹出的都是最大值或者最小值。优先队列可以用堆进行实现。&lt;/p&gt;
&lt;h4 id=&#34;1a-href347-前-k-个高频元素-力扣leetcodehttpsleetcodecnproblemstop-k-frequent-elements前k个高频元素a&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1a-href347-前-k-个高频元素-力扣leetcodehttpsleetcodecnproblemstop-k-frequent-elements前k个高频元素a&#34;&gt;#&lt;/a&gt; 1.&lt;a href=&#34;[347. 前 K 个高频元素 - 力扣（LeetCode）](https://leetcode.cn/problems/top-k-frequent-elements/)&#34;&gt;前 k 个高频元素&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;​	因为要获取前 k 个高频元素，所以这里使用小顶堆。当堆的元素的个数超过了 k 就将最小元素即根元素弹出，因此当遍历一遍后就留下了最大的 k 个元素。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;class root &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    constructor()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.arr = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    up(index)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let fatherIndex = Math.floor((index-1)/2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        while(fatherIndex&amp;gt;=0&amp;amp;&amp;amp;this.arr[index][1]&amp;lt;this.arr[fatherIndex][1])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            [this.arr[index],this.arr[fatherIndex]] = [this.arr[fatherIndex],this.arr[index]]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            index = fatherIndex&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            fatherIndex = Math.floor((index-1)/2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    down(index)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(!this.arr[index*2+1]) return&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let sonindex = this.arr[index*2+2]?this.arr[index*2+1][1]&amp;gt;this.arr[index*2+2][1]?index*2+2:index*2+1:this.arr[index*2+1][1] &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        while(sonindex&amp;lt;this.arr.length&amp;amp;&amp;amp;this.arr[index][1]&amp;gt;this.arr[sonindex][1])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            [this.arr[index],this.arr[sonindex]] = [this.arr[sonindex],this.arr[index]]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            index = sonindex&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if(!this.arr[index*2+1]) return&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            sonindex = this.arr[index*2+2]?this.arr[index*2+1][1]&amp;gt;this.arr[index*2+2][1]?		index*2+2:index*2+1:this.arr[index*2+1][1]         &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    push(list)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.arr.push(list)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.up(this.arr.length-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    pop()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.arr[0] = this.arr.pop()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.down(0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    size()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return this.arr.length&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;var topKFrequent = function(nums, k) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let map = new Map()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let quque = new root()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for(let num of nums)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        map.set(num,(map.get(num)||0)+1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for(let array of map.entries())&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        quque.push(array)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(quque.size()&amp;gt;k)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            quque.pop()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return quque.arr.map((a)=&amp;gt;a[0])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;2-a-href2208-将数组和减半的最少操作次数-力扣leetcodehttpsleetcodecnproblemsminimum-operations-to-halve-array-sum将数组和减半的最少操作次数a&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-a-href2208-将数组和减半的最少操作次数-力扣leetcodehttpsleetcodecnproblemsminimum-operations-to-halve-array-sum将数组和减半的最少操作次数a&#34;&gt;#&lt;/a&gt; 2. &lt;a href=&#34;[2208. 将数组和减半的最少操作次数 - 力扣（LeetCode）](https://leetcode.cn/problems/minimum-operations-to-halve-array-sum/)&#34;&gt;将数组和减半的最少操作次数&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;​	将数组放进大顶堆中，每次将根元素减半，减半后看看根元素是否比子元素小，如果小的话就下沉直到数组和小于数组的一半。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;class Quque&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    constructor(quque=[],compare=(a,b)=&amp;gt;a-b)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.compare = (a,b)=&amp;gt;compare(this.arr[a],this.arr[b])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.quque = quque&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.arr = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    build()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.quque.forEach((a)=&amp;gt;this.push(a))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.quque = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    up(index)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let father = Math.floor((index-1)/2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        while(father&amp;gt;=0&amp;amp;&amp;amp;this.compare(index,father)&amp;gt;0)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            [this.arr[father],this.arr[index]] = [this.arr[index],this.arr[father]]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            index = father&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            father = Math.floor((index-1)/2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    down(index)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let sonindex = this.arr[index*2+2]?this.arr[index*2+1]&amp;lt;this.arr[index*2+2]?index*2+2:index*2+1:index*2+1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        while(this.compare(index,sonindex)&amp;lt;0)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            [this.arr[index],this.arr[sonindex]] = [this.arr[sonindex],this.arr[index]]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            index = sonindex&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            sonindex = this.arr[index*2+2]?this.arr[index*2+1]&amp;lt;this.arr[index*2+2]?index*2+2:index*2+1:index*2+1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    push(val)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.arr.push(val)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.up(this.arr.length-1) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    pop()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let val = this.arr[0]/2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.arr[0] = val&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.down(0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return val&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;var halveArray = function(nums) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let sum = 0,quque = new Quque(nums),res =0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    quque.build()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    nums.forEach((a)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sum+=a   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let target = sum/2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while(sum&amp;gt;target)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let value = quque.pop()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sum -= value&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        res++&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return res&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://seele-exzzz.github.io/2023/09/11/project/ProjectFunction/</guid>
            <title>项目功能介绍</title>
            <link>https://seele-exzzz.github.io/2023/09/11/project/ProjectFunction/</link>
            <pubDate>Mon, 11 Sep 2023 15:06:23 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;截图&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#截图&#34;&gt;#&lt;/a&gt; 截图&lt;/h2&gt;
&lt;h3 id=&#34;1-画笔橡皮擦文字复制到剪切板的功能展示&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-画笔橡皮擦文字复制到剪切板的功能展示&#34;&gt;#&lt;/a&gt; 1. 画笔，橡皮擦，文字，复制到剪切板的功能展示。&lt;/h3&gt;
&lt;p&gt;​	画笔：可以使用下面的按钮以及输入框改变画笔的大小并在截图区域绘制。&lt;/p&gt;
&lt;p&gt;​    橡皮擦：清除用画笔绘制的内容同时可以使用下面的按钮以及输入框改变橡皮擦的大小&lt;/p&gt;
&lt;p&gt;​	文字：在截图框输入文字。&lt;/p&gt;
&lt;p&gt;​	复制：点击√即可复制到剪切板。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://typora-seele-exzzz.oss-cn-guangzhou.aliyuncs.com/img/qiuzhao/projectezgif.com-video-to-gif.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-退出撤回保存的功能展示&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-退出撤回保存的功能展示&#34;&gt;#&lt;/a&gt; 2. 退出，撤回，保存的功能展示。&lt;/h3&gt;
&lt;p&gt;​		退出：右键可以退出截图同时截图框可以拖动，截图内容以拖动后的截图框为主。&lt;/p&gt;
&lt;p&gt;​		撤回：当进入编辑截图时，点击撤回即可清除绘制以及文本等等内容。&lt;/p&gt;
&lt;p&gt;​		保存：保存按钮将图片保存。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://typora-seele-exzzz.oss-cn-guangzhou.aliyuncs.com/img/qiuzhao/projectezgif.com-video-to-gif%20(1).gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;便利贴&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#便利贴&#34;&gt;#&lt;/a&gt; 便利贴&lt;/h2&gt;
&lt;h3 id=&#34;1创建清除便利贴的功能展示&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1创建清除便利贴的功能展示&#34;&gt;#&lt;/a&gt; 1. 创建，清除便利贴的功能展示。&lt;/h3&gt;
&lt;p&gt;​	 可以创建便利贴并在便利贴记录事情。便利贴可以创建多个，且可以移动。当事情完成后就可以清除。当软件启动时，未清除的便利贴还会显示。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://typora-seele-exzzz.oss-cn-guangzhou.aliyuncs.com/img/qiuzhao/projectezgif.com-video-to-gif%20(2).gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;软件地址&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#软件地址&#34;&gt;#&lt;/a&gt; 软件地址：&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMU1va1oxc1c4LXJENlRrdHhyancwQkE/cHdkPTEyMzQ=&#34;&gt;百度网盘&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;[Release 修复了图标,便利贴清除等相关bug · SEELE-EXZzz/desktool (github.com)](https://github.com/SEELE-EXZzz/desktool/releases/tag/1.1.0)&#34;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://seele-exzzz.github.io/2023/08/12/project/%E7%94%A8electron%E5%AE%9E%E7%8E%B0%E6%88%AA%E5%9B%BE%E5%8A%9F%E8%83%BD/</guid>
            <title>electron截图功能</title>
            <link>https://seele-exzzz.github.io/2023/08/12/project/%E7%94%A8electron%E5%AE%9E%E7%8E%B0%E6%88%AA%E5%9B%BE%E5%8A%9F%E8%83%BD/</link>
            <category term="项目" scheme="https://seele-exzzz.github.io/categories/project/" />
            <category term="vue" scheme="https://seele-exzzz.github.io/tags/vue/" />
            <category term="electron" scheme="https://seele-exzzz.github.io/tags/electron/" />
            <category term="element-ui" scheme="https://seele-exzzz.github.io/tags/element-ui/" />
            <category term="项目" scheme="https://seele-exzzz.github.io/tags/%E9%A1%B9%E7%9B%AE/" />
            <pubDate>Sat, 12 Aug 2023 18:29:32 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;想要实现截图功能，需要设置一个全屏隐藏菜单栏且透明的窗口，在窗口上放上屏幕的截图，然后监听鼠标，获取两次鼠标点击的位置，根据这个位置将图片用 canvas.drawImage 方法将图片写入 canvas 标签。然后再做保存或者写入剪切板的操作。&lt;/p&gt;
&lt;h2 id=&#34;一-基本功能&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一-基本功能&#34;&gt;#&lt;/a&gt; 一、基本功能&lt;/h2&gt;
&lt;h3 id=&#34;一-进程间通信&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一-进程间通信&#34;&gt;#&lt;/a&gt; 一、进程间通信&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//渲染进程&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;el-button type=&amp;quot;primary&amp;quot; @click=&amp;quot;screenHot&amp;quot;&amp;gt;截图&amp;lt;/el-button&amp;gt; //设置一个按钮。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;screenHot()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ipcRenderer.send(&amp;#x27;screenHot&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;//向主进程发送消息。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//主进程&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let fullScreen&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ipcMain.on(&amp;#x27;screenHot&amp;#x27;,async()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	win.hide()//主窗口隐藏&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //创建一个全屏且隐藏菜单栏的窗口。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    fullScreen= new BrowserWindow(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        autoHideMenuBar: true, // 自动隐藏菜单栏&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        useContentSize: true, // width 和 height 将设置为 web 页面的尺寸&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        movable: false, // 是否可移动&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        frame: false, // 无边框窗口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        resizable: false, // 窗口大小是否可调整&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        hasShadow: false, // 窗口是否有阴影&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        transparent: true, // 使窗口透明&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        fullscreenable: true, // 窗口是否可以进入全屏状态&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        fullscreen: true, // 窗口是否全屏&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        simpleFullscreen: true, // 在 macOS 上使用 pre-Lion 全屏&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        alwaysOnTop: false, // 窗口是否永远在别的窗口的上面&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      webPreferences: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        nodeIntegration: process.env.ELECTRON_NODE_INTEGRATION,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        contextIsolation: !process.env.ELECTRON_NODE_INTEGRATION&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if (process.env.WEBPACK_DEV_SERVER_URL) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      await fullScreen.loadURL(process.env.WEBPACK_DEV_SERVER_URL+&amp;#x27;screenHot.html&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      createProtocol(&amp;#x27;app&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      fullScreen.loadURL(&amp;#x27;app://./screenHot.html&amp;#x27;)//加载页面&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ipcMain.on(&amp;#x27;getFullScreen&amp;#x27;,async() =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  //获取屏幕大小,以及缩放因子scaleFactor。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  const &amp;#123; size, scaleFactor &amp;#125; = screen.getPrimaryDisplay()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  const sources = await desktopCapturer.getSources(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    types:[&amp;#x27;screen&amp;#x27;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    thumbnailSize: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      width:size.width*scaleFactor,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      height:size.height*scaleFactor&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  // 向渲染进程发送屏幕截图&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fullScreen.webContents.send(&amp;#x27;sendFullScreen&amp;#x27;, sources[0],size)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;二-渲染进程获取桌面截图&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二-渲染进程获取桌面截图&#34;&gt;#&lt;/a&gt; 二、渲染进程获取桌面截图&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;img&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;canvas&amp;gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mounted()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let img = document.querySelector(&amp;#x27;img&amp;#x27;) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ipcRenderer.send(&amp;#x27;getFullScreen&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ipcRenderer.on(&amp;#x27;sendFullScreen&amp;#x27;, (event, message) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            img.src = message.thumbnail.toDataURL()   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;三-监听鼠标获取坐标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#三-监听鼠标获取坐标&#34;&gt;#&lt;/a&gt; 三、监听鼠标获取坐标&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;methods:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //获取第一次鼠标按下时的坐标&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    getStartPostion(e)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.startX = e.clientX&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.startY = e.clientY&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //获取移动时的坐标&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    getlastPostion(e)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.endX = e.clientX&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.endY = e.clientY&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //删除mousemove的监听事件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    getfinallyPostion()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        document.removeEventListener(&amp;#x27;mousemove&amp;#x27;,this.getlastPostion)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mounted()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    document.addEventListener(&amp;#x27;mousedown&amp;#x27;,this.getStartPostion)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    document.addEventListener(&amp;#x27;mousemove&amp;#x27;,this.getlastPostion)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    document.addEventListener(&amp;#x27;mouseup&amp;#x27;,this.getfinallyPostion)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;四-根据坐标生成一个矩形的截图区域&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#四-根据坐标生成一个矩形的截图区域&#34;&gt;#&lt;/a&gt; 四、根据坐标生成一个矩形的截图区域&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;div v-show=&amp;quot;isShowCutScreen&amp;quot; :style=&amp;quot;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    position: &amp;#x27;absolute&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    left: startX + &amp;#x27;px&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    top: startY + &amp;#x27;px&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    width: (endX - startX) + &amp;#x27;px&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    height: (endY - startY) + &amp;#x27;px&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    border: &amp;#x27;2px solid black&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&amp;quot;&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	return&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        isShowCutScreen:false,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        startX:0, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        startY:0,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        endX:0,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        endY:0,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//鼠标第一个点击时，截图区域展示出来&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;getStartPostion(e)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(!this.isShowCutScreen)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      this.isShowCutScreen = true  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      return&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    this.startX = e.clientX&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    this.startY = e.clientY&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//截图区域展示后再获取鼠标移动时的坐标&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;getlastPostion(e)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(!this.isShowCutScreen) return&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    this.endX = e.clientX&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    this.endY = e.clientY&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;五-将截图写入canvas同时复制至剪切板&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#五-将截图写入canvas同时复制至剪切板&#34;&gt;#&lt;/a&gt; 五、将截图写入 canvas 同时复制至剪切板&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;button v-show=&amp;quot;isShowSetting&amp;quot; @click=&amp;quot;copyToclipboard&amp;quot;&amp;gt;复制并关闭&amp;lt;/button&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;copyToclipboard()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	/*获取物理像素与CSS像素之比，有些设备这个比值会大于一，如果不乘这个值就会出现，截图位置和大小有偏差。相当于将截图区域的图片放大这个系数放在没有放大的canvas中，截图范围变小。*/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    const devicePixelRatio = window.devicePixelRatio&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let canvas = document.querySelector(&amp;#x27;canvas&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let ctx=canvas.getContext(&amp;quot;2d&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let img=document.querySelector(&amp;#x27;img&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let startX = this.startX*devicePixelRatio&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let startY = this.startY*devicePixelRatio&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let endX = this.endX*devicePixelRatio&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let endY = this.endY*devicePixelRatio&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let width = endX-startX&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let height = endY-startY&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    canvas.width = width&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    canvas.height = height&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ctx.drawImage(img,startX,startY,width,height,0,0,width,height)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //将canvas变成blob对象，然后使用clipboard复制到剪切板中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    canvas.toBlob((blob)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        navigator.clipboard.write([new ClipboardItem(&amp;#123; &amp;#x27;image/png&amp;#x27;: blob &amp;#125;)]).then(()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            ipcRenderer.send(&amp;#x27;closeFullScreen&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;).catch((err)=&amp;gt;console.log(err))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;)          &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#&#34;&gt;#&lt;/a&gt; &lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;[基于electron、vite 和 react，我做了一个截图桌面软件 - 掘金 (juejin.cn)](https://juejin.cn/post/7239514481755127845?searchId=202308102041027394C7E481B4D632E215)&#34;&gt;在 electron 中实现截图&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;[用Vite+Electron搞个微信截图工具（区域截屏工具） - 掘金 (juejin.cn)](https://juejin.cn/post/7111115472182968327?searchId=20230810204054CAEE239023ED2A291BEA)&#34;&gt;在 electron 中实现截图&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;[剪贴板操作 Clipboard API 教程 - 阮一峰的网络日志 (ruanyifeng.com)](https://www.ruanyifeng.com/blog/2021/01/clipboard-api.html)&#34;&gt;剪切板使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://seele-exzzz.github.io/2023/08/09/algorithm/acm%E6%A8%A1%E5%BC%8F/</guid>
            <title>acm模式</title>
            <link>https://seele-exzzz.github.io/2023/08/09/algorithm/acm%E6%A8%A1%E5%BC%8F/</link>
            <category term="算法" scheme="https://seele-exzzz.github.io/categories/algorithm/" />
            <category term="算法" scheme="https://seele-exzzz.github.io/tags/%E7%AE%97%E6%B3%95/" />
            <pubDate>Wed, 09 Aug 2023 18:23:41 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;acm模式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#acm模式&#34;&gt;#&lt;/a&gt; acm 模式&lt;/h2&gt;
&lt;p&gt;众所周知，企业机试是要使用 acm 模式的即自行处理输入输出，而不是力扣上的那种核心代码模式。所以之后了解了一下 JavaScript 获取输入输出的方式。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	javaScript Node模式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const readline = require(&amp;#x27;readline&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const rl = readline.createInterface(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	input:process.stdin,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	output:process.stdout&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rl.on(&amp;#x27;line&amp;#x27;,(input)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//处理输入的每行数据，这里就是之前力扣上要写的代码。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//input就是输入数据。另外有时input并不是处理的数据而是条件所以在处理数据的时候还需要判断一下。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	console.log()//在力扣return是输出数据，而acm模式则是通过console.log打印输出数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 与力扣相比就多了以上这些代码。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;处理输入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#处理输入&#34;&gt;#&lt;/a&gt; 处理输入&lt;/h2&gt;
&lt;h3 id=&#34;1-输入的类型转化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-输入的类型转化&#34;&gt;#&lt;/a&gt; 1. 输入的类型转化&lt;/h3&gt;
&lt;p&gt;在获取到数据后，需要分辨那些是需要用的，那些是用不着的。同时还需对数据作类型转化。因为拿到的数据大概率是字符串，需要将字符串转化为需要的数据类型比如数组，数字。可以使用正则判断，到底是数组字符串还是数字字符串。&lt;/p&gt;
&lt;h4 id=&#34;1-字符串转数字&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-字符串转数字&#34;&gt;#&lt;/a&gt; 1. 字符串转数字&lt;/h4&gt;
&lt;p&gt;​	首先如果一行只有数字的话，可以匹配非数字以及空格，如果匹配成功就说明这一行除数字，换行等其他数据类型。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let reg = /[^0-9\s]/g&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//input为输入数据，如果成功匹配则说明有除了数字空格等其他数据类型&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if(!reg.test(input))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	todo //如果只想要某行数据是只有数字的话&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;2字符串转数组&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2字符串转数组&#34;&gt;#&lt;/a&gt; 2. 字符串转数组&lt;/h4&gt;
&lt;p&gt;因为数组有 [] 可以匹配这个，另外也可以使用字符串的 indexOf 方法获取 [] 的下标，用 slice () 截取字符串数组中数组的部分，然后使用 split (‘’) 转成数组&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let arr = input.slice(input.indexOf(&amp;#x27;[&amp;#x27;),input.indexOf(&amp;#x27;]&amp;#x27;)+1).spilt(&amp;#x27;&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;2输入的数据构造二叉树或者链表&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2输入的数据构造二叉树或者链表&#34;&gt;#&lt;/a&gt; 2. 输入的数据构造二叉树或者链表&lt;/h3&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://seele-exzzz.github.io/2023/08/03/project/electron-%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AAelectron%E9%A1%B9%E7%9B%AE/</guid>
            <title>electron配置</title>
            <link>https://seele-exzzz.github.io/2023/08/03/project/electron-%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AAelectron%E9%A1%B9%E7%9B%AE/</link>
            <category term="项目" scheme="https://seele-exzzz.github.io/categories/project/" />
            <category term="vue" scheme="https://seele-exzzz.github.io/tags/vue/" />
            <category term="electron" scheme="https://seele-exzzz.github.io/tags/electron/" />
            <category term="element-ui" scheme="https://seele-exzzz.github.io/tags/element-ui/" />
            <category term="项目" scheme="https://seele-exzzz.github.io/tags/%E9%A1%B9%E7%9B%AE/" />
            <pubDate>Thu, 03 Aug 2023 15:04:45 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;electron-从零搭建一个electron项目&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#electron-从零搭建一个electron项目&#34;&gt;#&lt;/a&gt; electron - 从零搭建一个 electron 项目&lt;/h1&gt;
&lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;要想将 vue 引入 electron 中有两种方式，分别为 electron-vue 和 Vue CLI Plugin Electron Builder. 前者虽然出的早，但很久不维护了。因此这边使用后者即 Vue CLI Plugin Electron Builder。首先需要用 vue 的脚手架生成 vue 项目，然后在引入 electron 插件。&lt;/p&gt;
&lt;h2 id=&#34;创建electron项目&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#创建electron项目&#34;&gt;#&lt;/a&gt; 创建 electron 项目&lt;/h2&gt;
&lt;h3 id=&#34;1-创建vue项目&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-创建vue项目&#34;&gt;#&lt;/a&gt; 1、创建 vue 项目&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm i @vue/cli -g //全局安装vue cli脚手架&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vue create &amp;lt;name&amp;gt; //脚手架创建vue项目，前面和创建vue项目一模一样&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;2-添加electron插件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-添加electron插件&#34;&gt;#&lt;/a&gt; 2、添加 electron 插件&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;vue add electron-builder &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cnpm i electron --S //这里用npm的话大概率下载不了，因为electron有一部分代码在GitHub中，要么改镜像要么直接用cnpm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这时一个 electron 项目就出来了。&lt;/p&gt;
&lt;h2 id=&#34;配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置&#34;&gt;#&lt;/a&gt; 配置&lt;/h2&gt;
&lt;p&gt;如果用最新的 vue-cli 的话，这时 webpack 应该在 5 以上，5 以上的 webpack 不再自动引入 polyfill 了，原因是引入这个会让最后的打包体积变得很大，webpack 不建议开发者在浏览器端使用 polyfill。现在要么不用 node，要么手动引入 polyfill。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cnpm install --save path-browserify crypto-browserify//安装path-browserify和crypto-browserify&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//在vue.config.js中加入如下配置。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;module.exports = defineConfig(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  transpileDependencies: true,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  configureWebpack: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    resolve: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      fallback: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;quot;fs&amp;quot;: false,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;quot;path&amp;quot;: require.resolve(&amp;quot;path-browserify&amp;quot;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;quot;crypto&amp;quot;: require.resolve(&amp;quot;crypto-browserify&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;之后会出现’__dirname is not defined’这个错误。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;在上面的基础上加如下的配置即可。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pluginOptions:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   electronBuilder:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     nodeIntegration:true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://seele-exzzz.github.io/2023/08/02/algorithm/%E9%93%BE%E8%A1%A8%E8%BF%9B%E9%98%B6-%E8%AE%BA%E9%80%92%E5%BD%92%E5%9C%A8%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8/</guid>
            <title>链表进阶</title>
            <link>https://seele-exzzz.github.io/2023/08/02/algorithm/%E9%93%BE%E8%A1%A8%E8%BF%9B%E9%98%B6-%E8%AE%BA%E9%80%92%E5%BD%92%E5%9C%A8%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8/</link>
            <category term="算法" scheme="https://seele-exzzz.github.io/categories/algorithm/" />
            <category term="算法" scheme="https://seele-exzzz.github.io/tags/%E7%AE%97%E6%B3%95/" />
            <category term="链表" scheme="https://seele-exzzz.github.io/tags/%E9%93%BE%E8%A1%A8/" />
            <category term="递归" scheme="https://seele-exzzz.github.io/tags/%E9%80%92%E5%BD%92/" />
            <pubDate>Wed, 02 Aug 2023 21:31:36 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;链表进阶-论递归在链表中的作用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#链表进阶-论递归在链表中的作用&#34;&gt;#&lt;/a&gt; 链表进阶 - 论递归在链表中的作用&lt;/h1&gt;
&lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;初次接触链表的时候，一方面在改变指针的时候容易出现问题导致链表出现环，当然之后只要涉及改变指针就靠画图理顺指针改变顺序解决了这个问题，另一方面链表与数组不一样的点在于链表无法回退，这时递归登场了，因为递归有回溯的过程，所以只要将链表的下一项当作参数，那么在回溯的时候自然就会进行回退。使用递归能很轻松地解决蛮多链表的问题。以下是一些用递归解决链表的类型题目。&lt;/p&gt;
&lt;h2 id=&#34;一-反转链表&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一-反转链表&#34;&gt;#&lt;/a&gt; 一 、反转链表&lt;/h2&gt;
&lt;p&gt;这类型题目主要是需要在外面设置一个变量储存链表，然后将链表的下一项当作递归的参数，当到达要交换的最后一个节点时就要 return，然后在回溯的部分交换，外面的链表记得在交换后往前走，里面的链表在返回上一层函数的时候会自动回退，这就起到了前后两边交换节点。同时反转链表有两种情况，一种是反转相邻的节点，另一种是反转的节点隔一个节点。&lt;/p&gt;
&lt;h3 id=&#34;a-href剑指-offer-ii-024-反转链表-力扣leetcodehttpsleetcodecnproblemsuhnkqh剑指-offer-ii-024-反转链表a&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#a-href剑指-offer-ii-024-反转链表-力扣leetcodehttpsleetcodecnproblemsuhnkqh剑指-offer-ii-024-反转链表a&#34;&gt;#&lt;/a&gt; &lt;a href=&#34;[剑指 Offer II 024. 反转链表 - 力扣（LeetCode）](https://leetcode.cn/problems/UHnkqh/)&#34;&gt;剑指 Offer II 024. 反转链表&lt;/a&gt;&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;var reverseList = function(head) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(!head||!head.next) return head //如果链表为空或者只有一项return原链表就行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    /*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	这里用到了虚拟头节点，因为第一个头节点也要交换如果设置虚拟头节点方便交换头节点，另外也需要在外面设置一个变量一个正向移动，另一个在回溯中逆向移动两个交换节点就能实现链表反转。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let cur = new ListNode(0,head),node = cur&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    const dfs=(list)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	//因为最后一个节点要交换，交换节点需要到前一个节点，所以这里到最后一个节点就return这样回溯部分就从倒二个节点开始回退&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(!list.next) return&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        //一旦交换成功就return true，一旦return的结果是true就立马return true防止继续进行回溯部分。导致已经交换过的节点继续交换。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(dfs(list.next)) return true &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        //最后一次交换有两种情况，一种就是这个，交换节点挨着。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(cur.next==list)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            let temp = cur.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            cur.next = cur.next.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            temp.next = cur.next.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            cur.next.next = temp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        //大部分交换时，交换的节点都隔着节点&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let temp1 = cur.next,temp2=list.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cur.next = cur.next.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        list.next = list.next.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        temp2.next = cur.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cur.next = temp2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        temp1.next = list.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        list.next = temp1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cur = temp2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        //如果要交换的节点之间隔着一个节点，交换后cur的下个节点就是list这时该赶紧return。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(cur.next==list) return true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dfs(node)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return node.next //最后return记得不要带上自己设置的虚拟头节点。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;a-href92-反转链表-ii-力扣leetcodehttpsleetcodecnproblemsreverse-linked-list-ii-92-反转链表-iia&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#a-href92-反转链表-ii-力扣leetcodehttpsleetcodecnproblemsreverse-linked-list-ii-92-反转链表-iia&#34;&gt;#&lt;/a&gt; &lt;a href=&#34;[92. 反转链表 II - 力扣（LeetCode）](https://leetcode.cn/problems/reverse-linked-list-ii/)&#34;&gt; 92. 反转链表 II&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这题与上面一题差别在于，不是整个链表反转。因此在在用递归反转链表时，需用 while 循环到达需要反转的链表节点前面，同时递归函数增加一个参数用于判断是否到达了最后一个需要反转的节点。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;var reverseBetween = function(head, left, right) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(!head.next||left==right) return head &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let node = new ListNode(0,head) //这里同样需要设置虚拟头节点，因为有可能left为1，头节点需要反转。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let l=node,r=node&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //用while循环让l和r达到需要交换的第一个节点前。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while(left&amp;gt;1)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       l=l.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       r=r.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       left --&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       right --&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //下面代码与上题一致，无非就是多了参数，判断条件有变，交换部分的代码一致。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    const dfs =(r,right)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(right==0) return&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(dfs(r.next,right-1)) return true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(l.next==r)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            l.next = l.next.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            r.next = l.next.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            l.next.next = r&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let temp1=l.next,temp2=r.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        l.next = l.next.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        r.next = r.next.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        temp1.next = r.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        r.next = temp1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        temp2.next = l.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        l.next = temp2 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        l = temp2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(l==r||l.next==r) return true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dfs(r,right)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return node.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;a-href2074-反转偶数长度组的节点-力扣leetcodehttpsleetcodecnproblemsreverse-nodes-in-even-length-groups2074-反转偶数长度组的节点a&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#a-href2074-反转偶数长度组的节点-力扣leetcodehttpsleetcodecnproblemsreverse-nodes-in-even-length-groups2074-反转偶数长度组的节点a&#34;&gt;#&lt;/a&gt; &lt;a href=&#34;[2074. 反转偶数长度组的节点 - 力扣（LeetCode）](https://leetcode.cn/problems/reverse-nodes-in-even-length-groups/)&#34;&gt;2074. 反转偶数长度组的节点&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这题相比于上一题在于不只反转一次。反转的代码依旧可以用上面代码不过判断条件复杂一些。另外最后一组的链表长度如果小于倒数第二组的长度，这时如果长度为偶数则还要反转，而不是最后一组是偶数组才要反转，一开始还理解错误题目来着。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;var reverseEvenLengthGroups = function(head) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(!head||!head.next||!head.next.next) return head&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let cur = head,outside = head,inside = head,index = 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    const dfs =(list,num,k)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    /*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	判断条件相比之前的题有亿点多，一共有四种情况。分为两大类一类是没走完，另一类是走到末尾了。反转链表的代码还是一样。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	没走完的情况：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	1.这时list不为空，num为0。如果当前所在组是奇数，k%2为1 这时不该反转链表，也是不执行回溯部分代码，需return一个值，这里我return-1，下面接收值，如果是-1就立即return-1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	2.如果当前所在组是偶数，k%2为0 这时该反转链表，这里return不return值都行。反正要执行下面回溯部分的反转链表的代码。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	走完的情况：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	3.如果剩余链表数为偶数的话，k-num%2为0，这时要执行回溯部分的代码反转链表，记得这时需到最后一个链表后再return，因为最后一个要反转，所以反转时需到倒数第二个链表的位置。所以这里的判断条件是!list.next而且这个条件需在!list之下不然会出现list为空所以没有list.next的错误。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	4. 如果剩余链表数为奇数的话，这时list为空，同样return一个值，下面用一个变量接住后，加个判断条件return出去，防止执行回溯部分的代码。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(!list) return false&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(!list.next&amp;amp;&amp;amp;(k-num)%2==0) return&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(num==0&amp;amp;&amp;amp;k%2==0) return&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(num==0) return -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let res = dfs(list.next,num-1,k)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(res==true)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;else if(res ==false)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return false&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;else if(res==-1)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(outside.next==list)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            let temp = list&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            outside.next = outside.next.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            temp.next = outside.next.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            outside.next.next = temp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let temp2 = list.next,temp1 = outside.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        list.next = list.next.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        outside.next = outside.next.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        temp2.next = outside.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        outside.next = temp2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        temp1.next = list.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        list.next = temp1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        outside = temp2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(outside.next == list) return true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while(cur)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(dfs(inside,index,index)===false) return cur &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        //注意递归运行完后这里的outside会发生变化，需将inside赋值给outside&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        outside = inside  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let k = index&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        while(k&amp;gt;0)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if(!inside||!outside) return cur&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            inside = inside.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            outside = outside.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            k--&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(!inside||!outside) return cur&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        index++&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return cur&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;a-href25-k-个一组翻转链表-力扣leetcodehttpsleetcodecnproblemsreverse-nodes-in-k-group-25-k-个一组翻转链表a&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#a-href25-k-个一组翻转链表-力扣leetcodehttpsleetcodecnproblemsreverse-nodes-in-k-group-25-k-个一组翻转链表a&#34;&gt;#&lt;/a&gt; &lt;a href=&#34;[25. K 个一组翻转链表 - 力扣（LeetCode）](https://leetcode.cn/problems/reverse-nodes-in-k-group/)&#34;&gt; 25. K 个一组翻转链表&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;​		这题和上面一样也需要多次反转，我看评论区发现，字节似乎很喜欢考这题，不过老实说这题感觉难度和上面差不多甚至比上题可以还略微简单结果这题是困难上题是一般。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;var reverseKGroup = function(head, k) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(k==1) return head&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let node = new ListNode(0,head),l=node,r=node&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    const dfs=(r,num)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //判断条件有两个一个是剩余链表不足k个这时num大于1，r为空，无需反转。另一个是num为0需反转。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(!r) return false&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(num==0) return&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let res = dfs(r.next,num-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(res==false)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return false&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;else if(res==true)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(l.next==r)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            l.next = l.next.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            r.next = r.next.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            l.next.next = r&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            r = l&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let temp1 = l.next,temp2=r.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        l.next=l.next.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        r.next=r.next.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        temp2.next = l.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        l.next = temp2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        temp1.next = r.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        r.next = temp1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        l = temp2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(l==r||l.next==r) return true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while(r)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        dfs(r,k)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        //和上面一样递归反转后l的链表会改变，这时需将r赋给l。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        l = r&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let number = k&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        while(number&amp;gt;0)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if(!l) break&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            l = l.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            r = r.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            number--&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return node.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;二-回文链表&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二-回文链表&#34;&gt;#&lt;/a&gt; 二、回文链表&lt;/h2&gt;
&lt;h3 id=&#34;a-hreflcr-027-回文链表-力扣leetcodehttpsleetcodecnproblemsamhzsalcr-027-回文链表a&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#a-hreflcr-027-回文链表-力扣leetcodehttpsleetcodecnproblemsamhzsalcr-027-回文链表a&#34;&gt;#&lt;/a&gt; &lt;a href=&#34;[LCR 027. 回文链表 - 力扣（LeetCode）](https://leetcode.cn/problems/aMhZSa/)&#34;&gt;LCR 027. 回文链表&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个没什么好说的，记得外面的链表也要移动。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;var isPalindrome = function(head) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let cur = head&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(!head||!head.next) return true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    const dfs=(list)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(!list) return&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let res = dfs(list.next)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(res)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;else if(res==false)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return false&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(list.val!=cur.val) return false&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(cur.next==list||cur.next.next==list) return true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        //记得外面的链表也要往前移动。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cur=cur.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return dfs(cur)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;三-删除链表中满足某个条件的值&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#三-删除链表中满足某个条件的值&#34;&gt;#&lt;/a&gt; 三、删除链表中满足某个条件的值&lt;/h2&gt;
&lt;h3 id=&#34;a-href83-删除排序链表中的重复元素-力扣leetcodehttpsleetcodecnproblemsremove-duplicates-from-sorted-list83-删除排序链表中的重复元素a&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#a-href83-删除排序链表中的重复元素-力扣leetcodehttpsleetcodecnproblemsremove-duplicates-from-sorted-list83-删除排序链表中的重复元素a&#34;&gt;#&lt;/a&gt; &lt;a href=&#34;[83. 删除排序链表中的重复元素 - 力扣（LeetCode）](https://leetcode.cn/problems/remove-duplicates-from-sorted-list/)&#34;&gt;83. 删除排序链表中的重复元素&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;递推部分用哈希表获取链表各个值极其个数，回溯部分再根据哈希表删除重复的元素即可。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let map = new Map(),cur = head&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const dfs =(list)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // 当链表为空时再return而不是到链表倒数第一位再return，不然的话递推部分会记录倒数第一个值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(!list) return&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(map.has(list.val))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        map.set(list.val,map.get(list.val)+1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        map.set(list.val,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dfs(list.next)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(!list.next) return // 如果是倒数第一个就直接return到上一层也就是倒数第二个，倒数第一个位置删除不了节点。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let num = map.get(list.next.val)-1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    map.set(list.next.val,num)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(num&amp;gt;=1)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        list.next = list.next.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dfs(cur)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;return cur&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;a-href82-删除排序链表中的重复元素-ii-力扣leetcodehttpsleetcodecnproblemsremove-duplicates-from-sorted-list-ii82-删除排序链表中的重复元素-iia&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#a-href82-删除排序链表中的重复元素-ii-力扣leetcodehttpsleetcodecnproblemsremove-duplicates-from-sorted-list-ii82-删除排序链表中的重复元素-iia&#34;&gt;#&lt;/a&gt; &lt;a href=&#34;[82. 删除排序链表中的重复元素 II - 力扣（LeetCode）](https://leetcode.cn/problems/remove-duplicates-from-sorted-list-ii/)&#34;&gt;82. 删除排序链表中的重复元素 II&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;和上题差不多不过这里头节点可能会删除所以可以整一个虚拟头节点。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;var deleteDuplicates = function(head) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let map = new Map(),cur = new ListNode(false,head)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    const dfs=(list)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(!list)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            let key = map.keys()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            for(let i of key)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                if(map.get(i)==1) map.delete(i)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          return  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(map.has(list.val))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            map.set(list.val,map.get(list.val)+1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            map.set(list.val,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        dfs(list.next)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(!list.next) return&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(map.has(list.next.val)) list.next =list.next.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dfs(cur)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return cur.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;二-回文链表-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二-回文链表-2&#34;&gt;#&lt;/a&gt; 二、回文链表&lt;/h2&gt;
&lt;h3 id=&#34;a-hreflcr-027-回文链表-力扣leetcodehttpsleetcodecnproblemsamhzsalcr-027-回文链表a-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#a-hreflcr-027-回文链表-力扣leetcodehttpsleetcodecnproblemsamhzsalcr-027-回文链表a-2&#34;&gt;#&lt;/a&gt; &lt;a href=&#34;[LCR 027. 回文链表 - 力扣（LeetCode）](https://leetcode.cn/problems/aMhZSa/)&#34;&gt;LCR 027. 回文链表&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个没什么好说的，记得外面的链表也要移动。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;var isPalindrome = function(head) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let cur = head&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(!head||!head.next) return true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    const dfs=(list)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(!list) return&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let res = dfs(list.next)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(res)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;else if(res==false)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return false&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(list.val!=cur.val) return false&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(cur.next==list||cur.next.next==list) return true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        //记得外面的链表也要往前移动。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cur=cur.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return dfs(cur)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;三-删除链表中满足某个条件的值-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#三-删除链表中满足某个条件的值-2&#34;&gt;#&lt;/a&gt; 三、删除链表中满足某个条件的值&lt;/h2&gt;
&lt;h3 id=&#34;a-href83-删除排序链表中的重复元素-力扣leetcodehttpsleetcodecnproblemsremove-duplicates-from-sorted-list83-删除排序链表中的重复元素a-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#a-href83-删除排序链表中的重复元素-力扣leetcodehttpsleetcodecnproblemsremove-duplicates-from-sorted-list83-删除排序链表中的重复元素a-2&#34;&gt;#&lt;/a&gt; &lt;a href=&#34;[83. 删除排序链表中的重复元素 - 力扣（LeetCode）](https://leetcode.cn/problems/remove-duplicates-from-sorted-list/)&#34;&gt;83. 删除排序链表中的重复元素&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;递推部分用哈希表获取链表各个值极其个数，回溯部分再根据哈希表删除重复的元素即可。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let map = new Map(),cur = head&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const dfs =(list)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // 当链表为空时再return而不是到链表倒数第一位再return，不然的话递推部分会记录倒数第一个值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(!list) return&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(map.has(list.val))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        map.set(list.val,map.get(list.val)+1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        map.set(list.val,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dfs(list.next)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(!list.next) return // 如果是倒数第一个就直接return到上一层也就是倒数第二个，倒数第一个位置删除不了节点。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let num = map.get(list.next.val)-1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    map.set(list.next.val,num)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(num&amp;gt;=1)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        list.next = list.next.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dfs(cur)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;return cur&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;a-href82-删除排序链表中的重复元素-ii-力扣leetcodehttpsleetcodecnproblemsremove-duplicates-from-sorted-list-ii82-删除排序链表中的重复元素-iia-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#a-href82-删除排序链表中的重复元素-ii-力扣leetcodehttpsleetcodecnproblemsremove-duplicates-from-sorted-list-ii82-删除排序链表中的重复元素-iia-2&#34;&gt;#&lt;/a&gt; &lt;a href=&#34;[82. 删除排序链表中的重复元素 II - 力扣（LeetCode）](https://leetcode.cn/problems/remove-duplicates-from-sorted-list-ii/)&#34;&gt;82. 删除排序链表中的重复元素 II&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;和上题差不多不过这里头节点可能会删除所以可以整一个虚拟头节点。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;var deleteDuplicates = function(head) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let map = new Map(),cur = new ListNode(false,head)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    const dfs=(list)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(!list)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            let key = map.keys()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            for(let i of key)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                if(map.get(i)==1) map.delete(i)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          return  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(map.has(list.val))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            map.set(list.val,map.get(list.val)+1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            map.set(list.val,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        dfs(list.next)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(!list.next) return&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(map.has(list.next.val)) list.next =list.next.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dfs(cur)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return cur.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;a-href1171-从链表中删去总和值为零的连续节点-力扣leetcodehttpsleetcodecnproblemsremove-zero-sum-consecutive-nodes-from-linked-list1171-从链表中删去总和值为零的连续节点a&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#a-href1171-从链表中删去总和值为零的连续节点-力扣leetcodehttpsleetcodecnproblemsremove-zero-sum-consecutive-nodes-from-linked-list1171-从链表中删去总和值为零的连续节点a&#34;&gt;#&lt;/a&gt; &lt;a href=&#34;[1171. 从链表中删去总和值为零的连续节点 - 力扣（LeetCode）](https://leetcode.cn/problems/remove-zero-sum-consecutive-nodes-from-linked-list/)&#34;&gt;1171. 从链表中删去总和值为零的连续节点&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;前缀和 + 链表。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;var removeZeroSumSublists = function(head) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let arr = [],cur = new ListNode(0,head),index = -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    const dfs =(list,num)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(!list) return  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(arr.length!=0)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            arr.push(arr[num-1]+list.val)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            arr.push(list.val)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        dfs(list.next,num+1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let k = arr.indexOf(arr[num+1])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(k!=num+1&amp;amp;&amp;amp;index==-1) index = k&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(index!=-1) list.next = list.next.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(index==num) index = -1     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dfs(cur,0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return cur.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://seele-exzzz.github.io/2023/07/27/Learning-record/JavaScript%E4%B8%AD%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/</guid>
            <title>JavaScript常用方法</title>
            <link>https://seele-exzzz.github.io/2023/07/27/Learning-record/JavaScript%E4%B8%AD%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/</link>
            <category term="学习记录" scheme="https://seele-exzzz.github.io/categories/Learning-record/" />
            <category term="JavaScript" scheme="https://seele-exzzz.github.io/tags/JavaScript/" />
            <pubDate>Thu, 27 Jul 2023 16:18:19 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&#34;javascript中常用方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#javascript中常用方法&#34;&gt;#&lt;/a&gt; JavaScript 中常用方法&lt;/h1&gt;
&lt;h2 id=&#34;一-数组&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一-数组&#34;&gt;#&lt;/a&gt; 一、数组&lt;/h2&gt;
&lt;h3 id=&#34;1截取数组&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1截取数组&#34;&gt;#&lt;/a&gt; 1. 截取数组&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;slice：获取数组某一区间的元素并形成新的数组将其返回，不改变原数组.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;splice：删除数组元素同时可以插入元素，会改变原数组.&lt;/p&gt;
&lt;p&gt;slice 方法接收两个参数都为下标，区间为左闭右开。如果省略第一个参数则从第一个元素开始获取如果省略第二个参数则会一直获取到最后一个值。这两个参数都可以是负数。当参数为负数时，最后一个值的下标为 - 1 并以此往前依次减 1. 如果未获取到元素则返回空数组&lt;/p&gt;
&lt;p&gt;splice 方法接收三个参数，第一个参数是要删除值的下标不可省略另外这个参数同样也可以是负数，第二个参数的删除值的个数如果为 0 则不会删除元素，如果省略则一直删到结尾，第三个参数为插入的元素，元素不只是数字或者字符串，数组，函数或者对象都可以传入。&lt;/p&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let a = [1,2,3,4,5,6,7,8,9]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let b = [&amp;#x27;a&amp;#x27;,&amp;#x27;b&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//获取下标0到2不包括2的元素并返回形成新的数组&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(a.slice(0,2))//[ 1, 2 ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//如果第一个参数没有的话，则从头开始，第二个参数没有的话则获取到结尾//[1, 2, 3, 4, 5,6, 7, 8, 9]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(a.slice())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//获取倒数第三个到倒数第一个不包括倒数第一个元素//[ 7, 8 ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(a.slice(-3,-1))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let fun= ()=&amp;gt;&amp;#123;return 1&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let obj =&amp;#123;a,b&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a.splice(2,4,obj,fun,...b)//从删除下标2以及之后的3的元素并在2后插入对象函数等元素&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;2查找数组中某一元素的位置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2查找数组中某一元素的位置&#34;&gt;#&lt;/a&gt; 2. 查找数组中某一元素的位置&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;indexOf： 获取某一元素在数组首次出现的下标。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;lastIndexOf： 获取某一元素在数组中最后一次出现的下标。&lt;/p&gt;
&lt;p&gt;这两个方法都接收两个参数，第一个参数是要找的值，第二个参数是从那一个下标开始包括此下标（indexOf 向后，lastIndexOf 向前）找，如果没有第二个参数就默认 indexO 从头开始找，lastIndexOf 从最后向前开始找。如果没有找到该元素则返回 - 1&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let a =1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const b = [1,2,3,1,2,3,2,1,2,1]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(b.indexOf(a)) //0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(b.lastIndexOf(a)) //9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(b.indexOf(a,1)) //3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(b.lastIndexOf(a,8)) //7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(b.indexOf(a,b.indexOf(a)+1)) 获取第二个出现此元素下标&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(b.lastIndexOf(a,b.lastIndexOf(a)-1)) 获取倒数第二个出现此元素下标&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(b.indexOf(4) //-1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(b.lastIndexOf(4) //-1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;3查找数组中满足条件的元素或者下标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3查找数组中满足条件的元素或者下标&#34;&gt;#&lt;/a&gt; 3. 查找数组中满足条件的元素或者下标&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;find：获取数组中满足条件的元素&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;findIndex：获取数组中满足条件的元素的下标&lt;/p&gt;
&lt;p&gt;这两个方法都接收一个函数做参数，函数有三个参数，第一个为数组的值，第二个为该值在数组中所在的下标，第三个为该数组。其中 find 返回元素，如果没有发现满足条件的元素则返回 undefined，如果有多个元素满足也只会返回第一个满足条件的元素。findIn 返回下标，如果没有发现满足条件的元素则返回 - 1，如果有多个元素满足也只会返回第一个满足条件的下标。&lt;/p&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let a = [1,2,3,4]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(a.find((val)=&amp;gt;val&amp;gt;1)) //2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(a.findIndex((val)=&amp;gt;val&amp;gt;1)) //1 &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;4检查数组中的元素是否存在或者都满足某一条件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4检查数组中的元素是否存在或者都满足某一条件&#34;&gt;#&lt;/a&gt; 4. 检查数组中的元素是否存在或者都满足某一条件&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;every：检查数组中的元素是否都满足某一条件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;some：检查数组中的元素是否存在满足某一条件&lt;/p&gt;
&lt;p&gt;这两个方法都接收一个函数做参数，函数有三个参数，第一个为数组的值，第二个为该值在数组中所在的下标，第三个为该数组。返回值均为布尔值。&lt;/p&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let a = [1,2,3]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(a.every((val)=&amp;gt;val&amp;gt;0)) //true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(a.every((val)=&amp;gt;val&amp;gt;1)) //false&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(a.some((val)=&amp;gt;val&amp;gt;3)) //false&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(a.some((val)=&amp;gt;val&amp;gt;1)) //true&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;5将数组转化为字符串&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5将数组转化为字符串&#34;&gt;#&lt;/a&gt; 5. 将数组转化为字符串&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;join：获取参数作为分割符，如果没有则默认用‘,’(逗号) 并返回字符串。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;toString： 将数组转化为字符串并用‘,’(逗号) 分割并返回字符串。&lt;/p&gt;
&lt;p&gt;这两个方法都不会改变原数组&lt;/p&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let a = [1,2,3]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(a.toString())//1,2,3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(a.join())//1,2,3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(a.join(&amp;#x27;&amp;#x27;))//123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(a.join(&amp;#x27;-&amp;#x27;))//1-2-3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;6在数组开头或者结尾删除或者添加元素&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#6在数组开头或者结尾删除或者添加元素&#34;&gt;#&lt;/a&gt; 6. 在数组开头或者结尾删除或者添加元素&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;push：向数组末尾添加一个或多个元素，并返回新的长度。&lt;/li&gt;
&lt;li&gt;pop：从数组末尾删除一个元素，并返回被删除的元素。&lt;/li&gt;
&lt;li&gt;shift：从数组开头删除一个元素，并返回被删除的元素。&lt;/li&gt;
&lt;li&gt;unshift：向数组开头添加一个或多个元素，并返回新的长度。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;二-字符串&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二-字符串&#34;&gt;#&lt;/a&gt; 二、字符串&lt;/h2&gt;
&lt;h3 id=&#34;1字符串转化为数组&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1字符串转化为数组&#34;&gt;#&lt;/a&gt; 1. 字符串转化为数组&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;split：将字符串以某种方式分割成数组。&lt;/p&gt;
&lt;p&gt;split 传入一个参数可以是正则表达式并匹配数组中的元素将其分割为数组，返回一个数组不改变字符串。&lt;/p&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let str = &amp;#x27;1,3 4&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(str.split()) // 如果不传参数则会将返回一个数组第一个元素为整个字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[ &amp;#x27;1,3 4&amp;#x27; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(str.split(&amp;#x27;&amp;#x27;)) // 如果参数为空字符串的话，则会将字符串每一个元素传入数组中并返回这个数组&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[ &amp;#x27;1&amp;#x27;, &amp;#x27;,&amp;#x27;, &amp;#x27;3&amp;#x27;, &amp;#x27; &amp;#x27;, &amp;#x27;4&amp;#x27; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(str.split(&amp;#x27; &amp;#x27;))// 参数可以是空格，将空格作为分割符并传入数组并返回这个数组&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[ &amp;#x27;1,3&amp;#x27;, &amp;#x27;4&amp;#x27; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(str.split(&amp;#x27;,&amp;#x27;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[ &amp;#x27;1&amp;#x27;, &amp;#x27;3 4&amp;#x27; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(str.split(/[0-9]/))// 参数可以是正则表达式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[ &amp;#x27;&amp;#x27;, &amp;#x27;,&amp;#x27;, &amp;#x27; &amp;#x27;, &amp;#x27;&amp;#x27; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;2-查找字符串中某个值的位置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-查找字符串中某个值的位置&#34;&gt;#&lt;/a&gt; 2. 查找字符串中某个值的位置&lt;/h3&gt;
&lt;p&gt;1.indexOf：查找某个值在字符串的位置，这个值可以是字符串。&lt;/p&gt;
&lt;p&gt;2.lastIndexOf：查找某个值在字符串的位置，同样这个值可以是字符串。&lt;/p&gt;
&lt;p&gt;用法与数组的方法一致，不过这个方法可以很方便的求两个字符串的子串。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let str1 = &amp;#x27;abc&amp;#x27;,str2=&amp;#x27;abccbabc&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(str2.indexOf(str1))//0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(str2.lastIndexOf(str1))//5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;只要返回值不是-1就说明str是str2的子串。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;三-哈希表&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#三-哈希表&#34;&gt;#&lt;/a&gt; 三、哈希表&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;set (key,value): 设置键值对，如果某一键已经存在则会覆盖。第一个参数可以是数字，字符串，布尔值，数组，对象，函数等等值。&lt;/p&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let arr1 =[1,2],obj1=&amp;#123;a:1&amp;#125;,arr2 =[1,2],obj2=&amp;#123;a:1&amp;#125;,map = new Map(),fun1 =()=&amp;gt;&amp;#123;&amp;#125;,fun2=()=&amp;gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.set(arr1,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.set(obj1,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.set(arr2,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.set(obj2,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.set(fun1,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.set(fun2,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(map.size)//6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let arr1 =[1,2],arr2 =arr1,map = new Map()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.set(arr1,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.set(arr2,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(map.size)//1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;可以发现像数组，对象，函数尽管一模一样，但是其变量储存的地址不同所以看做是不同的键，但是如果是浅拷贝储存变量的地址一致就视作是同一个键&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;get (key): 获取某一键值在哈希表中的值。&lt;/p&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let map = new Map()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.set(1,2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.get(1)//2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.get(2)//undefined 如果找不到就会返回undefined&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;has (key): 判断某个键是否存在，并返回布尔值。&lt;/p&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let map = new Map()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.set(1,2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(map.has(1))//true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(map.has(2))//false&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;clear (): 清除哈希表所有键值对。&lt;/p&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let map = new Map()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.set(1,2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(map.has(1))//true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.clear()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(map.has(1))//false&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;delete (key): 删除某键。&lt;/p&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let map = new Map()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.set(1,2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(map.has(1))//true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.delete()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(map.has(1))//false&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;keys (): 返回一个包含哈希表所有键的迭代器。&lt;/p&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let arr1 =[1,2],obj1=&amp;#123;a:1&amp;#125;,arr2 =[1,2],obj2=&amp;#123;a:1&amp;#125;,map = new Map(),fun1 =()=&amp;gt;&amp;#123;&amp;#125;,fun2=()=&amp;gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.set(arr1,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.set(obj1,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.set(arr2,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.set(obj2,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.set(fun1,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.set(fun2,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let key = map.keys()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for(let i of key)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    console.log(i) //[ 1, 2 ] &amp;#123; a: 1 &amp;#125; [ 1, 2 ] &amp;#123; a: 1 &amp;#125; [Function: fun1] [Function: fun2]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;values (): 返回一个包含哈希表所有值的迭代器。&lt;/p&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let arr1 =[1,2],obj1=&amp;#123;a:1&amp;#125;,arr2 =[1,2],obj2=&amp;#123;a:1&amp;#125;,map = new Map(),fun1 =()=&amp;gt;&amp;#123;&amp;#125;,fun2=()=&amp;gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.set(arr1,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.set(obj1,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.set(arr2,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.set(obj2,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.set(fun1,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.set(fun2,1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let val = map.values()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for(let i of val)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    console.log(i) // 1 1 1 1 1 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://seele-exzzz.github.io/2023/07/17/algorithm/%E9%93%BE%E8%A1%A8%E5%9F%BA%E7%A1%80/</guid>
            <title>链表基础</title>
            <link>https://seele-exzzz.github.io/2023/07/17/algorithm/%E9%93%BE%E8%A1%A8%E5%9F%BA%E7%A1%80/</link>
            <category term="算法" scheme="https://seele-exzzz.github.io/categories/algorithm/" />
            <category term="算法" scheme="https://seele-exzzz.github.io/tags/%E7%AE%97%E6%B3%95/" />
            <category term="链表" scheme="https://seele-exzzz.github.io/tags/%E9%93%BE%E8%A1%A8/" />
            <pubDate>Mon, 17 Jul 2023 15:45:02 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&#34;链表基础&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#链表基础&#34;&gt;#&lt;/a&gt; 链表基础&lt;/h1&gt;
&lt;h2 id=&#34;一-链表操作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一-链表操作&#34;&gt;#&lt;/a&gt; 一、链表操作&lt;/h2&gt;
&lt;h3 id=&#34;1力扣上的链表构造函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1力扣上的链表构造函数&#34;&gt;#&lt;/a&gt; 1. 力扣上的链表构造函数&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//注意这是力扣上的构造函数不是JavaScript内置函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;function ListNode(val, next) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    this.val = (val===undefined ? 0 : val)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    this.next = (next===undefined ? null : next)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let node = new ListNode(0,head)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//通常用来给链表加上虚拟头结点方便对链表进行操作，第一个形参传值，第二形参传链表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//另外如果用const定义变量再赋予链表，这个变量就无法操作了，原因应该是在操作链表时，链表所储存的变量的地址发生变化。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;2链表移动和删除&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2链表移动和删除&#34;&gt;#&lt;/a&gt; 2. 链表移动和删除&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let cur = head &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;将head赋给变量cur，如果直接操作head然后再return的话会是null，由于这是浅拷贝，在操作cur时head也会发生改变，所以操作完cur再return head就行。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cur = cur.next //让将cur下一位赋给cur就完成了一次移动。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;while(cur)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	...	//对cur操作&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cur = cur.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; //这就完成了一次遍历，这时cur是null，head已操作&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cur.netx = cur.next.next //想删除那个节点需找到那个节点的前面一个节点，将前面那个节点的指针指向删除节点后面那个节点。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//力扣上203. 移除链表元素&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//方法一，增加虚拟节点&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;var removeElements = function(head, val) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    const cur = new ListNode(0,head)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let a = cur&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while(a.next)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(a.next.val==val)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            a.next = a.next.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            a = a.next &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return cur.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;//增加虚拟头节点的好处在于，处理原链表的头节点与其他节点的方式一致，无需在额外考虑头节点如何处理，最后只要return cur.next就行。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//方法二，在不增加虚拟头节点的情况下删除指定节点&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;var removeElements = function(head, val) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let cur = head&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    /*先用while将头节点中值等于val删除，之后就和方法一差不多，需要注意的是，删除后有可能是null或者传来的链表就是null，这是需要if条件判断一下，方法一无需判断是因为加了头节点所以不可能是null*/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while(cur&amp;amp;&amp;amp;cur.val==val)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cur = cur.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(!cur) return cur&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    head = cur //将处理好的cur赋值给head，如果不赋值，前面的操作就没有用了。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while(cur.next)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(cur.next.val==val)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            cur.next = cur.next.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            cur = cur.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return head&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;3链表的插入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3链表的插入&#34;&gt;#&lt;/a&gt; 3. 链表的插入&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//假设需要往链表head中的第n个节点插入val值，注意链表与数组一样下标从0开始&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//首先声明一个变量并将head赋值给这个变量&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let cur = head&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;方法一：不使用虚拟节点&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//如果不使用虚拟节点的话，得分两种情况，第一种删除头节点，第二种删除后面的节点&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//插入头节点&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if(n==0)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	head = new ListNode(val,head)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//移动到第n-1个节点前&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while(n&amp;gt;1)&amp;#123; //从n减到1，这时cur到n-1节点前，如果加了虚拟头节点，这时的判断条件为0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  cur = cur.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  n --&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   let node = new ListNode(val) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   /*注意这里先把cur.next先赋给node.next，如果反过来先让cur.next变成node.next，再让cur.next赋给node.next，这时cur.next已经是node，相当于自己指向自己。这里有点像两个变量交换。假设有a,b两个变量，交换a,b两个变量的值，不用解构赋值的话&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   	 let c = a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   	 a = b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   	 b = c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   node.next = cur.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   cur.next = node&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;方法二：使用虚拟头节点&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let cur = new ListNode(0,head)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let head = cur&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;while(n)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cur = cur.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	n--&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let node = new ListNode(val)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;node.next = cur.next&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cur.next = node&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;head = head.next //最后注意去除虚拟头节点&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://seele-exzzz.github.io/2023/07/14/algorithm/%E4%BA%8C%E5%8F%89%E6%A0%91%E5%9F%BA%E7%A1%80/</guid>
            <title>二叉树基础</title>
            <link>https://seele-exzzz.github.io/2023/07/14/algorithm/%E4%BA%8C%E5%8F%89%E6%A0%91%E5%9F%BA%E7%A1%80/</link>
            <category term="算法" scheme="https://seele-exzzz.github.io/categories/algorithm/" />
            <category term="二叉树" scheme="https://seele-exzzz.github.io/tags/%E4%BA%8C%E5%8F%89%E6%A0%91/" />
            <category term="算法" scheme="https://seele-exzzz.github.io/tags/%E7%AE%97%E6%B3%95/" />
            <pubDate>Fri, 14 Jul 2023 22:04:41 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&#34;二叉树基础&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二叉树基础&#34;&gt;#&lt;/a&gt; 二叉树基础&lt;/h1&gt;
&lt;h2 id=&#34;一-二叉树种类&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一-二叉树种类&#34;&gt;#&lt;/a&gt; 一、二叉树种类&lt;/h2&gt;
&lt;h3 id=&#34;1满二叉树&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1满二叉树&#34;&gt;#&lt;/a&gt; 1. 满二叉树&lt;/h3&gt;
&lt;p&gt;除最后一层有两个子节点外，最后一层没有子节点，如果某个满二叉树有 k 层则该满二叉树有 2 的 k 次方 - 1 个节点。&lt;/p&gt;
&lt;h3 id=&#34;2-完全二叉树&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-完全二叉树&#34;&gt;#&lt;/a&gt; 2. 完全二叉树&lt;/h3&gt;
&lt;p&gt;最后一层如果有缺的子节点则该子节点为右侧的子节点。如果某个完全二叉树有 k 层，则该完全二叉树则有 2 的 k-1 次方到 2 的 k 次方 - 1 个节点。满二叉树是特殊的完全二叉树&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://typora-seele-exzzz.oss-cn-guangzhou.aliyuncs.com/img/algorithm/binary_tree/%E6%BB%A1%E4%BA%8C%E5%8F%89%E6%A0%91%E5%92%8C%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%8F%89%E6%A0%91.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;3-二叉搜索树&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-二叉搜索树&#34;&gt;#&lt;/a&gt; 3. 二叉搜索树&lt;/h3&gt;
&lt;p&gt;二叉搜索树中某个节点的左节点值小于该节点，右节点值大于该节点&lt;/p&gt;
&lt;h3 id=&#34;4-二叉平衡树&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-二叉平衡树&#34;&gt;#&lt;/a&gt; 4. 二叉平衡树&lt;/h3&gt;
&lt;p&gt;在二叉搜索树的条件下，每一个节点的左子树与右子树的高度差不大于一，二叉平衡树是特殊的二叉搜索树。另外二叉树的高度从下往上数，深度从上往下数。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://typora-seele-exzzz.oss-cn-guangzhou.aliyuncs.com/img/algorithm/binary_tree/%E4%BA%8C%E5%8F%89%E5%B9%B3%E8%A1%A1%E6%A0%91.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;二-二叉树的构建&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二-二叉树的构建&#34;&gt;#&lt;/a&gt; 二、 二叉树的构建&lt;/h2&gt;
&lt;h3 id=&#34;1-构建力扣上的二叉树&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-构建力扣上的二叉树&#34;&gt;#&lt;/a&gt; 1. 构建力扣上的二叉树&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;在做力扣上102. 二叉树的层序遍历的时候，好奇试了一下console.dir(root)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;TreeNode &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  val: 3,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  left: TreeNode &amp;#123; val: 9, left: null, right: null &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  right: TreeNode &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    val: 20,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    left: TreeNode &amp;#123; val: 15, left: null, right: null &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    right: TreeNode &amp;#123; val: 7, left: null, right: null &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;// 结果是这个，根据这个我试着构建了一下二叉树，当然后面看别人的文章发现二叉树远不止这些属性和方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class TreeNode &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    constructor(val) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      this.val = val;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      this.left = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      this.right = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    addleft(left)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.left = left&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    addright(right)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.right = right&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const root = new TreeNode(3)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;root.addleft(new TreeNode(9))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;root.addright(new TreeNode(20))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;root.right.addleft(new TreeNode(15))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;root.right.addright(new TreeNode(7))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;三-二叉树的遍历&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#三-二叉树的遍历&#34;&gt;#&lt;/a&gt; 三、二叉树的遍历&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://typora-seele-exzzz.oss-cn-guangzhou.aliyuncs.com/img/cover/algorithm/binary_tree/%E4%BA%8C%E5%8F%89%E6%A0%91%E5%89%8D%E4%B8%AD%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;1-深度优先算法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-深度优先算法&#34;&gt;#&lt;/a&gt; 1. 深度优先算法&lt;/h3&gt;
&lt;h4 id=&#34;1-递归法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-递归法&#34;&gt;#&lt;/a&gt; 1. 递归法&lt;/h4&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//root为二叉树&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const result =[]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const dfs = (root)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(root==null) return&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //前序遍历&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result.push(root.val)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dfs(root.left)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dfs(root.right)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //中序遍历&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dfs(root.left)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result.push(root.val)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dfs(root.right)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //后序遍历&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dfs(root.left)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dfs(root.right)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result.push(root.val)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dfs(root)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;return result&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;2-迭代法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-迭代法&#34;&gt;#&lt;/a&gt; 2. 迭代法&lt;/h4&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//前序遍历&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const result =[],arr=[root]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;while(arr.length&amp;gt;0)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let tree = arr.pop()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(tree==null) continue&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result.push(tree.val)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	arr.push(tree.right)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    arr.push(tree.left)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;return result&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//后序遍历 在前序遍历的情况下调换调换传入arr的两个子节点，同时将最后的数组反转。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const result =[],arr=[root]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;while(arr.length&amp;gt;0)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let tree = arr.pop()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(tree==null) continue&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result.push(tree.val)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    arr.push(tree.left)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    arr.push(tree.right)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;return result.reverse()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//中序遍历&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const result =[],stack=[]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let tree = root&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;while(stack.length&amp;gt;0||tree)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	if(tree)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		stack.push(tree)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		tree = tree.left&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		let rootTree = stack.pop()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		result.push(rootTree.val)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		tree = rootTree.right&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;return result&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;2-广度优先搜索span-stylefont-size16px层序遍历span&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-广度优先搜索span-stylefont-size16px层序遍历span&#34;&gt;#&lt;/a&gt; 2. 广度优先搜索&lt;span style=&#34;font-size:16px&#34;&gt;(层序遍历)&lt;/span&gt;&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//力扣上的层序遍历最后的输出结果似乎都是二维数组，需要将每一层的值用数组储存然后将其储存进一个数组输出出去。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const result = [],arr=[root]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let res=[]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;while(arr.length&amp;gt;0)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let len = arr.length //相当于快照用于储存当前层数的长度。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while(len&amp;gt;0)&amp;#123; //当len为零时，说明当前层的值已全部弹出，这时应该用result储存当前层所有数组&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let tree = arr.shift() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        len -- &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(tree!=null)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            res.push(tree.val)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            arr.push(tree.left)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            arr.push(tree.right)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(res.length==0) break &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result.push(res) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res = [] //清空当前层用于记录下一层的值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;return result&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://seele-exzzz.github.io/2023/07/12/Learning-record/%E6%AD%A3%E5%88%99%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</guid>
            <title>正则学习记录</title>
            <link>https://seele-exzzz.github.io/2023/07/12/Learning-record/%E6%AD%A3%E5%88%99%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</link>
            <category term="学习记录" scheme="https://seele-exzzz.github.io/categories/Learning-record/" />
            <category term="正则" scheme="https://seele-exzzz.github.io/tags/%E6%AD%A3%E5%88%99/" />
            <pubDate>Wed, 12 Jul 2023 13:31:15 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;正则学习记录&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#正则学习记录&#34;&gt;#&lt;/a&gt; 正则学习记录&lt;/h1&gt;
&lt;p&gt;[toc]&lt;/p&gt;
&lt;h2 id=&#34;一-正则表达式的创建&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一-正则表达式的创建&#34;&gt;#&lt;/a&gt; 一、正则表达式的创建&lt;/h2&gt;
&lt;h3 id=&#34;1-字面量创建&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-字面量创建&#34;&gt;#&lt;/a&gt; 1. 字面量创建&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;const a = /a/igm //i表示忽略大小写，g表示全局匹配，m表示多行匹配&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;2-构造函数创建&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-构造函数创建&#34;&gt;#&lt;/a&gt; 2. 构造函数创建&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cosnt a = &amp;#x27;a&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const b = new RegExp(&amp;#x27;a&amp;#x27;) 或者 b = new RegExp(a)//这里的b打印结果与上面字面量创建的a一致&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// RegExp有两个参数，第一个参数传入一个字符串表示正则表达式，第二个参数有g全局匹配，i忽略大小写，m多行匹配&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;二-javascript中正则方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二-javascript中正则方法&#34;&gt;#&lt;/a&gt; 二、JavaScript 中正则方法&lt;/h2&gt;
&lt;h3 id=&#34;1-test方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-test方法&#34;&gt;#&lt;/a&gt; 1. test 方法&lt;/h3&gt;
&lt;p&gt;用于测试某一字符串是否满足某一正则表达式，返回一个布尔值。正则表达式的方法&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;const reg = /a/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const str = &amp;#x27;abc&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;reg.test(str)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;2-exec方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-exec方法&#34;&gt;#&lt;/a&gt; 2. exec 方法&lt;/h3&gt;
&lt;p&gt;用于匹配某一字符串中满足正则表达式的内容，返回一个数组，第一项为匹配到的内容，第二项 index 为匹配到内容第一个字符所在的索引，input 为匹配的字符串，groups 为命名的捕获组。正则表达式的方法&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;const reg = /a/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const str = &amp;#x27;abcabcaa&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const result = reg.exec(str)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(result) //[ &amp;#x27;a&amp;#x27;, index: 0, input: &amp;#x27;abcabcaa&amp;#x27;, groups: undefined ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	如果正则表达式是全局匹配的话，exec会改变的lastindex，如果exec没匹配上，这时lastindexhi变为0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const reg = /a/g&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const str = &amp;#x27;abac&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for(let i=0;i&amp;lt;3;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	console.log(reg.lastIndex)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    reg.exec(str)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    console.log(reg.lastIndex)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;// 0,1,1,3,3,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//可以用?&amp;lt;name&amp;gt;给捕获组命名。这时如果成功匹配返回的对象中groups不再是undefined而是一个属性为捕获组名字，值为匹配到的内容的对象。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const reg = /(?&amp;lt;year&amp;gt;[0-9]+)-(?&amp;lt;month&amp;gt;[0-9]+)-(?&amp;lt;day&amp;gt;[0-9]&amp;#123;2&amp;#125;)/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const str = &amp;#x27;2023-07-13&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const result = reg.exec(str)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(result)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#x27;2023-07-13&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#x27;2023&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#x27;07&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#x27;13&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  index: 0,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  input: &amp;#x27;2023-07-13&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  groups: [Object: null prototype] &amp;#123; year: 	 &amp;#x27;2023&amp;#x27;, month: &amp;#x27;07&amp;#x27;, day: &amp;#x27;13&amp;#x27; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const reg = /(?&amp;lt;year&amp;gt;[0-9]+)-(?&amp;lt;month&amp;gt;[0-9]+)-(?&amp;lt;day&amp;gt;[0-9]&amp;#123;2&amp;#125;)/g&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const str = &amp;#x27;2023-07-13 1145-14-15&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;reg.exec(str).groups&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const &amp;#123;year,month,day&amp;#125; = reg.exec(str).groups&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(year,month,day) // 1145 14 15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;3-match方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-match方法&#34;&gt;#&lt;/a&gt; 3. match 方法&lt;/h3&gt;
&lt;p&gt;匹配字符串中满足正则表达式的内容并返回一个数组，注意 match 是字符串的方法不是正则表达式的方法。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;const reg = /a/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const regG = /a/g&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const str = &amp;#x27;abcabcaa&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const result = str.match(reg) // 如果正则表达式不是全局匹配这时match返回值与exec一致&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(result)//[ &amp;#x27;a&amp;#x27;, index: 0, input: &amp;#x27;abcabcaa&amp;#x27;, groups: undefined ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const resultG = str.match(regG)// 这时会返回一个数组，数组中每一项为满足字符串中满足正则表达式中匹配规则的部分。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(resultG)//[ &amp;#x27;a&amp;#x27;, &amp;#x27;a&amp;#x27;, &amp;#x27;a&amp;#x27;, &amp;#x27;a&amp;#x27; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;4-search方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-search方法&#34;&gt;#&lt;/a&gt; 4. search 方法&lt;/h3&gt;
&lt;p&gt;匹配字符串中满足正则表达式的内容并返回第一个匹配到字符的索引。同样这也是字符串方法&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;const reg = /a/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const regG = /a/g&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const str = &amp;#x27;babcabcaa&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const result = str.search(reg) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const resultG = str.search(regG)// 全局匹配一样只返回匹配到第一个满足条件的字符的索引&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(result)//1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(resultG)//1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;5-replace方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5-replace方法&#34;&gt;#&lt;/a&gt; 5. replace () 方法&lt;/h3&gt;
&lt;p&gt;匹配字符串中满足某字符串或者正则表达式的内容并进行替换，同样也是字符串方法&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;const reg = /a/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const regG = /a/g&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const str = &amp;#x27;babcabcaa&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const result = str.replace(reg,&amp;#x27;*&amp;#x27;) //没有全局匹配只匹配第一个满足条件的&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const resultG = str.replace(regG,&amp;#x27;*&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(result) //b*bcabcaa&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(resultG) //b*bc*bc**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	replace的第二个参数可以传递一个函数，函数的参数为匹配到的内容，如果正则表达式是全局匹配的话且能匹配到多个字符，则每匹配到一个就会调用一次函数，形参为匹配到的内容&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const result = str.replace(reg,(data)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    console.log(data) // a &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const resultG = str.replace(regG,(data)=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    console.log(data) // a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;) //回调函数调用了3次&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;6-split方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#6-split方法&#34;&gt;#&lt;/a&gt; 6. split 方法&lt;/h3&gt;
&lt;p&gt;用字符串分割数组，分割方式可以为一个正则表达式并返回一个数组，数组每一项为分割后的字符串。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;const str = &amp;#x27;abc&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const newstr = str.split(&amp;#x27;&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(newstr) //[ &amp;#x27;a&amp;#x27;, &amp;#x27;b&amp;#x27;, &amp;#x27;c&amp;#x27; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	JavaScript中字符串的方法有限，如果想要反转字符串，简单的办法是用split(&amp;#x27;&amp;#x27;)转化为数	组然后调用reverse方法反转数组并调用join(&amp;#x27;&amp;#x27;)转回字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const reStr = str.split(&amp;#x27;&amp;#x27;).reverse().join(&amp;#x27;&amp;#x27;) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(reStr) // cba&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const str = &amp;#x27;2023-7-12&amp;#x27; //如果想要这个字符串中的数字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const newstr = str.split(/-/)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(newstr) [ &amp;#x27;2023&amp;#x27;, &amp;#x27;7&amp;#x27;, &amp;#x27;12&amp;#x27; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://seele-exzzz.github.io/2023/07/08/Learning-record/Typescript%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</guid>
            <title>Typescript学习记录</title>
            <link>https://seele-exzzz.github.io/2023/07/08/Learning-record/Typescript%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</link>
            <category term="学习记录" scheme="https://seele-exzzz.github.io/categories/Learning-record/" />
            <category term="typescript" scheme="https://seele-exzzz.github.io/tags/typescript/" />
            <pubDate>Sat, 08 Jul 2023 18:22:13 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;typescript学习记录&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#typescript学习记录&#34;&gt;#&lt;/a&gt; Typescript 学习记录&lt;/h1&gt;
&lt;p&gt;[toc]&lt;/p&gt;
&lt;h2 id=&#34;一-基本类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一-基本类型&#34;&gt;#&lt;/a&gt; 一、基本类型&lt;/h2&gt;
&lt;h3 id=&#34;1-基本数据类型span-stylefont-size14px-type代表类型span&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-基本数据类型span-stylefont-size14px-type代表类型span&#34;&gt;#&lt;/a&gt; 1. 基本数据类型&lt;span style=&#39;font-size:14px&#39; &gt;(type 代表类型)&lt;/span&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;any: 任意类型&lt;/li&gt;
&lt;li&gt;string: 字符串类型&lt;/li&gt;
&lt;li&gt;boolean: 布尔类型&lt;/li&gt;
&lt;li&gt;type[]，Array&lt;type&gt;: 数组类型两种表示方法&lt;/li&gt;
&lt;li&gt;[type] : 元组，如果要储存类似经纬度这类需要两个数字的数据则可以用 [number,number]&lt;/li&gt;
&lt;li&gt;void : 表示函数无返回值&lt;/li&gt;
&lt;li&gt;null : null 类型&lt;/li&gt;
&lt;li&gt;undefined : undefined 类型&lt;/li&gt;
&lt;li&gt;never : 表示从来不会出现的值&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-函数形参和返回值的类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-函数形参和返回值的类型&#34;&gt;#&lt;/a&gt; 2. 函数形参和返回值的类型&lt;/h3&gt;
&lt;figure class=&#34;highlight typescript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; f = (&lt;span class=&#34;attr&#34;&gt;a&lt;/span&gt;:&lt;span class=&#34;built_in&#34;&gt;number&lt;/span&gt;,&lt;span class=&#34;attr&#34;&gt;b&lt;/span&gt;:&lt;span class=&#34;built_in&#34;&gt;string&lt;/span&gt;):&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;string&lt;/span&gt;=&amp;gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; a+b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; f = (&lt;span class=&#34;attr&#34;&gt;a&lt;/span&gt;:&lt;span class=&#34;built_in&#34;&gt;number&lt;/span&gt;,&lt;span class=&#34;attr&#34;&gt;b&lt;/span&gt;:&lt;span class=&#34;built_in&#34;&gt;string&lt;/span&gt;):&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;void&lt;/span&gt;=&amp;gt;&lt;/span&gt;&amp;#123;&amp;#125;&lt;span class=&#34;comment&#34;&gt;//void 表示无返回值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;3-类型推断&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-类型推断&#34;&gt;#&lt;/a&gt; 3. 类型推断&lt;/h3&gt;
&lt;p&gt;ide 在编译文件时会对变量的类型进行判断，所以在声明一个变量后立马赋值，声明一个对象并对其中的属性赋值又或者函数的返回值与形参有关可以推断出来等等，这些可以推断出来的就无需加上类型。&lt;/p&gt;
&lt;figure class=&#34;highlight typescript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; a = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;//ide会推断这个变量a的类型为number类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; obj = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    a : &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;//同样ide会推断这个a属性为number类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; fun = (&lt;span class=&#34;attr&#34;&gt;a&lt;/span&gt;:&lt;span class=&#34;built_in&#34;&gt;number&lt;/span&gt;,&lt;span class=&#34;attr&#34;&gt;b&lt;/span&gt;:&lt;span class=&#34;built_in&#34;&gt;string&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; a+b &lt;span class=&#34;comment&#34;&gt;//ide会推断这里的返回值为string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;4-关键字type和联合类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-关键字type和联合类型&#34;&gt;#&lt;/a&gt; 4. 关键字 type 和联合类型&lt;/h3&gt;
&lt;p&gt;利用 type 给类型取一个别名，type 可以与联合类型一起使用&lt;/p&gt;
&lt;figure class=&#34;highlight typescript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;type&lt;/span&gt; str1 = &lt;span class=&#34;built_in&#34;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;a&lt;/span&gt;:str1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;type&lt;/span&gt; t = &lt;span class=&#34;built_in&#34;&gt;number&lt;/span&gt; | str1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;b&lt;/span&gt;:t&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;type&lt;/span&gt; funType = &lt;span class=&#34;built_in&#34;&gt;number&lt;/span&gt; | &lt;span class=&#34;built_in&#34;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;fun&lt;/span&gt; = (&lt;span class=&#34;params&#34;&gt;a:funType&lt;/span&gt;)=&amp;gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;二-接口&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二-接口&#34;&gt;#&lt;/a&gt; 二、接口&lt;/h2&gt;
&lt;p&gt;如果一个对象会重复使用，则可以使用将其抽出写成接口。&lt;/p&gt;
&lt;figure class=&#34;highlight typescript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Iobj&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;a&lt;/span&gt;:&lt;span class=&#34;built_in&#34;&gt;number&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;b&lt;/span&gt;:&lt;span class=&#34;built_in&#34;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;span class=&#34;comment&#34;&gt;//接口与对象不同，属性之间可不加逗号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; fun=(&lt;span class=&#34;attr&#34;&gt;b&lt;/span&gt;:&lt;span class=&#34;title class_&#34;&gt;Iobj&lt;/span&gt;):&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;void&lt;/span&gt;=&amp;gt;&lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;1-接口属性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-接口属性&#34;&gt;#&lt;/a&gt; 1. 接口属性&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;可选属性：如果函数的形参对象中的某些属性是可选的。比如在使用 axios 时，传入的配置对象中 method 属性是可选属性如果不传默认是 get。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight typescript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Iobj&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    a?:&lt;span class=&#34;built_in&#34;&gt;number&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;b&lt;/span&gt;:&lt;span class=&#34;built_in&#34;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;span class=&#34;comment&#34;&gt;//a是可选属性，可不传。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; fun=(&lt;span class=&#34;attr&#34;&gt;b&lt;/span&gt;:&lt;span class=&#34;title class_&#34;&gt;Iobj&lt;/span&gt;):&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;void&lt;/span&gt;=&amp;gt;&lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; fun=(&amp;#123;a=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,b&amp;#125;:&lt;span class=&#34;title class_&#34;&gt;Iobj&lt;/span&gt;):&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;void&lt;/span&gt;=&amp;gt;&lt;/span&gt;&amp;#123;&amp;#125; &lt;span class=&#34;comment&#34;&gt;//如果想给a一个默认值，如果没传就使用默认值的话&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;只读属性：如果接口中的某些属性不可修改，只读的话则可以使用只读属性&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight typescript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Iobj&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;readonly&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;a&lt;/span&gt;:&lt;span class=&#34;built_in&#34;&gt;number&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;readonly&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;b&lt;/span&gt;:&lt;span class=&#34;built_in&#34;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; fun=(&amp;#123;a,b&amp;#125;:&lt;span class=&#34;title class_&#34;&gt;Iobj&lt;/span&gt;):&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;void&lt;/span&gt;=&amp;gt;&lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;索引类型：索引签名允许我们定义一个可以包含不同属性名称的动态对象并且固定属性的类型必须与索引类型相同或是其子级。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight typescript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Iobj&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;a&lt;/span&gt;:&lt;span class=&#34;built_in&#34;&gt;number&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;b&lt;/span&gt;:&lt;span class=&#34;built_in&#34;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    [&lt;span class=&#34;attr&#34;&gt;propName&lt;/span&gt;: &lt;span class=&#34;built_in&#34;&gt;string&lt;/span&gt;]: &lt;span class=&#34;built_in&#34;&gt;any&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; fun=(&lt;span class=&#34;attr&#34;&gt;abc&lt;/span&gt;:&lt;span class=&#34;title class_&#34;&gt;Iobj&lt;/span&gt;):&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;void&lt;/span&gt;=&amp;gt;&lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
    </channel>
</rss>
